
Procedure3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000048  00800200  0000080a  0000089e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000080a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800248  00800248  000008e6  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000008e6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000944  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000068  00000000  00000000  00000984  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000100b  00000000  00000000  000009ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d26  00000000  00000000  000019f7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000599  00000000  00000000  0000271d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000e4  00000000  00000000  00002cb8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000655  00000000  00000000  00002d9c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000001a2  00000000  00000000  000033f1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000058  00000000  00000000  00003593  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	ea e0       	ldi	r30, 0x0A	; 10
  fc:	f8 e0       	ldi	r31, 0x08	; 8
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a8 34       	cpi	r26, 0x48	; 72
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	a8 e4       	ldi	r26, 0x48	; 72
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	ae 34       	cpi	r26, 0x4E	; 78
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	6a d0       	rcall	.+212    	; 0x1f4 <main>
 120:	72 c3       	rjmp	.+1764   	; 0x806 <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <uart_putchar>:
	value = (upper << 8) | lower;		// combine the upper and lower bits here to form a 10-bit number
	
	ADCSRA = ADCSRA | 0x10;	// clear the conversion flag
	
	return value;			// send back the 8-bit result
}
 124:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7c00c0>
 128:	95 ff       	sbrs	r25, 5
 12a:	fc cf       	rjmp	.-8      	; 0x124 <uart_putchar>
 12c:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7c00c6>
 130:	80 e0       	ldi	r24, 0x00	; 0
 132:	90 e0       	ldi	r25, 0x00	; 0
 134:	08 95       	ret

00000136 <uart_getch>:
 136:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7c00c0>
 13a:	88 23       	and	r24, r24
 13c:	e4 f7       	brge	.-8      	; 0x136 <uart_getch>
 13e:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7c00c6>
 142:	90 e0       	ldi	r25, 0x00	; 0
 144:	08 95       	ret

00000146 <init_UART>:
 146:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7c00c0>
 14a:	88 e1       	ldi	r24, 0x18	; 24
 14c:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7c00c1>
 150:	86 e0       	ldi	r24, 0x06	; 6
 152:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7c00c2>
 156:	87 e6       	ldi	r24, 0x67	; 103
 158:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7c00c4>
 15c:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7c00c5>
 160:	e8 e4       	ldi	r30, 0x48	; 72
 162:	f2 e0       	ldi	r31, 0x02	; 2
 164:	80 e0       	ldi	r24, 0x00	; 0
 166:	92 e0       	ldi	r25, 0x02	; 2
 168:	93 83       	std	Z+3, r25	; 0x03
 16a:	82 83       	std	Z+2, r24	; 0x02
 16c:	91 83       	std	Z+1, r25	; 0x01
 16e:	80 83       	st	Z, r24
 170:	08 95       	ret

00000172 <init_ADC>:
 172:	ec e7       	ldi	r30, 0x7C	; 124
 174:	f0 e0       	ldi	r31, 0x00	; 0
 176:	80 e4       	ldi	r24, 0x40	; 64
 178:	80 83       	st	Z, r24
 17a:	80 81       	ld	r24, Z
 17c:	80 83       	st	Z, r24
 17e:	80 81       	ld	r24, Z
 180:	80 62       	ori	r24, 0x20	; 32
 182:	80 83       	st	Z, r24
 184:	ea e7       	ldi	r30, 0x7A	; 122
 186:	f0 e0       	ldi	r31, 0x00	; 0
 188:	87 e0       	ldi	r24, 0x07	; 7
 18a:	80 83       	st	Z, r24
 18c:	80 81       	ld	r24, Z
 18e:	80 68       	ori	r24, 0x80	; 128
 190:	80 83       	st	Z, r24
 192:	08 95       	ret

00000194 <init_ADC_for_10bits>:
 194:	ec e7       	ldi	r30, 0x7C	; 124
 196:	f0 e0       	ldi	r31, 0x00	; 0
 198:	80 e4       	ldi	r24, 0x40	; 64
 19a:	80 83       	st	Z, r24
 19c:	80 81       	ld	r24, Z
 19e:	80 83       	st	Z, r24
 1a0:	80 81       	ld	r24, Z
 1a2:	8f 7d       	andi	r24, 0xDF	; 223
 1a4:	80 83       	st	Z, r24
 1a6:	ea e7       	ldi	r30, 0x7A	; 122
 1a8:	f0 e0       	ldi	r31, 0x00	; 0
 1aa:	87 e0       	ldi	r24, 0x07	; 7
 1ac:	80 83       	st	Z, r24
 1ae:	80 81       	ld	r24, Z
 1b0:	80 68       	ori	r24, 0x80	; 128
 1b2:	80 83       	st	Z, r24
 1b4:	08 95       	ret

000001b6 <read_10bit_ADC_channel>:
uint16_t read_10bit_ADC_channel(uint8_t channel)
{
	uint8_t upper, lower;
	uint16_t value;			// 16-bit value to hold the result
	
	ADMUX = ADMUX & 0xE0;		// clear the channel data
 1b6:	ec e7       	ldi	r30, 0x7C	; 124
 1b8:	f0 e0       	ldi	r31, 0x00	; 0
 1ba:	90 81       	ld	r25, Z
 1bc:	90 7e       	andi	r25, 0xE0	; 224
 1be:	90 83       	st	Z, r25
	
	ADMUX = ADMUX | channel;	// add the channel data here!
 1c0:	90 81       	ld	r25, Z
 1c2:	89 2b       	or	r24, r25
 1c4:	80 83       	st	Z, r24

	ADCSRA = ADCSRA | 0x40;	// start a conversion
 1c6:	ea e7       	ldi	r30, 0x7A	; 122
 1c8:	f0 e0       	ldi	r31, 0x00	; 0
 1ca:	80 81       	ld	r24, Z
 1cc:	80 64       	ori	r24, 0x40	; 64
 1ce:	80 83       	st	Z, r24
	
	while( (ADCSRA & 0x10) == 0 )	// wait for conversion to be completed
 1d0:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
 1d4:	84 ff       	sbrs	r24, 4
 1d6:	fc cf       	rjmp	.-8      	; 0x1d0 <read_10bit_ADC_channel+0x1a>
	{
	}

	lower = ADCL;		// get the lower 8-bits of the conversion
 1d8:	30 91 78 00 	lds	r19, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7c0078>
	upper = ADCH;		// get the upper 2 bits
 1dc:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7c0079>
	
	value = (upper << 8) | lower;;		// combine the upper and lower bits here to form a 10-bit number
 1e0:	90 e0       	ldi	r25, 0x00	; 0
 1e2:	98 2f       	mov	r25, r24
 1e4:	88 27       	eor	r24, r24

	ADCSRA = ADCSRA | 0x10;	// clear the conversion flag
 1e6:	ea e7       	ldi	r30, 0x7A	; 122
 1e8:	f0 e0       	ldi	r31, 0x00	; 0
 1ea:	20 81       	ld	r18, Z
 1ec:	20 61       	ori	r18, 0x10	; 16
 1ee:	20 83       	st	Z, r18
	
	return value;			// send back the 10-bit result
}
 1f0:	83 2b       	or	r24, r19
 1f2:	08 95       	ret

000001f4 <main>:
{
	uint16_t ADC_result0;
	uint16_t ADC_result1;
	uint16_t ADC_result2;
	
	init_UART();		// initialize the UART for 9600, N, 8, 1
 1f4:	a8 df       	rcall	.-176    	; 0x146 <init_UART>
	init_ADC();		// initialize ADC
 1f6:	bd df       	rcall	.-134    	; 0x172 <init_ADC>
	init_ADC_for_10bits();
 1f8:	cd df       	rcall	.-102    	; 0x194 <init_ADC_for_10bits>
 1fa:	8e e0       	ldi	r24, 0x0E	; 14
	
	printf("ADC Test Program\n\r");
 1fc:	92 e0       	ldi	r25, 0x02	; 2
 1fe:	9f 93       	push	r25
 200:	8f 93       	push	r24
 202:	41 d0       	rcall	.+130    	; 0x286 <printf>
 204:	0f 90       	pop	r0
 206:	0f 90       	pop	r0

	while(1)
	{
		ADC_result0 = read_10bit_ADC_channel(0);		// reads the latest ADC channel
 208:	80 e0       	ldi	r24, 0x00	; 0
 20a:	d5 df       	rcall	.-86     	; 0x1b6 <read_10bit_ADC_channel>
 20c:	9f 93       	push	r25
		printf("ADC0 = %u \r\n", ADC_result0);	// displays the latest ADC result
 20e:	8f 93       	push	r24
 210:	81 e2       	ldi	r24, 0x21	; 33
 212:	92 e0       	ldi	r25, 0x02	; 2
 214:	9f 93       	push	r25
 216:	8f 93       	push	r24
 218:	36 d0       	rcall	.+108    	; 0x286 <printf>
 21a:	2f ef       	ldi	r18, 0xFF	; 255
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 21c:	81 ee       	ldi	r24, 0xE1	; 225
 21e:	94 e0       	ldi	r25, 0x04	; 4
 220:	21 50       	subi	r18, 0x01	; 1
 222:	80 40       	sbci	r24, 0x00	; 0
 224:	90 40       	sbci	r25, 0x00	; 0
 226:	e1 f7       	brne	.-8      	; 0x220 <main+0x2c>
 228:	00 c0       	rjmp	.+0      	; 0x22a <main+0x36>
 22a:	00 00       	nop
		_delay_ms(100);			// delay for 100ms
		
		ADC_result1 = read_10bit_ADC_channel(1);		// reads the latest ADC channel
 22c:	81 e0       	ldi	r24, 0x01	; 1
 22e:	c3 df       	rcall	.-122    	; 0x1b6 <read_10bit_ADC_channel>
		printf("ADC1 = %u \r\n", ADC_result1);	// displays the latest ADC result
 230:	9f 93       	push	r25
 232:	8f 93       	push	r24
 234:	8e e2       	ldi	r24, 0x2E	; 46
 236:	92 e0       	ldi	r25, 0x02	; 2
 238:	9f 93       	push	r25
 23a:	8f 93       	push	r24
 23c:	24 d0       	rcall	.+72     	; 0x286 <printf>
 23e:	2f ef       	ldi	r18, 0xFF	; 255
 240:	81 ee       	ldi	r24, 0xE1	; 225
 242:	94 e0       	ldi	r25, 0x04	; 4
 244:	21 50       	subi	r18, 0x01	; 1
 246:	80 40       	sbci	r24, 0x00	; 0
 248:	90 40       	sbci	r25, 0x00	; 0
 24a:	e1 f7       	brne	.-8      	; 0x244 <main+0x50>
 24c:	00 c0       	rjmp	.+0      	; 0x24e <main+0x5a>
 24e:	00 00       	nop
		_delay_ms(100);			// delay for 100ms
		
		ADC_result2 = read_10bit_ADC_channel(2);		// reads the latest ADC channel
 250:	82 e0       	ldi	r24, 0x02	; 2
 252:	b1 df       	rcall	.-158    	; 0x1b6 <read_10bit_ADC_channel>
		printf("ADC2 = %u \r\n", ADC_result2);	// displays the latest ADC result
 254:	9f 93       	push	r25
 256:	8f 93       	push	r24
 258:	8b e3       	ldi	r24, 0x3B	; 59
 25a:	92 e0       	ldi	r25, 0x02	; 2
 25c:	9f 93       	push	r25
 25e:	8f 93       	push	r24
 260:	12 d0       	rcall	.+36     	; 0x286 <printf>
 262:	2f ef       	ldi	r18, 0xFF	; 255
 264:	81 ee       	ldi	r24, 0xE1	; 225
 266:	94 e0       	ldi	r25, 0x04	; 4
 268:	21 50       	subi	r18, 0x01	; 1
 26a:	80 40       	sbci	r24, 0x00	; 0
 26c:	90 40       	sbci	r25, 0x00	; 0
 26e:	e1 f7       	brne	.-8      	; 0x268 <main+0x74>
 270:	00 c0       	rjmp	.+0      	; 0x272 <main+0x7e>
 272:	00 00       	nop
 274:	8d b7       	in	r24, 0x3d	; 61
 276:	9e b7       	in	r25, 0x3e	; 62
 278:	0c 96       	adiw	r24, 0x0c	; 12
 27a:	0f b6       	in	r0, 0x3f	; 63
 27c:	f8 94       	cli
 27e:	9e bf       	out	0x3e, r25	; 62
 280:	0f be       	out	0x3f, r0	; 63
 282:	8d bf       	out	0x3d, r24	; 61
 284:	c1 cf       	rjmp	.-126    	; 0x208 <main+0x14>

00000286 <printf>:
 286:	cf 93       	push	r28
 288:	df 93       	push	r29
 28a:	cd b7       	in	r28, 0x3d	; 61
 28c:	de b7       	in	r29, 0x3e	; 62
 28e:	ae 01       	movw	r20, r28
 290:	4a 5f       	subi	r20, 0xFA	; 250
 292:	5f 4f       	sbci	r21, 0xFF	; 255
 294:	fa 01       	movw	r30, r20
 296:	61 91       	ld	r22, Z+
 298:	71 91       	ld	r23, Z+
 29a:	af 01       	movw	r20, r30
 29c:	80 91 4a 02 	lds	r24, 0x024A	; 0x80024a <__data_end+0x2>
 2a0:	90 91 4b 02 	lds	r25, 0x024B	; 0x80024b <__data_end+0x3>
 2a4:	03 d0       	rcall	.+6      	; 0x2ac <vfprintf>
 2a6:	df 91       	pop	r29
 2a8:	cf 91       	pop	r28
 2aa:	08 95       	ret

000002ac <vfprintf>:
 2ac:	2f 92       	push	r2
 2ae:	3f 92       	push	r3
 2b0:	4f 92       	push	r4
 2b2:	5f 92       	push	r5
 2b4:	6f 92       	push	r6
 2b6:	7f 92       	push	r7
 2b8:	8f 92       	push	r8
 2ba:	9f 92       	push	r9
 2bc:	af 92       	push	r10
 2be:	bf 92       	push	r11
 2c0:	cf 92       	push	r12
 2c2:	df 92       	push	r13
 2c4:	ef 92       	push	r14
 2c6:	ff 92       	push	r15
 2c8:	0f 93       	push	r16
 2ca:	1f 93       	push	r17
 2cc:	cf 93       	push	r28
 2ce:	df 93       	push	r29
 2d0:	cd b7       	in	r28, 0x3d	; 61
 2d2:	de b7       	in	r29, 0x3e	; 62
 2d4:	2b 97       	sbiw	r28, 0x0b	; 11
 2d6:	0f b6       	in	r0, 0x3f	; 63
 2d8:	f8 94       	cli
 2da:	de bf       	out	0x3e, r29	; 62
 2dc:	0f be       	out	0x3f, r0	; 63
 2de:	cd bf       	out	0x3d, r28	; 61
 2e0:	6c 01       	movw	r12, r24
 2e2:	7b 01       	movw	r14, r22
 2e4:	8a 01       	movw	r16, r20
 2e6:	fc 01       	movw	r30, r24
 2e8:	17 82       	std	Z+7, r1	; 0x07
 2ea:	16 82       	std	Z+6, r1	; 0x06
 2ec:	83 81       	ldd	r24, Z+3	; 0x03
 2ee:	81 ff       	sbrs	r24, 1
 2f0:	bf c1       	rjmp	.+894    	; 0x670 <__LOCK_REGION_LENGTH__+0x270>
 2f2:	ce 01       	movw	r24, r28
 2f4:	01 96       	adiw	r24, 0x01	; 1
 2f6:	3c 01       	movw	r6, r24
 2f8:	f6 01       	movw	r30, r12
 2fa:	93 81       	ldd	r25, Z+3	; 0x03
 2fc:	f7 01       	movw	r30, r14
 2fe:	93 fd       	sbrc	r25, 3
 300:	85 91       	lpm	r24, Z+
 302:	93 ff       	sbrs	r25, 3
 304:	81 91       	ld	r24, Z+
 306:	7f 01       	movw	r14, r30
 308:	88 23       	and	r24, r24
 30a:	09 f4       	brne	.+2      	; 0x30e <vfprintf+0x62>
 30c:	ad c1       	rjmp	.+858    	; 0x668 <__LOCK_REGION_LENGTH__+0x268>
 30e:	85 32       	cpi	r24, 0x25	; 37
 310:	39 f4       	brne	.+14     	; 0x320 <vfprintf+0x74>
 312:	93 fd       	sbrc	r25, 3
 314:	85 91       	lpm	r24, Z+
 316:	93 ff       	sbrs	r25, 3
 318:	81 91       	ld	r24, Z+
 31a:	7f 01       	movw	r14, r30
 31c:	85 32       	cpi	r24, 0x25	; 37
 31e:	21 f4       	brne	.+8      	; 0x328 <vfprintf+0x7c>
 320:	b6 01       	movw	r22, r12
 322:	90 e0       	ldi	r25, 0x00	; 0
 324:	d6 d1       	rcall	.+940    	; 0x6d2 <fputc>
 326:	e8 cf       	rjmp	.-48     	; 0x2f8 <vfprintf+0x4c>
 328:	91 2c       	mov	r9, r1
 32a:	21 2c       	mov	r2, r1
 32c:	31 2c       	mov	r3, r1
 32e:	ff e1       	ldi	r31, 0x1F	; 31
 330:	f3 15       	cp	r31, r3
 332:	d8 f0       	brcs	.+54     	; 0x36a <vfprintf+0xbe>
 334:	8b 32       	cpi	r24, 0x2B	; 43
 336:	79 f0       	breq	.+30     	; 0x356 <vfprintf+0xaa>
 338:	38 f4       	brcc	.+14     	; 0x348 <vfprintf+0x9c>
 33a:	80 32       	cpi	r24, 0x20	; 32
 33c:	79 f0       	breq	.+30     	; 0x35c <vfprintf+0xb0>
 33e:	83 32       	cpi	r24, 0x23	; 35
 340:	a1 f4       	brne	.+40     	; 0x36a <vfprintf+0xbe>
 342:	23 2d       	mov	r18, r3
 344:	20 61       	ori	r18, 0x10	; 16
 346:	1d c0       	rjmp	.+58     	; 0x382 <vfprintf+0xd6>
 348:	8d 32       	cpi	r24, 0x2D	; 45
 34a:	61 f0       	breq	.+24     	; 0x364 <vfprintf+0xb8>
 34c:	80 33       	cpi	r24, 0x30	; 48
 34e:	69 f4       	brne	.+26     	; 0x36a <vfprintf+0xbe>
 350:	23 2d       	mov	r18, r3
 352:	21 60       	ori	r18, 0x01	; 1
 354:	16 c0       	rjmp	.+44     	; 0x382 <vfprintf+0xd6>
 356:	83 2d       	mov	r24, r3
 358:	82 60       	ori	r24, 0x02	; 2
 35a:	38 2e       	mov	r3, r24
 35c:	e3 2d       	mov	r30, r3
 35e:	e4 60       	ori	r30, 0x04	; 4
 360:	3e 2e       	mov	r3, r30
 362:	2a c0       	rjmp	.+84     	; 0x3b8 <vfprintf+0x10c>
 364:	f3 2d       	mov	r31, r3
 366:	f8 60       	ori	r31, 0x08	; 8
 368:	1d c0       	rjmp	.+58     	; 0x3a4 <vfprintf+0xf8>
 36a:	37 fc       	sbrc	r3, 7
 36c:	2d c0       	rjmp	.+90     	; 0x3c8 <vfprintf+0x11c>
 36e:	20 ed       	ldi	r18, 0xD0	; 208
 370:	28 0f       	add	r18, r24
 372:	2a 30       	cpi	r18, 0x0A	; 10
 374:	40 f0       	brcs	.+16     	; 0x386 <vfprintf+0xda>
 376:	8e 32       	cpi	r24, 0x2E	; 46
 378:	b9 f4       	brne	.+46     	; 0x3a8 <vfprintf+0xfc>
 37a:	36 fc       	sbrc	r3, 6
 37c:	75 c1       	rjmp	.+746    	; 0x668 <__LOCK_REGION_LENGTH__+0x268>
 37e:	23 2d       	mov	r18, r3
 380:	20 64       	ori	r18, 0x40	; 64
 382:	32 2e       	mov	r3, r18
 384:	19 c0       	rjmp	.+50     	; 0x3b8 <vfprintf+0x10c>
 386:	36 fe       	sbrs	r3, 6
 388:	06 c0       	rjmp	.+12     	; 0x396 <vfprintf+0xea>
 38a:	8a e0       	ldi	r24, 0x0A	; 10
 38c:	98 9e       	mul	r9, r24
 38e:	20 0d       	add	r18, r0
 390:	11 24       	eor	r1, r1
 392:	92 2e       	mov	r9, r18
 394:	11 c0       	rjmp	.+34     	; 0x3b8 <vfprintf+0x10c>
 396:	ea e0       	ldi	r30, 0x0A	; 10
 398:	2e 9e       	mul	r2, r30
 39a:	20 0d       	add	r18, r0
 39c:	11 24       	eor	r1, r1
 39e:	22 2e       	mov	r2, r18
 3a0:	f3 2d       	mov	r31, r3
 3a2:	f0 62       	ori	r31, 0x20	; 32
 3a4:	3f 2e       	mov	r3, r31
 3a6:	08 c0       	rjmp	.+16     	; 0x3b8 <vfprintf+0x10c>
 3a8:	8c 36       	cpi	r24, 0x6C	; 108
 3aa:	21 f4       	brne	.+8      	; 0x3b4 <vfprintf+0x108>
 3ac:	83 2d       	mov	r24, r3
 3ae:	80 68       	ori	r24, 0x80	; 128
 3b0:	38 2e       	mov	r3, r24
 3b2:	02 c0       	rjmp	.+4      	; 0x3b8 <vfprintf+0x10c>
 3b4:	88 36       	cpi	r24, 0x68	; 104
 3b6:	41 f4       	brne	.+16     	; 0x3c8 <vfprintf+0x11c>
 3b8:	f7 01       	movw	r30, r14
 3ba:	93 fd       	sbrc	r25, 3
 3bc:	85 91       	lpm	r24, Z+
 3be:	93 ff       	sbrs	r25, 3
 3c0:	81 91       	ld	r24, Z+
 3c2:	7f 01       	movw	r14, r30
 3c4:	81 11       	cpse	r24, r1
 3c6:	b3 cf       	rjmp	.-154    	; 0x32e <vfprintf+0x82>
 3c8:	98 2f       	mov	r25, r24
 3ca:	9f 7d       	andi	r25, 0xDF	; 223
 3cc:	95 54       	subi	r25, 0x45	; 69
 3ce:	93 30       	cpi	r25, 0x03	; 3
 3d0:	28 f4       	brcc	.+10     	; 0x3dc <vfprintf+0x130>
 3d2:	0c 5f       	subi	r16, 0xFC	; 252
 3d4:	1f 4f       	sbci	r17, 0xFF	; 255
 3d6:	9f e3       	ldi	r25, 0x3F	; 63
 3d8:	99 83       	std	Y+1, r25	; 0x01
 3da:	0d c0       	rjmp	.+26     	; 0x3f6 <vfprintf+0x14a>
 3dc:	83 36       	cpi	r24, 0x63	; 99
 3de:	31 f0       	breq	.+12     	; 0x3ec <vfprintf+0x140>
 3e0:	83 37       	cpi	r24, 0x73	; 115
 3e2:	71 f0       	breq	.+28     	; 0x400 <__LOCK_REGION_LENGTH__>
 3e4:	83 35       	cpi	r24, 0x53	; 83
 3e6:	09 f0       	breq	.+2      	; 0x3ea <vfprintf+0x13e>
 3e8:	55 c0       	rjmp	.+170    	; 0x494 <__LOCK_REGION_LENGTH__+0x94>
 3ea:	20 c0       	rjmp	.+64     	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 3ec:	f8 01       	movw	r30, r16
 3ee:	80 81       	ld	r24, Z
 3f0:	89 83       	std	Y+1, r24	; 0x01
 3f2:	0e 5f       	subi	r16, 0xFE	; 254
 3f4:	1f 4f       	sbci	r17, 0xFF	; 255
 3f6:	88 24       	eor	r8, r8
 3f8:	83 94       	inc	r8
 3fa:	91 2c       	mov	r9, r1
 3fc:	53 01       	movw	r10, r6
 3fe:	12 c0       	rjmp	.+36     	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
 400:	28 01       	movw	r4, r16
 402:	f2 e0       	ldi	r31, 0x02	; 2
 404:	4f 0e       	add	r4, r31
 406:	51 1c       	adc	r5, r1
 408:	f8 01       	movw	r30, r16
 40a:	a0 80       	ld	r10, Z
 40c:	b1 80       	ldd	r11, Z+1	; 0x01
 40e:	36 fe       	sbrs	r3, 6
 410:	03 c0       	rjmp	.+6      	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 412:	69 2d       	mov	r22, r9
 414:	70 e0       	ldi	r23, 0x00	; 0
 416:	02 c0       	rjmp	.+4      	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 418:	6f ef       	ldi	r22, 0xFF	; 255
 41a:	7f ef       	ldi	r23, 0xFF	; 255
 41c:	c5 01       	movw	r24, r10
 41e:	4e d1       	rcall	.+668    	; 0x6bc <strnlen>
 420:	4c 01       	movw	r8, r24
 422:	82 01       	movw	r16, r4
 424:	f3 2d       	mov	r31, r3
 426:	ff 77       	andi	r31, 0x7F	; 127
 428:	3f 2e       	mov	r3, r31
 42a:	15 c0       	rjmp	.+42     	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
 42c:	28 01       	movw	r4, r16
 42e:	22 e0       	ldi	r18, 0x02	; 2
 430:	42 0e       	add	r4, r18
 432:	51 1c       	adc	r5, r1
 434:	f8 01       	movw	r30, r16
 436:	a0 80       	ld	r10, Z
 438:	b1 80       	ldd	r11, Z+1	; 0x01
 43a:	36 fe       	sbrs	r3, 6
 43c:	03 c0       	rjmp	.+6      	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 43e:	69 2d       	mov	r22, r9
 440:	70 e0       	ldi	r23, 0x00	; 0
 442:	02 c0       	rjmp	.+4      	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
 444:	6f ef       	ldi	r22, 0xFF	; 255
 446:	7f ef       	ldi	r23, 0xFF	; 255
 448:	c5 01       	movw	r24, r10
 44a:	2d d1       	rcall	.+602    	; 0x6a6 <strnlen_P>
 44c:	4c 01       	movw	r8, r24
 44e:	f3 2d       	mov	r31, r3
 450:	f0 68       	ori	r31, 0x80	; 128
 452:	3f 2e       	mov	r3, r31
 454:	82 01       	movw	r16, r4
 456:	33 fc       	sbrc	r3, 3
 458:	19 c0       	rjmp	.+50     	; 0x48c <__LOCK_REGION_LENGTH__+0x8c>
 45a:	82 2d       	mov	r24, r2
 45c:	90 e0       	ldi	r25, 0x00	; 0
 45e:	88 16       	cp	r8, r24
 460:	99 06       	cpc	r9, r25
 462:	a0 f4       	brcc	.+40     	; 0x48c <__LOCK_REGION_LENGTH__+0x8c>
 464:	b6 01       	movw	r22, r12
 466:	80 e2       	ldi	r24, 0x20	; 32
 468:	90 e0       	ldi	r25, 0x00	; 0
 46a:	33 d1       	rcall	.+614    	; 0x6d2 <fputc>
 46c:	2a 94       	dec	r2
 46e:	f5 cf       	rjmp	.-22     	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
 470:	f5 01       	movw	r30, r10
 472:	37 fc       	sbrc	r3, 7
 474:	85 91       	lpm	r24, Z+
 476:	37 fe       	sbrs	r3, 7
 478:	81 91       	ld	r24, Z+
 47a:	5f 01       	movw	r10, r30
 47c:	b6 01       	movw	r22, r12
 47e:	90 e0       	ldi	r25, 0x00	; 0
 480:	28 d1       	rcall	.+592    	; 0x6d2 <fputc>
 482:	21 10       	cpse	r2, r1
 484:	2a 94       	dec	r2
 486:	21 e0       	ldi	r18, 0x01	; 1
 488:	82 1a       	sub	r8, r18
 48a:	91 08       	sbc	r9, r1
 48c:	81 14       	cp	r8, r1
 48e:	91 04       	cpc	r9, r1
 490:	79 f7       	brne	.-34     	; 0x470 <__LOCK_REGION_LENGTH__+0x70>
 492:	e1 c0       	rjmp	.+450    	; 0x656 <__LOCK_REGION_LENGTH__+0x256>
 494:	84 36       	cpi	r24, 0x64	; 100
 496:	11 f0       	breq	.+4      	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
 498:	89 36       	cpi	r24, 0x69	; 105
 49a:	39 f5       	brne	.+78     	; 0x4ea <__LOCK_REGION_LENGTH__+0xea>
 49c:	f8 01       	movw	r30, r16
 49e:	37 fe       	sbrs	r3, 7
 4a0:	07 c0       	rjmp	.+14     	; 0x4b0 <__LOCK_REGION_LENGTH__+0xb0>
 4a2:	60 81       	ld	r22, Z
 4a4:	71 81       	ldd	r23, Z+1	; 0x01
 4a6:	82 81       	ldd	r24, Z+2	; 0x02
 4a8:	93 81       	ldd	r25, Z+3	; 0x03
 4aa:	0c 5f       	subi	r16, 0xFC	; 252
 4ac:	1f 4f       	sbci	r17, 0xFF	; 255
 4ae:	08 c0       	rjmp	.+16     	; 0x4c0 <__LOCK_REGION_LENGTH__+0xc0>
 4b0:	60 81       	ld	r22, Z
 4b2:	71 81       	ldd	r23, Z+1	; 0x01
 4b4:	07 2e       	mov	r0, r23
 4b6:	00 0c       	add	r0, r0
 4b8:	88 0b       	sbc	r24, r24
 4ba:	99 0b       	sbc	r25, r25
 4bc:	0e 5f       	subi	r16, 0xFE	; 254
 4be:	1f 4f       	sbci	r17, 0xFF	; 255
 4c0:	f3 2d       	mov	r31, r3
 4c2:	ff 76       	andi	r31, 0x6F	; 111
 4c4:	3f 2e       	mov	r3, r31
 4c6:	97 ff       	sbrs	r25, 7
 4c8:	09 c0       	rjmp	.+18     	; 0x4dc <__LOCK_REGION_LENGTH__+0xdc>
 4ca:	90 95       	com	r25
 4cc:	80 95       	com	r24
 4ce:	70 95       	com	r23
 4d0:	61 95       	neg	r22
 4d2:	7f 4f       	sbci	r23, 0xFF	; 255
 4d4:	8f 4f       	sbci	r24, 0xFF	; 255
 4d6:	9f 4f       	sbci	r25, 0xFF	; 255
 4d8:	f0 68       	ori	r31, 0x80	; 128
 4da:	3f 2e       	mov	r3, r31
 4dc:	2a e0       	ldi	r18, 0x0A	; 10
 4de:	30 e0       	ldi	r19, 0x00	; 0
 4e0:	a3 01       	movw	r20, r6
 4e2:	33 d1       	rcall	.+614    	; 0x74a <__ultoa_invert>
 4e4:	88 2e       	mov	r8, r24
 4e6:	86 18       	sub	r8, r6
 4e8:	44 c0       	rjmp	.+136    	; 0x572 <__LOCK_REGION_LENGTH__+0x172>
 4ea:	85 37       	cpi	r24, 0x75	; 117
 4ec:	31 f4       	brne	.+12     	; 0x4fa <__LOCK_REGION_LENGTH__+0xfa>
 4ee:	23 2d       	mov	r18, r3
 4f0:	2f 7e       	andi	r18, 0xEF	; 239
 4f2:	b2 2e       	mov	r11, r18
 4f4:	2a e0       	ldi	r18, 0x0A	; 10
 4f6:	30 e0       	ldi	r19, 0x00	; 0
 4f8:	25 c0       	rjmp	.+74     	; 0x544 <__LOCK_REGION_LENGTH__+0x144>
 4fa:	93 2d       	mov	r25, r3
 4fc:	99 7f       	andi	r25, 0xF9	; 249
 4fe:	b9 2e       	mov	r11, r25
 500:	8f 36       	cpi	r24, 0x6F	; 111
 502:	c1 f0       	breq	.+48     	; 0x534 <__LOCK_REGION_LENGTH__+0x134>
 504:	18 f4       	brcc	.+6      	; 0x50c <__LOCK_REGION_LENGTH__+0x10c>
 506:	88 35       	cpi	r24, 0x58	; 88
 508:	79 f0       	breq	.+30     	; 0x528 <__LOCK_REGION_LENGTH__+0x128>
 50a:	ae c0       	rjmp	.+348    	; 0x668 <__LOCK_REGION_LENGTH__+0x268>
 50c:	80 37       	cpi	r24, 0x70	; 112
 50e:	19 f0       	breq	.+6      	; 0x516 <__LOCK_REGION_LENGTH__+0x116>
 510:	88 37       	cpi	r24, 0x78	; 120
 512:	21 f0       	breq	.+8      	; 0x51c <__LOCK_REGION_LENGTH__+0x11c>
 514:	a9 c0       	rjmp	.+338    	; 0x668 <__LOCK_REGION_LENGTH__+0x268>
 516:	e9 2f       	mov	r30, r25
 518:	e0 61       	ori	r30, 0x10	; 16
 51a:	be 2e       	mov	r11, r30
 51c:	b4 fe       	sbrs	r11, 4
 51e:	0d c0       	rjmp	.+26     	; 0x53a <__LOCK_REGION_LENGTH__+0x13a>
 520:	fb 2d       	mov	r31, r11
 522:	f4 60       	ori	r31, 0x04	; 4
 524:	bf 2e       	mov	r11, r31
 526:	09 c0       	rjmp	.+18     	; 0x53a <__LOCK_REGION_LENGTH__+0x13a>
 528:	34 fe       	sbrs	r3, 4
 52a:	0a c0       	rjmp	.+20     	; 0x540 <__LOCK_REGION_LENGTH__+0x140>
 52c:	29 2f       	mov	r18, r25
 52e:	26 60       	ori	r18, 0x06	; 6
 530:	b2 2e       	mov	r11, r18
 532:	06 c0       	rjmp	.+12     	; 0x540 <__LOCK_REGION_LENGTH__+0x140>
 534:	28 e0       	ldi	r18, 0x08	; 8
 536:	30 e0       	ldi	r19, 0x00	; 0
 538:	05 c0       	rjmp	.+10     	; 0x544 <__LOCK_REGION_LENGTH__+0x144>
 53a:	20 e1       	ldi	r18, 0x10	; 16
 53c:	30 e0       	ldi	r19, 0x00	; 0
 53e:	02 c0       	rjmp	.+4      	; 0x544 <__LOCK_REGION_LENGTH__+0x144>
 540:	20 e1       	ldi	r18, 0x10	; 16
 542:	32 e0       	ldi	r19, 0x02	; 2
 544:	f8 01       	movw	r30, r16
 546:	b7 fe       	sbrs	r11, 7
 548:	07 c0       	rjmp	.+14     	; 0x558 <__LOCK_REGION_LENGTH__+0x158>
 54a:	60 81       	ld	r22, Z
 54c:	71 81       	ldd	r23, Z+1	; 0x01
 54e:	82 81       	ldd	r24, Z+2	; 0x02
 550:	93 81       	ldd	r25, Z+3	; 0x03
 552:	0c 5f       	subi	r16, 0xFC	; 252
 554:	1f 4f       	sbci	r17, 0xFF	; 255
 556:	06 c0       	rjmp	.+12     	; 0x564 <__LOCK_REGION_LENGTH__+0x164>
 558:	60 81       	ld	r22, Z
 55a:	71 81       	ldd	r23, Z+1	; 0x01
 55c:	80 e0       	ldi	r24, 0x00	; 0
 55e:	90 e0       	ldi	r25, 0x00	; 0
 560:	0e 5f       	subi	r16, 0xFE	; 254
 562:	1f 4f       	sbci	r17, 0xFF	; 255
 564:	a3 01       	movw	r20, r6
 566:	f1 d0       	rcall	.+482    	; 0x74a <__ultoa_invert>
 568:	88 2e       	mov	r8, r24
 56a:	86 18       	sub	r8, r6
 56c:	fb 2d       	mov	r31, r11
 56e:	ff 77       	andi	r31, 0x7F	; 127
 570:	3f 2e       	mov	r3, r31
 572:	36 fe       	sbrs	r3, 6
 574:	0d c0       	rjmp	.+26     	; 0x590 <__LOCK_REGION_LENGTH__+0x190>
 576:	23 2d       	mov	r18, r3
 578:	2e 7f       	andi	r18, 0xFE	; 254
 57a:	a2 2e       	mov	r10, r18
 57c:	89 14       	cp	r8, r9
 57e:	58 f4       	brcc	.+22     	; 0x596 <__LOCK_REGION_LENGTH__+0x196>
 580:	34 fe       	sbrs	r3, 4
 582:	0b c0       	rjmp	.+22     	; 0x59a <__LOCK_REGION_LENGTH__+0x19a>
 584:	32 fc       	sbrc	r3, 2
 586:	09 c0       	rjmp	.+18     	; 0x59a <__LOCK_REGION_LENGTH__+0x19a>
 588:	83 2d       	mov	r24, r3
 58a:	8e 7e       	andi	r24, 0xEE	; 238
 58c:	a8 2e       	mov	r10, r24
 58e:	05 c0       	rjmp	.+10     	; 0x59a <__LOCK_REGION_LENGTH__+0x19a>
 590:	b8 2c       	mov	r11, r8
 592:	a3 2c       	mov	r10, r3
 594:	03 c0       	rjmp	.+6      	; 0x59c <__LOCK_REGION_LENGTH__+0x19c>
 596:	b8 2c       	mov	r11, r8
 598:	01 c0       	rjmp	.+2      	; 0x59c <__LOCK_REGION_LENGTH__+0x19c>
 59a:	b9 2c       	mov	r11, r9
 59c:	a4 fe       	sbrs	r10, 4
 59e:	0f c0       	rjmp	.+30     	; 0x5be <__LOCK_REGION_LENGTH__+0x1be>
 5a0:	fe 01       	movw	r30, r28
 5a2:	e8 0d       	add	r30, r8
 5a4:	f1 1d       	adc	r31, r1
 5a6:	80 81       	ld	r24, Z
 5a8:	80 33       	cpi	r24, 0x30	; 48
 5aa:	21 f4       	brne	.+8      	; 0x5b4 <__LOCK_REGION_LENGTH__+0x1b4>
 5ac:	9a 2d       	mov	r25, r10
 5ae:	99 7e       	andi	r25, 0xE9	; 233
 5b0:	a9 2e       	mov	r10, r25
 5b2:	09 c0       	rjmp	.+18     	; 0x5c6 <__LOCK_REGION_LENGTH__+0x1c6>
 5b4:	a2 fe       	sbrs	r10, 2
 5b6:	06 c0       	rjmp	.+12     	; 0x5c4 <__LOCK_REGION_LENGTH__+0x1c4>
 5b8:	b3 94       	inc	r11
 5ba:	b3 94       	inc	r11
 5bc:	04 c0       	rjmp	.+8      	; 0x5c6 <__LOCK_REGION_LENGTH__+0x1c6>
 5be:	8a 2d       	mov	r24, r10
 5c0:	86 78       	andi	r24, 0x86	; 134
 5c2:	09 f0       	breq	.+2      	; 0x5c6 <__LOCK_REGION_LENGTH__+0x1c6>
 5c4:	b3 94       	inc	r11
 5c6:	a3 fc       	sbrc	r10, 3
 5c8:	10 c0       	rjmp	.+32     	; 0x5ea <__LOCK_REGION_LENGTH__+0x1ea>
 5ca:	a0 fe       	sbrs	r10, 0
 5cc:	06 c0       	rjmp	.+12     	; 0x5da <__LOCK_REGION_LENGTH__+0x1da>
 5ce:	b2 14       	cp	r11, r2
 5d0:	80 f4       	brcc	.+32     	; 0x5f2 <__LOCK_REGION_LENGTH__+0x1f2>
 5d2:	28 0c       	add	r2, r8
 5d4:	92 2c       	mov	r9, r2
 5d6:	9b 18       	sub	r9, r11
 5d8:	0d c0       	rjmp	.+26     	; 0x5f4 <__LOCK_REGION_LENGTH__+0x1f4>
 5da:	b2 14       	cp	r11, r2
 5dc:	58 f4       	brcc	.+22     	; 0x5f4 <__LOCK_REGION_LENGTH__+0x1f4>
 5de:	b6 01       	movw	r22, r12
 5e0:	80 e2       	ldi	r24, 0x20	; 32
 5e2:	90 e0       	ldi	r25, 0x00	; 0
 5e4:	76 d0       	rcall	.+236    	; 0x6d2 <fputc>
 5e6:	b3 94       	inc	r11
 5e8:	f8 cf       	rjmp	.-16     	; 0x5da <__LOCK_REGION_LENGTH__+0x1da>
 5ea:	b2 14       	cp	r11, r2
 5ec:	18 f4       	brcc	.+6      	; 0x5f4 <__LOCK_REGION_LENGTH__+0x1f4>
 5ee:	2b 18       	sub	r2, r11
 5f0:	02 c0       	rjmp	.+4      	; 0x5f6 <__LOCK_REGION_LENGTH__+0x1f6>
 5f2:	98 2c       	mov	r9, r8
 5f4:	21 2c       	mov	r2, r1
 5f6:	a4 fe       	sbrs	r10, 4
 5f8:	0f c0       	rjmp	.+30     	; 0x618 <__LOCK_REGION_LENGTH__+0x218>
 5fa:	b6 01       	movw	r22, r12
 5fc:	80 e3       	ldi	r24, 0x30	; 48
 5fe:	90 e0       	ldi	r25, 0x00	; 0
 600:	68 d0       	rcall	.+208    	; 0x6d2 <fputc>
 602:	a2 fe       	sbrs	r10, 2
 604:	16 c0       	rjmp	.+44     	; 0x632 <__LOCK_REGION_LENGTH__+0x232>
 606:	a1 fc       	sbrc	r10, 1
 608:	03 c0       	rjmp	.+6      	; 0x610 <__LOCK_REGION_LENGTH__+0x210>
 60a:	88 e7       	ldi	r24, 0x78	; 120
 60c:	90 e0       	ldi	r25, 0x00	; 0
 60e:	02 c0       	rjmp	.+4      	; 0x614 <__LOCK_REGION_LENGTH__+0x214>
 610:	88 e5       	ldi	r24, 0x58	; 88
 612:	90 e0       	ldi	r25, 0x00	; 0
 614:	b6 01       	movw	r22, r12
 616:	0c c0       	rjmp	.+24     	; 0x630 <__LOCK_REGION_LENGTH__+0x230>
 618:	8a 2d       	mov	r24, r10
 61a:	86 78       	andi	r24, 0x86	; 134
 61c:	51 f0       	breq	.+20     	; 0x632 <__LOCK_REGION_LENGTH__+0x232>
 61e:	a1 fe       	sbrs	r10, 1
 620:	02 c0       	rjmp	.+4      	; 0x626 <__LOCK_REGION_LENGTH__+0x226>
 622:	8b e2       	ldi	r24, 0x2B	; 43
 624:	01 c0       	rjmp	.+2      	; 0x628 <__LOCK_REGION_LENGTH__+0x228>
 626:	80 e2       	ldi	r24, 0x20	; 32
 628:	a7 fc       	sbrc	r10, 7
 62a:	8d e2       	ldi	r24, 0x2D	; 45
 62c:	b6 01       	movw	r22, r12
 62e:	90 e0       	ldi	r25, 0x00	; 0
 630:	50 d0       	rcall	.+160    	; 0x6d2 <fputc>
 632:	89 14       	cp	r8, r9
 634:	30 f4       	brcc	.+12     	; 0x642 <__LOCK_REGION_LENGTH__+0x242>
 636:	b6 01       	movw	r22, r12
 638:	80 e3       	ldi	r24, 0x30	; 48
 63a:	90 e0       	ldi	r25, 0x00	; 0
 63c:	4a d0       	rcall	.+148    	; 0x6d2 <fputc>
 63e:	9a 94       	dec	r9
 640:	f8 cf       	rjmp	.-16     	; 0x632 <__LOCK_REGION_LENGTH__+0x232>
 642:	8a 94       	dec	r8
 644:	f3 01       	movw	r30, r6
 646:	e8 0d       	add	r30, r8
 648:	f1 1d       	adc	r31, r1
 64a:	80 81       	ld	r24, Z
 64c:	b6 01       	movw	r22, r12
 64e:	90 e0       	ldi	r25, 0x00	; 0
 650:	40 d0       	rcall	.+128    	; 0x6d2 <fputc>
 652:	81 10       	cpse	r8, r1
 654:	f6 cf       	rjmp	.-20     	; 0x642 <__LOCK_REGION_LENGTH__+0x242>
 656:	22 20       	and	r2, r2
 658:	09 f4       	brne	.+2      	; 0x65c <__LOCK_REGION_LENGTH__+0x25c>
 65a:	4e ce       	rjmp	.-868    	; 0x2f8 <vfprintf+0x4c>
 65c:	b6 01       	movw	r22, r12
 65e:	80 e2       	ldi	r24, 0x20	; 32
 660:	90 e0       	ldi	r25, 0x00	; 0
 662:	37 d0       	rcall	.+110    	; 0x6d2 <fputc>
 664:	2a 94       	dec	r2
 666:	f7 cf       	rjmp	.-18     	; 0x656 <__LOCK_REGION_LENGTH__+0x256>
 668:	f6 01       	movw	r30, r12
 66a:	86 81       	ldd	r24, Z+6	; 0x06
 66c:	97 81       	ldd	r25, Z+7	; 0x07
 66e:	02 c0       	rjmp	.+4      	; 0x674 <__LOCK_REGION_LENGTH__+0x274>
 670:	8f ef       	ldi	r24, 0xFF	; 255
 672:	9f ef       	ldi	r25, 0xFF	; 255
 674:	2b 96       	adiw	r28, 0x0b	; 11
 676:	0f b6       	in	r0, 0x3f	; 63
 678:	f8 94       	cli
 67a:	de bf       	out	0x3e, r29	; 62
 67c:	0f be       	out	0x3f, r0	; 63
 67e:	cd bf       	out	0x3d, r28	; 61
 680:	df 91       	pop	r29
 682:	cf 91       	pop	r28
 684:	1f 91       	pop	r17
 686:	0f 91       	pop	r16
 688:	ff 90       	pop	r15
 68a:	ef 90       	pop	r14
 68c:	df 90       	pop	r13
 68e:	cf 90       	pop	r12
 690:	bf 90       	pop	r11
 692:	af 90       	pop	r10
 694:	9f 90       	pop	r9
 696:	8f 90       	pop	r8
 698:	7f 90       	pop	r7
 69a:	6f 90       	pop	r6
 69c:	5f 90       	pop	r5
 69e:	4f 90       	pop	r4
 6a0:	3f 90       	pop	r3
 6a2:	2f 90       	pop	r2
 6a4:	08 95       	ret

000006a6 <strnlen_P>:
 6a6:	fc 01       	movw	r30, r24
 6a8:	05 90       	lpm	r0, Z+
 6aa:	61 50       	subi	r22, 0x01	; 1
 6ac:	70 40       	sbci	r23, 0x00	; 0
 6ae:	01 10       	cpse	r0, r1
 6b0:	d8 f7       	brcc	.-10     	; 0x6a8 <strnlen_P+0x2>
 6b2:	80 95       	com	r24
 6b4:	90 95       	com	r25
 6b6:	8e 0f       	add	r24, r30
 6b8:	9f 1f       	adc	r25, r31
 6ba:	08 95       	ret

000006bc <strnlen>:
 6bc:	fc 01       	movw	r30, r24
 6be:	61 50       	subi	r22, 0x01	; 1
 6c0:	70 40       	sbci	r23, 0x00	; 0
 6c2:	01 90       	ld	r0, Z+
 6c4:	01 10       	cpse	r0, r1
 6c6:	d8 f7       	brcc	.-10     	; 0x6be <strnlen+0x2>
 6c8:	80 95       	com	r24
 6ca:	90 95       	com	r25
 6cc:	8e 0f       	add	r24, r30
 6ce:	9f 1f       	adc	r25, r31
 6d0:	08 95       	ret

000006d2 <fputc>:
 6d2:	0f 93       	push	r16
 6d4:	1f 93       	push	r17
 6d6:	cf 93       	push	r28
 6d8:	df 93       	push	r29
 6da:	fb 01       	movw	r30, r22
 6dc:	23 81       	ldd	r18, Z+3	; 0x03
 6de:	21 fd       	sbrc	r18, 1
 6e0:	03 c0       	rjmp	.+6      	; 0x6e8 <fputc+0x16>
 6e2:	8f ef       	ldi	r24, 0xFF	; 255
 6e4:	9f ef       	ldi	r25, 0xFF	; 255
 6e6:	2c c0       	rjmp	.+88     	; 0x740 <fputc+0x6e>
 6e8:	22 ff       	sbrs	r18, 2
 6ea:	16 c0       	rjmp	.+44     	; 0x718 <fputc+0x46>
 6ec:	46 81       	ldd	r20, Z+6	; 0x06
 6ee:	57 81       	ldd	r21, Z+7	; 0x07
 6f0:	24 81       	ldd	r18, Z+4	; 0x04
 6f2:	35 81       	ldd	r19, Z+5	; 0x05
 6f4:	42 17       	cp	r20, r18
 6f6:	53 07       	cpc	r21, r19
 6f8:	44 f4       	brge	.+16     	; 0x70a <fputc+0x38>
 6fa:	a0 81       	ld	r26, Z
 6fc:	b1 81       	ldd	r27, Z+1	; 0x01
 6fe:	9d 01       	movw	r18, r26
 700:	2f 5f       	subi	r18, 0xFF	; 255
 702:	3f 4f       	sbci	r19, 0xFF	; 255
 704:	31 83       	std	Z+1, r19	; 0x01
 706:	20 83       	st	Z, r18
 708:	8c 93       	st	X, r24
 70a:	26 81       	ldd	r18, Z+6	; 0x06
 70c:	37 81       	ldd	r19, Z+7	; 0x07
 70e:	2f 5f       	subi	r18, 0xFF	; 255
 710:	3f 4f       	sbci	r19, 0xFF	; 255
 712:	37 83       	std	Z+7, r19	; 0x07
 714:	26 83       	std	Z+6, r18	; 0x06
 716:	14 c0       	rjmp	.+40     	; 0x740 <fputc+0x6e>
 718:	8b 01       	movw	r16, r22
 71a:	ec 01       	movw	r28, r24
 71c:	fb 01       	movw	r30, r22
 71e:	00 84       	ldd	r0, Z+8	; 0x08
 720:	f1 85       	ldd	r31, Z+9	; 0x09
 722:	e0 2d       	mov	r30, r0
 724:	19 95       	eicall
 726:	89 2b       	or	r24, r25
 728:	e1 f6       	brne	.-72     	; 0x6e2 <fputc+0x10>
 72a:	d8 01       	movw	r26, r16
 72c:	16 96       	adiw	r26, 0x06	; 6
 72e:	8d 91       	ld	r24, X+
 730:	9c 91       	ld	r25, X
 732:	17 97       	sbiw	r26, 0x07	; 7
 734:	01 96       	adiw	r24, 0x01	; 1
 736:	17 96       	adiw	r26, 0x07	; 7
 738:	9c 93       	st	X, r25
 73a:	8e 93       	st	-X, r24
 73c:	16 97       	sbiw	r26, 0x06	; 6
 73e:	ce 01       	movw	r24, r28
 740:	df 91       	pop	r29
 742:	cf 91       	pop	r28
 744:	1f 91       	pop	r17
 746:	0f 91       	pop	r16
 748:	08 95       	ret

0000074a <__ultoa_invert>:
 74a:	fa 01       	movw	r30, r20
 74c:	aa 27       	eor	r26, r26
 74e:	28 30       	cpi	r18, 0x08	; 8
 750:	51 f1       	breq	.+84     	; 0x7a6 <__ultoa_invert+0x5c>
 752:	20 31       	cpi	r18, 0x10	; 16
 754:	81 f1       	breq	.+96     	; 0x7b6 <__ultoa_invert+0x6c>
 756:	e8 94       	clt
 758:	6f 93       	push	r22
 75a:	6e 7f       	andi	r22, 0xFE	; 254
 75c:	6e 5f       	subi	r22, 0xFE	; 254
 75e:	7f 4f       	sbci	r23, 0xFF	; 255
 760:	8f 4f       	sbci	r24, 0xFF	; 255
 762:	9f 4f       	sbci	r25, 0xFF	; 255
 764:	af 4f       	sbci	r26, 0xFF	; 255
 766:	b1 e0       	ldi	r27, 0x01	; 1
 768:	3e d0       	rcall	.+124    	; 0x7e6 <__ultoa_invert+0x9c>
 76a:	b4 e0       	ldi	r27, 0x04	; 4
 76c:	3c d0       	rcall	.+120    	; 0x7e6 <__ultoa_invert+0x9c>
 76e:	67 0f       	add	r22, r23
 770:	78 1f       	adc	r23, r24
 772:	89 1f       	adc	r24, r25
 774:	9a 1f       	adc	r25, r26
 776:	a1 1d       	adc	r26, r1
 778:	68 0f       	add	r22, r24
 77a:	79 1f       	adc	r23, r25
 77c:	8a 1f       	adc	r24, r26
 77e:	91 1d       	adc	r25, r1
 780:	a1 1d       	adc	r26, r1
 782:	6a 0f       	add	r22, r26
 784:	71 1d       	adc	r23, r1
 786:	81 1d       	adc	r24, r1
 788:	91 1d       	adc	r25, r1
 78a:	a1 1d       	adc	r26, r1
 78c:	20 d0       	rcall	.+64     	; 0x7ce <__ultoa_invert+0x84>
 78e:	09 f4       	brne	.+2      	; 0x792 <__ultoa_invert+0x48>
 790:	68 94       	set
 792:	3f 91       	pop	r19
 794:	2a e0       	ldi	r18, 0x0A	; 10
 796:	26 9f       	mul	r18, r22
 798:	11 24       	eor	r1, r1
 79a:	30 19       	sub	r19, r0
 79c:	30 5d       	subi	r19, 0xD0	; 208
 79e:	31 93       	st	Z+, r19
 7a0:	de f6       	brtc	.-74     	; 0x758 <__ultoa_invert+0xe>
 7a2:	cf 01       	movw	r24, r30
 7a4:	08 95       	ret
 7a6:	46 2f       	mov	r20, r22
 7a8:	47 70       	andi	r20, 0x07	; 7
 7aa:	40 5d       	subi	r20, 0xD0	; 208
 7ac:	41 93       	st	Z+, r20
 7ae:	b3 e0       	ldi	r27, 0x03	; 3
 7b0:	0f d0       	rcall	.+30     	; 0x7d0 <__ultoa_invert+0x86>
 7b2:	c9 f7       	brne	.-14     	; 0x7a6 <__ultoa_invert+0x5c>
 7b4:	f6 cf       	rjmp	.-20     	; 0x7a2 <__ultoa_invert+0x58>
 7b6:	46 2f       	mov	r20, r22
 7b8:	4f 70       	andi	r20, 0x0F	; 15
 7ba:	40 5d       	subi	r20, 0xD0	; 208
 7bc:	4a 33       	cpi	r20, 0x3A	; 58
 7be:	18 f0       	brcs	.+6      	; 0x7c6 <__ultoa_invert+0x7c>
 7c0:	49 5d       	subi	r20, 0xD9	; 217
 7c2:	31 fd       	sbrc	r19, 1
 7c4:	40 52       	subi	r20, 0x20	; 32
 7c6:	41 93       	st	Z+, r20
 7c8:	02 d0       	rcall	.+4      	; 0x7ce <__ultoa_invert+0x84>
 7ca:	a9 f7       	brne	.-22     	; 0x7b6 <__ultoa_invert+0x6c>
 7cc:	ea cf       	rjmp	.-44     	; 0x7a2 <__ultoa_invert+0x58>
 7ce:	b4 e0       	ldi	r27, 0x04	; 4
 7d0:	a6 95       	lsr	r26
 7d2:	97 95       	ror	r25
 7d4:	87 95       	ror	r24
 7d6:	77 95       	ror	r23
 7d8:	67 95       	ror	r22
 7da:	ba 95       	dec	r27
 7dc:	c9 f7       	brne	.-14     	; 0x7d0 <__ultoa_invert+0x86>
 7de:	00 97       	sbiw	r24, 0x00	; 0
 7e0:	61 05       	cpc	r22, r1
 7e2:	71 05       	cpc	r23, r1
 7e4:	08 95       	ret
 7e6:	9b 01       	movw	r18, r22
 7e8:	ac 01       	movw	r20, r24
 7ea:	0a 2e       	mov	r0, r26
 7ec:	06 94       	lsr	r0
 7ee:	57 95       	ror	r21
 7f0:	47 95       	ror	r20
 7f2:	37 95       	ror	r19
 7f4:	27 95       	ror	r18
 7f6:	ba 95       	dec	r27
 7f8:	c9 f7       	brne	.-14     	; 0x7ec <__ultoa_invert+0xa2>
 7fa:	62 0f       	add	r22, r18
 7fc:	73 1f       	adc	r23, r19
 7fe:	84 1f       	adc	r24, r20
 800:	95 1f       	adc	r25, r21
 802:	a0 1d       	adc	r26, r0
 804:	08 95       	ret

00000806 <_exit>:
 806:	f8 94       	cli

00000808 <__stop_program>:
 808:	ff cf       	rjmp	.-2      	; 0x808 <__stop_program>
