
Procedure4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000003e  00800200  000007a8  0000083c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000007a8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  0080023e  0080023e  0000087a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000087a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000008d8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000068  00000000  00000000  00000918  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000f79  00000000  00000000  00000980  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ce9  00000000  00000000  000018f9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004de  00000000  00000000  000025e2  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000cc  00000000  00000000  00002ac0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005f9  00000000  00000000  00002b8c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000175  00000000  00000000  00003185  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000058  00000000  00000000  000032fa  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e8 ea       	ldi	r30, 0xA8	; 168
  fc:	f7 e0       	ldi	r31, 0x07	; 7
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	ae 33       	cpi	r26, 0x3E	; 62
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	ae e3       	ldi	r26, 0x3E	; 62
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a4 34       	cpi	r26, 0x44	; 68
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	6a d0       	rcall	.+212    	; 0x1f4 <main>
 120:	41 c3       	rjmp	.+1666   	; 0x7a4 <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <uart_putchar>:
	value = (upper << 8) | lower;		// combine the upper and lower bits here to form a 10-bit number
	
	ADCSRA = ADCSRA | 0x10;	// clear the conversion flag
	
	return value;			// send back the 8-bit result
}
 124:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7c00c0>
 128:	95 ff       	sbrs	r25, 5
 12a:	fc cf       	rjmp	.-8      	; 0x124 <uart_putchar>
 12c:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7c00c6>
 130:	80 e0       	ldi	r24, 0x00	; 0
 132:	90 e0       	ldi	r25, 0x00	; 0
 134:	08 95       	ret

00000136 <uart_getch>:
 136:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7c00c0>
 13a:	88 23       	and	r24, r24
 13c:	e4 f7       	brge	.-8      	; 0x136 <uart_getch>
 13e:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7c00c6>
 142:	90 e0       	ldi	r25, 0x00	; 0
 144:	08 95       	ret

00000146 <init_UART>:
 146:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7c00c0>
 14a:	88 e1       	ldi	r24, 0x18	; 24
 14c:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7c00c1>
 150:	86 e0       	ldi	r24, 0x06	; 6
 152:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7c00c2>
 156:	87 e6       	ldi	r24, 0x67	; 103
 158:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7c00c4>
 15c:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7c00c5>
 160:	ee e3       	ldi	r30, 0x3E	; 62
 162:	f2 e0       	ldi	r31, 0x02	; 2
 164:	80 e0       	ldi	r24, 0x00	; 0
 166:	92 e0       	ldi	r25, 0x02	; 2
 168:	93 83       	std	Z+3, r25	; 0x03
 16a:	82 83       	std	Z+2, r24	; 0x02
 16c:	91 83       	std	Z+1, r25	; 0x01
 16e:	80 83       	st	Z, r24
 170:	08 95       	ret

00000172 <init_ADC>:
 172:	ec e7       	ldi	r30, 0x7C	; 124
 174:	f0 e0       	ldi	r31, 0x00	; 0
 176:	80 e4       	ldi	r24, 0x40	; 64
 178:	80 83       	st	Z, r24
 17a:	80 81       	ld	r24, Z
 17c:	80 83       	st	Z, r24
 17e:	80 81       	ld	r24, Z
 180:	80 62       	ori	r24, 0x20	; 32
 182:	80 83       	st	Z, r24
 184:	ea e7       	ldi	r30, 0x7A	; 122
 186:	f0 e0       	ldi	r31, 0x00	; 0
 188:	87 e0       	ldi	r24, 0x07	; 7
 18a:	80 83       	st	Z, r24
 18c:	80 81       	ld	r24, Z
 18e:	80 68       	ori	r24, 0x80	; 128
 190:	80 83       	st	Z, r24
 192:	08 95       	ret

00000194 <init_ADC_for_10bits>:
 194:	ec e7       	ldi	r30, 0x7C	; 124
 196:	f0 e0       	ldi	r31, 0x00	; 0
 198:	80 e4       	ldi	r24, 0x40	; 64
 19a:	80 83       	st	Z, r24
 19c:	80 81       	ld	r24, Z
 19e:	80 83       	st	Z, r24
 1a0:	80 81       	ld	r24, Z
 1a2:	8f 7d       	andi	r24, 0xDF	; 223
 1a4:	80 83       	st	Z, r24
 1a6:	ea e7       	ldi	r30, 0x7A	; 122
 1a8:	f0 e0       	ldi	r31, 0x00	; 0
 1aa:	87 e0       	ldi	r24, 0x07	; 7
 1ac:	80 83       	st	Z, r24
 1ae:	80 81       	ld	r24, Z
 1b0:	80 68       	ori	r24, 0x80	; 128
 1b2:	80 83       	st	Z, r24
 1b4:	08 95       	ret

000001b6 <read_10bit_ADC_channel>:
uint16_t read_10bit_ADC_channel(uint8_t channel)
{
	uint8_t upper, lower;
	uint16_t value;			// 16-bit value to hold the result
	
	ADMUX = ADMUX & 0xE0;		// clear the channel data
 1b6:	ec e7       	ldi	r30, 0x7C	; 124
 1b8:	f0 e0       	ldi	r31, 0x00	; 0
 1ba:	90 81       	ld	r25, Z
 1bc:	90 7e       	andi	r25, 0xE0	; 224
 1be:	90 83       	st	Z, r25
	
	ADMUX = ADMUX | channel;	// add the channel data here!
 1c0:	90 81       	ld	r25, Z
 1c2:	89 2b       	or	r24, r25
 1c4:	80 83       	st	Z, r24

	ADCSRA = ADCSRA | 0x40;	// start a conversion
 1c6:	ea e7       	ldi	r30, 0x7A	; 122
 1c8:	f0 e0       	ldi	r31, 0x00	; 0
 1ca:	80 81       	ld	r24, Z
 1cc:	80 64       	ori	r24, 0x40	; 64
 1ce:	80 83       	st	Z, r24
	
	while( (ADCSRA & 0x10) == 0 )	// wait for conversion to be completed
 1d0:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7c007a>
 1d4:	84 ff       	sbrs	r24, 4
 1d6:	fc cf       	rjmp	.-8      	; 0x1d0 <read_10bit_ADC_channel+0x1a>
	{
	}

	lower = ADCL;		// get the lower 8-bits of the conversion
 1d8:	30 91 78 00 	lds	r19, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7c0078>
	upper = ADCH;		// get the upper 2 bits
 1dc:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7c0079>
	
	value = (upper << 8) | lower;;		// combine the upper and lower bits here to form a 10-bit number
 1e0:	90 e0       	ldi	r25, 0x00	; 0
 1e2:	98 2f       	mov	r25, r24
 1e4:	88 27       	eor	r24, r24

	ADCSRA = ADCSRA | 0x10;	// clear the conversion flag
 1e6:	ea e7       	ldi	r30, 0x7A	; 122
 1e8:	f0 e0       	ldi	r31, 0x00	; 0
 1ea:	20 81       	ld	r18, Z
 1ec:	20 61       	ori	r18, 0x10	; 16
 1ee:	20 83       	st	Z, r18
	
	return value;			// send back the 10-bit result
}
 1f0:	83 2b       	or	r24, r19
 1f2:	08 95       	ret

000001f4 <main>:

int main(void)
{
	uint16_t ADC_result0;
	
	init_UART();		// initialize the UART for 9600, N, 8, 1
 1f4:	a8 df       	rcall	.-176    	; 0x146 <init_UART>
	init_ADC();		// initialize ADC
 1f6:	bd df       	rcall	.-134    	; 0x172 <init_ADC>
	init_ADC_for_10bits();
 1f8:	cd df       	rcall	.-102    	; 0x194 <init_ADC_for_10bits>
 1fa:	8e e0       	ldi	r24, 0x0E	; 14
	
	printf("ADC Test Program\n\r");
 1fc:	92 e0       	ldi	r25, 0x02	; 2
 1fe:	9f 93       	push	r25
 200:	8f 93       	push	r24
 202:	10 d0       	rcall	.+32     	; 0x224 <printf>
 204:	0f 90       	pop	r0
 206:	0f 90       	pop	r0

	while(1)
	{
		ADC_result0 = read_10bit_ADC_channel(0);		// reads the latest ADC channel
 208:	80 e0       	ldi	r24, 0x00	; 0
 20a:	d5 df       	rcall	.-86     	; 0x1b6 <read_10bit_ADC_channel>
 20c:	9f 93       	push	r25
		printf("Latest ADC value is = %u \r\n", ADC_result0);	// displays the latest ADC result
 20e:	8f 93       	push	r24
 210:	81 e2       	ldi	r24, 0x21	; 33
 212:	92 e0       	ldi	r25, 0x02	; 2
 214:	9f 93       	push	r25
 216:	8f 93       	push	r24
 218:	05 d0       	rcall	.+10     	; 0x224 <printf>
 21a:	0f 90       	pop	r0
 21c:	0f 90       	pop	r0
 21e:	0f 90       	pop	r0
 220:	0f 90       	pop	r0
 222:	f2 cf       	rjmp	.-28     	; 0x208 <main+0x14>

00000224 <printf>:
 224:	cf 93       	push	r28
 226:	df 93       	push	r29
 228:	cd b7       	in	r28, 0x3d	; 61
 22a:	de b7       	in	r29, 0x3e	; 62
 22c:	ae 01       	movw	r20, r28
 22e:	4a 5f       	subi	r20, 0xFA	; 250
 230:	5f 4f       	sbci	r21, 0xFF	; 255
 232:	fa 01       	movw	r30, r20
 234:	61 91       	ld	r22, Z+
 236:	71 91       	ld	r23, Z+
 238:	af 01       	movw	r20, r30
 23a:	80 91 40 02 	lds	r24, 0x0240	; 0x800240 <__data_end+0x2>
 23e:	90 91 41 02 	lds	r25, 0x0241	; 0x800241 <__data_end+0x3>
 242:	03 d0       	rcall	.+6      	; 0x24a <vfprintf>
 244:	df 91       	pop	r29
 246:	cf 91       	pop	r28
 248:	08 95       	ret

0000024a <vfprintf>:
 24a:	2f 92       	push	r2
 24c:	3f 92       	push	r3
 24e:	4f 92       	push	r4
 250:	5f 92       	push	r5
 252:	6f 92       	push	r6
 254:	7f 92       	push	r7
 256:	8f 92       	push	r8
 258:	9f 92       	push	r9
 25a:	af 92       	push	r10
 25c:	bf 92       	push	r11
 25e:	cf 92       	push	r12
 260:	df 92       	push	r13
 262:	ef 92       	push	r14
 264:	ff 92       	push	r15
 266:	0f 93       	push	r16
 268:	1f 93       	push	r17
 26a:	cf 93       	push	r28
 26c:	df 93       	push	r29
 26e:	cd b7       	in	r28, 0x3d	; 61
 270:	de b7       	in	r29, 0x3e	; 62
 272:	2b 97       	sbiw	r28, 0x0b	; 11
 274:	0f b6       	in	r0, 0x3f	; 63
 276:	f8 94       	cli
 278:	de bf       	out	0x3e, r29	; 62
 27a:	0f be       	out	0x3f, r0	; 63
 27c:	cd bf       	out	0x3d, r28	; 61
 27e:	6c 01       	movw	r12, r24
 280:	7b 01       	movw	r14, r22
 282:	8a 01       	movw	r16, r20
 284:	fc 01       	movw	r30, r24
 286:	17 82       	std	Z+7, r1	; 0x07
 288:	16 82       	std	Z+6, r1	; 0x06
 28a:	83 81       	ldd	r24, Z+3	; 0x03
 28c:	81 ff       	sbrs	r24, 1
 28e:	bf c1       	rjmp	.+894    	; 0x60e <__LOCK_REGION_LENGTH__+0x20e>
 290:	ce 01       	movw	r24, r28
 292:	01 96       	adiw	r24, 0x01	; 1
 294:	3c 01       	movw	r6, r24
 296:	f6 01       	movw	r30, r12
 298:	93 81       	ldd	r25, Z+3	; 0x03
 29a:	f7 01       	movw	r30, r14
 29c:	93 fd       	sbrc	r25, 3
 29e:	85 91       	lpm	r24, Z+
 2a0:	93 ff       	sbrs	r25, 3
 2a2:	81 91       	ld	r24, Z+
 2a4:	7f 01       	movw	r14, r30
 2a6:	88 23       	and	r24, r24
 2a8:	09 f4       	brne	.+2      	; 0x2ac <vfprintf+0x62>
 2aa:	ad c1       	rjmp	.+858    	; 0x606 <__LOCK_REGION_LENGTH__+0x206>
 2ac:	85 32       	cpi	r24, 0x25	; 37
 2ae:	39 f4       	brne	.+14     	; 0x2be <vfprintf+0x74>
 2b0:	93 fd       	sbrc	r25, 3
 2b2:	85 91       	lpm	r24, Z+
 2b4:	93 ff       	sbrs	r25, 3
 2b6:	81 91       	ld	r24, Z+
 2b8:	7f 01       	movw	r14, r30
 2ba:	85 32       	cpi	r24, 0x25	; 37
 2bc:	21 f4       	brne	.+8      	; 0x2c6 <vfprintf+0x7c>
 2be:	b6 01       	movw	r22, r12
 2c0:	90 e0       	ldi	r25, 0x00	; 0
 2c2:	d6 d1       	rcall	.+940    	; 0x670 <fputc>
 2c4:	e8 cf       	rjmp	.-48     	; 0x296 <vfprintf+0x4c>
 2c6:	91 2c       	mov	r9, r1
 2c8:	21 2c       	mov	r2, r1
 2ca:	31 2c       	mov	r3, r1
 2cc:	ff e1       	ldi	r31, 0x1F	; 31
 2ce:	f3 15       	cp	r31, r3
 2d0:	d8 f0       	brcs	.+54     	; 0x308 <vfprintf+0xbe>
 2d2:	8b 32       	cpi	r24, 0x2B	; 43
 2d4:	79 f0       	breq	.+30     	; 0x2f4 <vfprintf+0xaa>
 2d6:	38 f4       	brcc	.+14     	; 0x2e6 <vfprintf+0x9c>
 2d8:	80 32       	cpi	r24, 0x20	; 32
 2da:	79 f0       	breq	.+30     	; 0x2fa <vfprintf+0xb0>
 2dc:	83 32       	cpi	r24, 0x23	; 35
 2de:	a1 f4       	brne	.+40     	; 0x308 <vfprintf+0xbe>
 2e0:	23 2d       	mov	r18, r3
 2e2:	20 61       	ori	r18, 0x10	; 16
 2e4:	1d c0       	rjmp	.+58     	; 0x320 <vfprintf+0xd6>
 2e6:	8d 32       	cpi	r24, 0x2D	; 45
 2e8:	61 f0       	breq	.+24     	; 0x302 <vfprintf+0xb8>
 2ea:	80 33       	cpi	r24, 0x30	; 48
 2ec:	69 f4       	brne	.+26     	; 0x308 <vfprintf+0xbe>
 2ee:	23 2d       	mov	r18, r3
 2f0:	21 60       	ori	r18, 0x01	; 1
 2f2:	16 c0       	rjmp	.+44     	; 0x320 <vfprintf+0xd6>
 2f4:	83 2d       	mov	r24, r3
 2f6:	82 60       	ori	r24, 0x02	; 2
 2f8:	38 2e       	mov	r3, r24
 2fa:	e3 2d       	mov	r30, r3
 2fc:	e4 60       	ori	r30, 0x04	; 4
 2fe:	3e 2e       	mov	r3, r30
 300:	2a c0       	rjmp	.+84     	; 0x356 <vfprintf+0x10c>
 302:	f3 2d       	mov	r31, r3
 304:	f8 60       	ori	r31, 0x08	; 8
 306:	1d c0       	rjmp	.+58     	; 0x342 <vfprintf+0xf8>
 308:	37 fc       	sbrc	r3, 7
 30a:	2d c0       	rjmp	.+90     	; 0x366 <vfprintf+0x11c>
 30c:	20 ed       	ldi	r18, 0xD0	; 208
 30e:	28 0f       	add	r18, r24
 310:	2a 30       	cpi	r18, 0x0A	; 10
 312:	40 f0       	brcs	.+16     	; 0x324 <vfprintf+0xda>
 314:	8e 32       	cpi	r24, 0x2E	; 46
 316:	b9 f4       	brne	.+46     	; 0x346 <vfprintf+0xfc>
 318:	36 fc       	sbrc	r3, 6
 31a:	75 c1       	rjmp	.+746    	; 0x606 <__LOCK_REGION_LENGTH__+0x206>
 31c:	23 2d       	mov	r18, r3
 31e:	20 64       	ori	r18, 0x40	; 64
 320:	32 2e       	mov	r3, r18
 322:	19 c0       	rjmp	.+50     	; 0x356 <vfprintf+0x10c>
 324:	36 fe       	sbrs	r3, 6
 326:	06 c0       	rjmp	.+12     	; 0x334 <vfprintf+0xea>
 328:	8a e0       	ldi	r24, 0x0A	; 10
 32a:	98 9e       	mul	r9, r24
 32c:	20 0d       	add	r18, r0
 32e:	11 24       	eor	r1, r1
 330:	92 2e       	mov	r9, r18
 332:	11 c0       	rjmp	.+34     	; 0x356 <vfprintf+0x10c>
 334:	ea e0       	ldi	r30, 0x0A	; 10
 336:	2e 9e       	mul	r2, r30
 338:	20 0d       	add	r18, r0
 33a:	11 24       	eor	r1, r1
 33c:	22 2e       	mov	r2, r18
 33e:	f3 2d       	mov	r31, r3
 340:	f0 62       	ori	r31, 0x20	; 32
 342:	3f 2e       	mov	r3, r31
 344:	08 c0       	rjmp	.+16     	; 0x356 <vfprintf+0x10c>
 346:	8c 36       	cpi	r24, 0x6C	; 108
 348:	21 f4       	brne	.+8      	; 0x352 <vfprintf+0x108>
 34a:	83 2d       	mov	r24, r3
 34c:	80 68       	ori	r24, 0x80	; 128
 34e:	38 2e       	mov	r3, r24
 350:	02 c0       	rjmp	.+4      	; 0x356 <vfprintf+0x10c>
 352:	88 36       	cpi	r24, 0x68	; 104
 354:	41 f4       	brne	.+16     	; 0x366 <vfprintf+0x11c>
 356:	f7 01       	movw	r30, r14
 358:	93 fd       	sbrc	r25, 3
 35a:	85 91       	lpm	r24, Z+
 35c:	93 ff       	sbrs	r25, 3
 35e:	81 91       	ld	r24, Z+
 360:	7f 01       	movw	r14, r30
 362:	81 11       	cpse	r24, r1
 364:	b3 cf       	rjmp	.-154    	; 0x2cc <vfprintf+0x82>
 366:	98 2f       	mov	r25, r24
 368:	9f 7d       	andi	r25, 0xDF	; 223
 36a:	95 54       	subi	r25, 0x45	; 69
 36c:	93 30       	cpi	r25, 0x03	; 3
 36e:	28 f4       	brcc	.+10     	; 0x37a <vfprintf+0x130>
 370:	0c 5f       	subi	r16, 0xFC	; 252
 372:	1f 4f       	sbci	r17, 0xFF	; 255
 374:	9f e3       	ldi	r25, 0x3F	; 63
 376:	99 83       	std	Y+1, r25	; 0x01
 378:	0d c0       	rjmp	.+26     	; 0x394 <vfprintf+0x14a>
 37a:	83 36       	cpi	r24, 0x63	; 99
 37c:	31 f0       	breq	.+12     	; 0x38a <vfprintf+0x140>
 37e:	83 37       	cpi	r24, 0x73	; 115
 380:	71 f0       	breq	.+28     	; 0x39e <vfprintf+0x154>
 382:	83 35       	cpi	r24, 0x53	; 83
 384:	09 f0       	breq	.+2      	; 0x388 <vfprintf+0x13e>
 386:	55 c0       	rjmp	.+170    	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
 388:	20 c0       	rjmp	.+64     	; 0x3ca <vfprintf+0x180>
 38a:	f8 01       	movw	r30, r16
 38c:	80 81       	ld	r24, Z
 38e:	89 83       	std	Y+1, r24	; 0x01
 390:	0e 5f       	subi	r16, 0xFE	; 254
 392:	1f 4f       	sbci	r17, 0xFF	; 255
 394:	88 24       	eor	r8, r8
 396:	83 94       	inc	r8
 398:	91 2c       	mov	r9, r1
 39a:	53 01       	movw	r10, r6
 39c:	12 c0       	rjmp	.+36     	; 0x3c2 <vfprintf+0x178>
 39e:	28 01       	movw	r4, r16
 3a0:	f2 e0       	ldi	r31, 0x02	; 2
 3a2:	4f 0e       	add	r4, r31
 3a4:	51 1c       	adc	r5, r1
 3a6:	f8 01       	movw	r30, r16
 3a8:	a0 80       	ld	r10, Z
 3aa:	b1 80       	ldd	r11, Z+1	; 0x01
 3ac:	36 fe       	sbrs	r3, 6
 3ae:	03 c0       	rjmp	.+6      	; 0x3b6 <vfprintf+0x16c>
 3b0:	69 2d       	mov	r22, r9
 3b2:	70 e0       	ldi	r23, 0x00	; 0
 3b4:	02 c0       	rjmp	.+4      	; 0x3ba <vfprintf+0x170>
 3b6:	6f ef       	ldi	r22, 0xFF	; 255
 3b8:	7f ef       	ldi	r23, 0xFF	; 255
 3ba:	c5 01       	movw	r24, r10
 3bc:	4e d1       	rcall	.+668    	; 0x65a <strnlen>
 3be:	4c 01       	movw	r8, r24
 3c0:	82 01       	movw	r16, r4
 3c2:	f3 2d       	mov	r31, r3
 3c4:	ff 77       	andi	r31, 0x7F	; 127
 3c6:	3f 2e       	mov	r3, r31
 3c8:	15 c0       	rjmp	.+42     	; 0x3f4 <vfprintf+0x1aa>
 3ca:	28 01       	movw	r4, r16
 3cc:	22 e0       	ldi	r18, 0x02	; 2
 3ce:	42 0e       	add	r4, r18
 3d0:	51 1c       	adc	r5, r1
 3d2:	f8 01       	movw	r30, r16
 3d4:	a0 80       	ld	r10, Z
 3d6:	b1 80       	ldd	r11, Z+1	; 0x01
 3d8:	36 fe       	sbrs	r3, 6
 3da:	03 c0       	rjmp	.+6      	; 0x3e2 <vfprintf+0x198>
 3dc:	69 2d       	mov	r22, r9
 3de:	70 e0       	ldi	r23, 0x00	; 0
 3e0:	02 c0       	rjmp	.+4      	; 0x3e6 <vfprintf+0x19c>
 3e2:	6f ef       	ldi	r22, 0xFF	; 255
 3e4:	7f ef       	ldi	r23, 0xFF	; 255
 3e6:	c5 01       	movw	r24, r10
 3e8:	2d d1       	rcall	.+602    	; 0x644 <strnlen_P>
 3ea:	4c 01       	movw	r8, r24
 3ec:	f3 2d       	mov	r31, r3
 3ee:	f0 68       	ori	r31, 0x80	; 128
 3f0:	3f 2e       	mov	r3, r31
 3f2:	82 01       	movw	r16, r4
 3f4:	33 fc       	sbrc	r3, 3
 3f6:	19 c0       	rjmp	.+50     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 3f8:	82 2d       	mov	r24, r2
 3fa:	90 e0       	ldi	r25, 0x00	; 0
 3fc:	88 16       	cp	r8, r24
 3fe:	99 06       	cpc	r9, r25
 400:	a0 f4       	brcc	.+40     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 402:	b6 01       	movw	r22, r12
 404:	80 e2       	ldi	r24, 0x20	; 32
 406:	90 e0       	ldi	r25, 0x00	; 0
 408:	33 d1       	rcall	.+614    	; 0x670 <fputc>
 40a:	2a 94       	dec	r2
 40c:	f5 cf       	rjmp	.-22     	; 0x3f8 <vfprintf+0x1ae>
 40e:	f5 01       	movw	r30, r10
 410:	37 fc       	sbrc	r3, 7
 412:	85 91       	lpm	r24, Z+
 414:	37 fe       	sbrs	r3, 7
 416:	81 91       	ld	r24, Z+
 418:	5f 01       	movw	r10, r30
 41a:	b6 01       	movw	r22, r12
 41c:	90 e0       	ldi	r25, 0x00	; 0
 41e:	28 d1       	rcall	.+592    	; 0x670 <fputc>
 420:	21 10       	cpse	r2, r1
 422:	2a 94       	dec	r2
 424:	21 e0       	ldi	r18, 0x01	; 1
 426:	82 1a       	sub	r8, r18
 428:	91 08       	sbc	r9, r1
 42a:	81 14       	cp	r8, r1
 42c:	91 04       	cpc	r9, r1
 42e:	79 f7       	brne	.-34     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 430:	e1 c0       	rjmp	.+450    	; 0x5f4 <__LOCK_REGION_LENGTH__+0x1f4>
 432:	84 36       	cpi	r24, 0x64	; 100
 434:	11 f0       	breq	.+4      	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 436:	89 36       	cpi	r24, 0x69	; 105
 438:	39 f5       	brne	.+78     	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 43a:	f8 01       	movw	r30, r16
 43c:	37 fe       	sbrs	r3, 7
 43e:	07 c0       	rjmp	.+14     	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
 440:	60 81       	ld	r22, Z
 442:	71 81       	ldd	r23, Z+1	; 0x01
 444:	82 81       	ldd	r24, Z+2	; 0x02
 446:	93 81       	ldd	r25, Z+3	; 0x03
 448:	0c 5f       	subi	r16, 0xFC	; 252
 44a:	1f 4f       	sbci	r17, 0xFF	; 255
 44c:	08 c0       	rjmp	.+16     	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 44e:	60 81       	ld	r22, Z
 450:	71 81       	ldd	r23, Z+1	; 0x01
 452:	07 2e       	mov	r0, r23
 454:	00 0c       	add	r0, r0
 456:	88 0b       	sbc	r24, r24
 458:	99 0b       	sbc	r25, r25
 45a:	0e 5f       	subi	r16, 0xFE	; 254
 45c:	1f 4f       	sbci	r17, 0xFF	; 255
 45e:	f3 2d       	mov	r31, r3
 460:	ff 76       	andi	r31, 0x6F	; 111
 462:	3f 2e       	mov	r3, r31
 464:	97 ff       	sbrs	r25, 7
 466:	09 c0       	rjmp	.+18     	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
 468:	90 95       	com	r25
 46a:	80 95       	com	r24
 46c:	70 95       	com	r23
 46e:	61 95       	neg	r22
 470:	7f 4f       	sbci	r23, 0xFF	; 255
 472:	8f 4f       	sbci	r24, 0xFF	; 255
 474:	9f 4f       	sbci	r25, 0xFF	; 255
 476:	f0 68       	ori	r31, 0x80	; 128
 478:	3f 2e       	mov	r3, r31
 47a:	2a e0       	ldi	r18, 0x0A	; 10
 47c:	30 e0       	ldi	r19, 0x00	; 0
 47e:	a3 01       	movw	r20, r6
 480:	33 d1       	rcall	.+614    	; 0x6e8 <__ultoa_invert>
 482:	88 2e       	mov	r8, r24
 484:	86 18       	sub	r8, r6
 486:	44 c0       	rjmp	.+136    	; 0x510 <__LOCK_REGION_LENGTH__+0x110>
 488:	85 37       	cpi	r24, 0x75	; 117
 48a:	31 f4       	brne	.+12     	; 0x498 <__LOCK_REGION_LENGTH__+0x98>
 48c:	23 2d       	mov	r18, r3
 48e:	2f 7e       	andi	r18, 0xEF	; 239
 490:	b2 2e       	mov	r11, r18
 492:	2a e0       	ldi	r18, 0x0A	; 10
 494:	30 e0       	ldi	r19, 0x00	; 0
 496:	25 c0       	rjmp	.+74     	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
 498:	93 2d       	mov	r25, r3
 49a:	99 7f       	andi	r25, 0xF9	; 249
 49c:	b9 2e       	mov	r11, r25
 49e:	8f 36       	cpi	r24, 0x6F	; 111
 4a0:	c1 f0       	breq	.+48     	; 0x4d2 <__LOCK_REGION_LENGTH__+0xd2>
 4a2:	18 f4       	brcc	.+6      	; 0x4aa <__LOCK_REGION_LENGTH__+0xaa>
 4a4:	88 35       	cpi	r24, 0x58	; 88
 4a6:	79 f0       	breq	.+30     	; 0x4c6 <__LOCK_REGION_LENGTH__+0xc6>
 4a8:	ae c0       	rjmp	.+348    	; 0x606 <__LOCK_REGION_LENGTH__+0x206>
 4aa:	80 37       	cpi	r24, 0x70	; 112
 4ac:	19 f0       	breq	.+6      	; 0x4b4 <__LOCK_REGION_LENGTH__+0xb4>
 4ae:	88 37       	cpi	r24, 0x78	; 120
 4b0:	21 f0       	breq	.+8      	; 0x4ba <__LOCK_REGION_LENGTH__+0xba>
 4b2:	a9 c0       	rjmp	.+338    	; 0x606 <__LOCK_REGION_LENGTH__+0x206>
 4b4:	e9 2f       	mov	r30, r25
 4b6:	e0 61       	ori	r30, 0x10	; 16
 4b8:	be 2e       	mov	r11, r30
 4ba:	b4 fe       	sbrs	r11, 4
 4bc:	0d c0       	rjmp	.+26     	; 0x4d8 <__LOCK_REGION_LENGTH__+0xd8>
 4be:	fb 2d       	mov	r31, r11
 4c0:	f4 60       	ori	r31, 0x04	; 4
 4c2:	bf 2e       	mov	r11, r31
 4c4:	09 c0       	rjmp	.+18     	; 0x4d8 <__LOCK_REGION_LENGTH__+0xd8>
 4c6:	34 fe       	sbrs	r3, 4
 4c8:	0a c0       	rjmp	.+20     	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
 4ca:	29 2f       	mov	r18, r25
 4cc:	26 60       	ori	r18, 0x06	; 6
 4ce:	b2 2e       	mov	r11, r18
 4d0:	06 c0       	rjmp	.+12     	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
 4d2:	28 e0       	ldi	r18, 0x08	; 8
 4d4:	30 e0       	ldi	r19, 0x00	; 0
 4d6:	05 c0       	rjmp	.+10     	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
 4d8:	20 e1       	ldi	r18, 0x10	; 16
 4da:	30 e0       	ldi	r19, 0x00	; 0
 4dc:	02 c0       	rjmp	.+4      	; 0x4e2 <__LOCK_REGION_LENGTH__+0xe2>
 4de:	20 e1       	ldi	r18, 0x10	; 16
 4e0:	32 e0       	ldi	r19, 0x02	; 2
 4e2:	f8 01       	movw	r30, r16
 4e4:	b7 fe       	sbrs	r11, 7
 4e6:	07 c0       	rjmp	.+14     	; 0x4f6 <__LOCK_REGION_LENGTH__+0xf6>
 4e8:	60 81       	ld	r22, Z
 4ea:	71 81       	ldd	r23, Z+1	; 0x01
 4ec:	82 81       	ldd	r24, Z+2	; 0x02
 4ee:	93 81       	ldd	r25, Z+3	; 0x03
 4f0:	0c 5f       	subi	r16, 0xFC	; 252
 4f2:	1f 4f       	sbci	r17, 0xFF	; 255
 4f4:	06 c0       	rjmp	.+12     	; 0x502 <__LOCK_REGION_LENGTH__+0x102>
 4f6:	60 81       	ld	r22, Z
 4f8:	71 81       	ldd	r23, Z+1	; 0x01
 4fa:	80 e0       	ldi	r24, 0x00	; 0
 4fc:	90 e0       	ldi	r25, 0x00	; 0
 4fe:	0e 5f       	subi	r16, 0xFE	; 254
 500:	1f 4f       	sbci	r17, 0xFF	; 255
 502:	a3 01       	movw	r20, r6
 504:	f1 d0       	rcall	.+482    	; 0x6e8 <__ultoa_invert>
 506:	88 2e       	mov	r8, r24
 508:	86 18       	sub	r8, r6
 50a:	fb 2d       	mov	r31, r11
 50c:	ff 77       	andi	r31, 0x7F	; 127
 50e:	3f 2e       	mov	r3, r31
 510:	36 fe       	sbrs	r3, 6
 512:	0d c0       	rjmp	.+26     	; 0x52e <__LOCK_REGION_LENGTH__+0x12e>
 514:	23 2d       	mov	r18, r3
 516:	2e 7f       	andi	r18, 0xFE	; 254
 518:	a2 2e       	mov	r10, r18
 51a:	89 14       	cp	r8, r9
 51c:	58 f4       	brcc	.+22     	; 0x534 <__LOCK_REGION_LENGTH__+0x134>
 51e:	34 fe       	sbrs	r3, 4
 520:	0b c0       	rjmp	.+22     	; 0x538 <__LOCK_REGION_LENGTH__+0x138>
 522:	32 fc       	sbrc	r3, 2
 524:	09 c0       	rjmp	.+18     	; 0x538 <__LOCK_REGION_LENGTH__+0x138>
 526:	83 2d       	mov	r24, r3
 528:	8e 7e       	andi	r24, 0xEE	; 238
 52a:	a8 2e       	mov	r10, r24
 52c:	05 c0       	rjmp	.+10     	; 0x538 <__LOCK_REGION_LENGTH__+0x138>
 52e:	b8 2c       	mov	r11, r8
 530:	a3 2c       	mov	r10, r3
 532:	03 c0       	rjmp	.+6      	; 0x53a <__LOCK_REGION_LENGTH__+0x13a>
 534:	b8 2c       	mov	r11, r8
 536:	01 c0       	rjmp	.+2      	; 0x53a <__LOCK_REGION_LENGTH__+0x13a>
 538:	b9 2c       	mov	r11, r9
 53a:	a4 fe       	sbrs	r10, 4
 53c:	0f c0       	rjmp	.+30     	; 0x55c <__LOCK_REGION_LENGTH__+0x15c>
 53e:	fe 01       	movw	r30, r28
 540:	e8 0d       	add	r30, r8
 542:	f1 1d       	adc	r31, r1
 544:	80 81       	ld	r24, Z
 546:	80 33       	cpi	r24, 0x30	; 48
 548:	21 f4       	brne	.+8      	; 0x552 <__LOCK_REGION_LENGTH__+0x152>
 54a:	9a 2d       	mov	r25, r10
 54c:	99 7e       	andi	r25, 0xE9	; 233
 54e:	a9 2e       	mov	r10, r25
 550:	09 c0       	rjmp	.+18     	; 0x564 <__LOCK_REGION_LENGTH__+0x164>
 552:	a2 fe       	sbrs	r10, 2
 554:	06 c0       	rjmp	.+12     	; 0x562 <__LOCK_REGION_LENGTH__+0x162>
 556:	b3 94       	inc	r11
 558:	b3 94       	inc	r11
 55a:	04 c0       	rjmp	.+8      	; 0x564 <__LOCK_REGION_LENGTH__+0x164>
 55c:	8a 2d       	mov	r24, r10
 55e:	86 78       	andi	r24, 0x86	; 134
 560:	09 f0       	breq	.+2      	; 0x564 <__LOCK_REGION_LENGTH__+0x164>
 562:	b3 94       	inc	r11
 564:	a3 fc       	sbrc	r10, 3
 566:	10 c0       	rjmp	.+32     	; 0x588 <__LOCK_REGION_LENGTH__+0x188>
 568:	a0 fe       	sbrs	r10, 0
 56a:	06 c0       	rjmp	.+12     	; 0x578 <__LOCK_REGION_LENGTH__+0x178>
 56c:	b2 14       	cp	r11, r2
 56e:	80 f4       	brcc	.+32     	; 0x590 <__LOCK_REGION_LENGTH__+0x190>
 570:	28 0c       	add	r2, r8
 572:	92 2c       	mov	r9, r2
 574:	9b 18       	sub	r9, r11
 576:	0d c0       	rjmp	.+26     	; 0x592 <__LOCK_REGION_LENGTH__+0x192>
 578:	b2 14       	cp	r11, r2
 57a:	58 f4       	brcc	.+22     	; 0x592 <__LOCK_REGION_LENGTH__+0x192>
 57c:	b6 01       	movw	r22, r12
 57e:	80 e2       	ldi	r24, 0x20	; 32
 580:	90 e0       	ldi	r25, 0x00	; 0
 582:	76 d0       	rcall	.+236    	; 0x670 <fputc>
 584:	b3 94       	inc	r11
 586:	f8 cf       	rjmp	.-16     	; 0x578 <__LOCK_REGION_LENGTH__+0x178>
 588:	b2 14       	cp	r11, r2
 58a:	18 f4       	brcc	.+6      	; 0x592 <__LOCK_REGION_LENGTH__+0x192>
 58c:	2b 18       	sub	r2, r11
 58e:	02 c0       	rjmp	.+4      	; 0x594 <__LOCK_REGION_LENGTH__+0x194>
 590:	98 2c       	mov	r9, r8
 592:	21 2c       	mov	r2, r1
 594:	a4 fe       	sbrs	r10, 4
 596:	0f c0       	rjmp	.+30     	; 0x5b6 <__LOCK_REGION_LENGTH__+0x1b6>
 598:	b6 01       	movw	r22, r12
 59a:	80 e3       	ldi	r24, 0x30	; 48
 59c:	90 e0       	ldi	r25, 0x00	; 0
 59e:	68 d0       	rcall	.+208    	; 0x670 <fputc>
 5a0:	a2 fe       	sbrs	r10, 2
 5a2:	16 c0       	rjmp	.+44     	; 0x5d0 <__LOCK_REGION_LENGTH__+0x1d0>
 5a4:	a1 fc       	sbrc	r10, 1
 5a6:	03 c0       	rjmp	.+6      	; 0x5ae <__LOCK_REGION_LENGTH__+0x1ae>
 5a8:	88 e7       	ldi	r24, 0x78	; 120
 5aa:	90 e0       	ldi	r25, 0x00	; 0
 5ac:	02 c0       	rjmp	.+4      	; 0x5b2 <__LOCK_REGION_LENGTH__+0x1b2>
 5ae:	88 e5       	ldi	r24, 0x58	; 88
 5b0:	90 e0       	ldi	r25, 0x00	; 0
 5b2:	b6 01       	movw	r22, r12
 5b4:	0c c0       	rjmp	.+24     	; 0x5ce <__LOCK_REGION_LENGTH__+0x1ce>
 5b6:	8a 2d       	mov	r24, r10
 5b8:	86 78       	andi	r24, 0x86	; 134
 5ba:	51 f0       	breq	.+20     	; 0x5d0 <__LOCK_REGION_LENGTH__+0x1d0>
 5bc:	a1 fe       	sbrs	r10, 1
 5be:	02 c0       	rjmp	.+4      	; 0x5c4 <__LOCK_REGION_LENGTH__+0x1c4>
 5c0:	8b e2       	ldi	r24, 0x2B	; 43
 5c2:	01 c0       	rjmp	.+2      	; 0x5c6 <__LOCK_REGION_LENGTH__+0x1c6>
 5c4:	80 e2       	ldi	r24, 0x20	; 32
 5c6:	a7 fc       	sbrc	r10, 7
 5c8:	8d e2       	ldi	r24, 0x2D	; 45
 5ca:	b6 01       	movw	r22, r12
 5cc:	90 e0       	ldi	r25, 0x00	; 0
 5ce:	50 d0       	rcall	.+160    	; 0x670 <fputc>
 5d0:	89 14       	cp	r8, r9
 5d2:	30 f4       	brcc	.+12     	; 0x5e0 <__LOCK_REGION_LENGTH__+0x1e0>
 5d4:	b6 01       	movw	r22, r12
 5d6:	80 e3       	ldi	r24, 0x30	; 48
 5d8:	90 e0       	ldi	r25, 0x00	; 0
 5da:	4a d0       	rcall	.+148    	; 0x670 <fputc>
 5dc:	9a 94       	dec	r9
 5de:	f8 cf       	rjmp	.-16     	; 0x5d0 <__LOCK_REGION_LENGTH__+0x1d0>
 5e0:	8a 94       	dec	r8
 5e2:	f3 01       	movw	r30, r6
 5e4:	e8 0d       	add	r30, r8
 5e6:	f1 1d       	adc	r31, r1
 5e8:	80 81       	ld	r24, Z
 5ea:	b6 01       	movw	r22, r12
 5ec:	90 e0       	ldi	r25, 0x00	; 0
 5ee:	40 d0       	rcall	.+128    	; 0x670 <fputc>
 5f0:	81 10       	cpse	r8, r1
 5f2:	f6 cf       	rjmp	.-20     	; 0x5e0 <__LOCK_REGION_LENGTH__+0x1e0>
 5f4:	22 20       	and	r2, r2
 5f6:	09 f4       	brne	.+2      	; 0x5fa <__LOCK_REGION_LENGTH__+0x1fa>
 5f8:	4e ce       	rjmp	.-868    	; 0x296 <vfprintf+0x4c>
 5fa:	b6 01       	movw	r22, r12
 5fc:	80 e2       	ldi	r24, 0x20	; 32
 5fe:	90 e0       	ldi	r25, 0x00	; 0
 600:	37 d0       	rcall	.+110    	; 0x670 <fputc>
 602:	2a 94       	dec	r2
 604:	f7 cf       	rjmp	.-18     	; 0x5f4 <__LOCK_REGION_LENGTH__+0x1f4>
 606:	f6 01       	movw	r30, r12
 608:	86 81       	ldd	r24, Z+6	; 0x06
 60a:	97 81       	ldd	r25, Z+7	; 0x07
 60c:	02 c0       	rjmp	.+4      	; 0x612 <__LOCK_REGION_LENGTH__+0x212>
 60e:	8f ef       	ldi	r24, 0xFF	; 255
 610:	9f ef       	ldi	r25, 0xFF	; 255
 612:	2b 96       	adiw	r28, 0x0b	; 11
 614:	0f b6       	in	r0, 0x3f	; 63
 616:	f8 94       	cli
 618:	de bf       	out	0x3e, r29	; 62
 61a:	0f be       	out	0x3f, r0	; 63
 61c:	cd bf       	out	0x3d, r28	; 61
 61e:	df 91       	pop	r29
 620:	cf 91       	pop	r28
 622:	1f 91       	pop	r17
 624:	0f 91       	pop	r16
 626:	ff 90       	pop	r15
 628:	ef 90       	pop	r14
 62a:	df 90       	pop	r13
 62c:	cf 90       	pop	r12
 62e:	bf 90       	pop	r11
 630:	af 90       	pop	r10
 632:	9f 90       	pop	r9
 634:	8f 90       	pop	r8
 636:	7f 90       	pop	r7
 638:	6f 90       	pop	r6
 63a:	5f 90       	pop	r5
 63c:	4f 90       	pop	r4
 63e:	3f 90       	pop	r3
 640:	2f 90       	pop	r2
 642:	08 95       	ret

00000644 <strnlen_P>:
 644:	fc 01       	movw	r30, r24
 646:	05 90       	lpm	r0, Z+
 648:	61 50       	subi	r22, 0x01	; 1
 64a:	70 40       	sbci	r23, 0x00	; 0
 64c:	01 10       	cpse	r0, r1
 64e:	d8 f7       	brcc	.-10     	; 0x646 <strnlen_P+0x2>
 650:	80 95       	com	r24
 652:	90 95       	com	r25
 654:	8e 0f       	add	r24, r30
 656:	9f 1f       	adc	r25, r31
 658:	08 95       	ret

0000065a <strnlen>:
 65a:	fc 01       	movw	r30, r24
 65c:	61 50       	subi	r22, 0x01	; 1
 65e:	70 40       	sbci	r23, 0x00	; 0
 660:	01 90       	ld	r0, Z+
 662:	01 10       	cpse	r0, r1
 664:	d8 f7       	brcc	.-10     	; 0x65c <strnlen+0x2>
 666:	80 95       	com	r24
 668:	90 95       	com	r25
 66a:	8e 0f       	add	r24, r30
 66c:	9f 1f       	adc	r25, r31
 66e:	08 95       	ret

00000670 <fputc>:
 670:	0f 93       	push	r16
 672:	1f 93       	push	r17
 674:	cf 93       	push	r28
 676:	df 93       	push	r29
 678:	fb 01       	movw	r30, r22
 67a:	23 81       	ldd	r18, Z+3	; 0x03
 67c:	21 fd       	sbrc	r18, 1
 67e:	03 c0       	rjmp	.+6      	; 0x686 <fputc+0x16>
 680:	8f ef       	ldi	r24, 0xFF	; 255
 682:	9f ef       	ldi	r25, 0xFF	; 255
 684:	2c c0       	rjmp	.+88     	; 0x6de <fputc+0x6e>
 686:	22 ff       	sbrs	r18, 2
 688:	16 c0       	rjmp	.+44     	; 0x6b6 <fputc+0x46>
 68a:	46 81       	ldd	r20, Z+6	; 0x06
 68c:	57 81       	ldd	r21, Z+7	; 0x07
 68e:	24 81       	ldd	r18, Z+4	; 0x04
 690:	35 81       	ldd	r19, Z+5	; 0x05
 692:	42 17       	cp	r20, r18
 694:	53 07       	cpc	r21, r19
 696:	44 f4       	brge	.+16     	; 0x6a8 <fputc+0x38>
 698:	a0 81       	ld	r26, Z
 69a:	b1 81       	ldd	r27, Z+1	; 0x01
 69c:	9d 01       	movw	r18, r26
 69e:	2f 5f       	subi	r18, 0xFF	; 255
 6a0:	3f 4f       	sbci	r19, 0xFF	; 255
 6a2:	31 83       	std	Z+1, r19	; 0x01
 6a4:	20 83       	st	Z, r18
 6a6:	8c 93       	st	X, r24
 6a8:	26 81       	ldd	r18, Z+6	; 0x06
 6aa:	37 81       	ldd	r19, Z+7	; 0x07
 6ac:	2f 5f       	subi	r18, 0xFF	; 255
 6ae:	3f 4f       	sbci	r19, 0xFF	; 255
 6b0:	37 83       	std	Z+7, r19	; 0x07
 6b2:	26 83       	std	Z+6, r18	; 0x06
 6b4:	14 c0       	rjmp	.+40     	; 0x6de <fputc+0x6e>
 6b6:	8b 01       	movw	r16, r22
 6b8:	ec 01       	movw	r28, r24
 6ba:	fb 01       	movw	r30, r22
 6bc:	00 84       	ldd	r0, Z+8	; 0x08
 6be:	f1 85       	ldd	r31, Z+9	; 0x09
 6c0:	e0 2d       	mov	r30, r0
 6c2:	19 95       	eicall
 6c4:	89 2b       	or	r24, r25
 6c6:	e1 f6       	brne	.-72     	; 0x680 <fputc+0x10>
 6c8:	d8 01       	movw	r26, r16
 6ca:	16 96       	adiw	r26, 0x06	; 6
 6cc:	8d 91       	ld	r24, X+
 6ce:	9c 91       	ld	r25, X
 6d0:	17 97       	sbiw	r26, 0x07	; 7
 6d2:	01 96       	adiw	r24, 0x01	; 1
 6d4:	17 96       	adiw	r26, 0x07	; 7
 6d6:	9c 93       	st	X, r25
 6d8:	8e 93       	st	-X, r24
 6da:	16 97       	sbiw	r26, 0x06	; 6
 6dc:	ce 01       	movw	r24, r28
 6de:	df 91       	pop	r29
 6e0:	cf 91       	pop	r28
 6e2:	1f 91       	pop	r17
 6e4:	0f 91       	pop	r16
 6e6:	08 95       	ret

000006e8 <__ultoa_invert>:
 6e8:	fa 01       	movw	r30, r20
 6ea:	aa 27       	eor	r26, r26
 6ec:	28 30       	cpi	r18, 0x08	; 8
 6ee:	51 f1       	breq	.+84     	; 0x744 <__ultoa_invert+0x5c>
 6f0:	20 31       	cpi	r18, 0x10	; 16
 6f2:	81 f1       	breq	.+96     	; 0x754 <__ultoa_invert+0x6c>
 6f4:	e8 94       	clt
 6f6:	6f 93       	push	r22
 6f8:	6e 7f       	andi	r22, 0xFE	; 254
 6fa:	6e 5f       	subi	r22, 0xFE	; 254
 6fc:	7f 4f       	sbci	r23, 0xFF	; 255
 6fe:	8f 4f       	sbci	r24, 0xFF	; 255
 700:	9f 4f       	sbci	r25, 0xFF	; 255
 702:	af 4f       	sbci	r26, 0xFF	; 255
 704:	b1 e0       	ldi	r27, 0x01	; 1
 706:	3e d0       	rcall	.+124    	; 0x784 <__ultoa_invert+0x9c>
 708:	b4 e0       	ldi	r27, 0x04	; 4
 70a:	3c d0       	rcall	.+120    	; 0x784 <__ultoa_invert+0x9c>
 70c:	67 0f       	add	r22, r23
 70e:	78 1f       	adc	r23, r24
 710:	89 1f       	adc	r24, r25
 712:	9a 1f       	adc	r25, r26
 714:	a1 1d       	adc	r26, r1
 716:	68 0f       	add	r22, r24
 718:	79 1f       	adc	r23, r25
 71a:	8a 1f       	adc	r24, r26
 71c:	91 1d       	adc	r25, r1
 71e:	a1 1d       	adc	r26, r1
 720:	6a 0f       	add	r22, r26
 722:	71 1d       	adc	r23, r1
 724:	81 1d       	adc	r24, r1
 726:	91 1d       	adc	r25, r1
 728:	a1 1d       	adc	r26, r1
 72a:	20 d0       	rcall	.+64     	; 0x76c <__ultoa_invert+0x84>
 72c:	09 f4       	brne	.+2      	; 0x730 <__ultoa_invert+0x48>
 72e:	68 94       	set
 730:	3f 91       	pop	r19
 732:	2a e0       	ldi	r18, 0x0A	; 10
 734:	26 9f       	mul	r18, r22
 736:	11 24       	eor	r1, r1
 738:	30 19       	sub	r19, r0
 73a:	30 5d       	subi	r19, 0xD0	; 208
 73c:	31 93       	st	Z+, r19
 73e:	de f6       	brtc	.-74     	; 0x6f6 <__ultoa_invert+0xe>
 740:	cf 01       	movw	r24, r30
 742:	08 95       	ret
 744:	46 2f       	mov	r20, r22
 746:	47 70       	andi	r20, 0x07	; 7
 748:	40 5d       	subi	r20, 0xD0	; 208
 74a:	41 93       	st	Z+, r20
 74c:	b3 e0       	ldi	r27, 0x03	; 3
 74e:	0f d0       	rcall	.+30     	; 0x76e <__ultoa_invert+0x86>
 750:	c9 f7       	brne	.-14     	; 0x744 <__ultoa_invert+0x5c>
 752:	f6 cf       	rjmp	.-20     	; 0x740 <__ultoa_invert+0x58>
 754:	46 2f       	mov	r20, r22
 756:	4f 70       	andi	r20, 0x0F	; 15
 758:	40 5d       	subi	r20, 0xD0	; 208
 75a:	4a 33       	cpi	r20, 0x3A	; 58
 75c:	18 f0       	brcs	.+6      	; 0x764 <__ultoa_invert+0x7c>
 75e:	49 5d       	subi	r20, 0xD9	; 217
 760:	31 fd       	sbrc	r19, 1
 762:	40 52       	subi	r20, 0x20	; 32
 764:	41 93       	st	Z+, r20
 766:	02 d0       	rcall	.+4      	; 0x76c <__ultoa_invert+0x84>
 768:	a9 f7       	brne	.-22     	; 0x754 <__ultoa_invert+0x6c>
 76a:	ea cf       	rjmp	.-44     	; 0x740 <__ultoa_invert+0x58>
 76c:	b4 e0       	ldi	r27, 0x04	; 4
 76e:	a6 95       	lsr	r26
 770:	97 95       	ror	r25
 772:	87 95       	ror	r24
 774:	77 95       	ror	r23
 776:	67 95       	ror	r22
 778:	ba 95       	dec	r27
 77a:	c9 f7       	brne	.-14     	; 0x76e <__ultoa_invert+0x86>
 77c:	00 97       	sbiw	r24, 0x00	; 0
 77e:	61 05       	cpc	r22, r1
 780:	71 05       	cpc	r23, r1
 782:	08 95       	ret
 784:	9b 01       	movw	r18, r22
 786:	ac 01       	movw	r20, r24
 788:	0a 2e       	mov	r0, r26
 78a:	06 94       	lsr	r0
 78c:	57 95       	ror	r21
 78e:	47 95       	ror	r20
 790:	37 95       	ror	r19
 792:	27 95       	ror	r18
 794:	ba 95       	dec	r27
 796:	c9 f7       	brne	.-14     	; 0x78a <__ultoa_invert+0xa2>
 798:	62 0f       	add	r22, r18
 79a:	73 1f       	adc	r23, r19
 79c:	84 1f       	adc	r24, r20
 79e:	95 1f       	adc	r25, r21
 7a0:	a0 1d       	adc	r26, r0
 7a2:	08 95       	ret

000007a4 <_exit>:
 7a4:	f8 94       	cli

000007a6 <__stop_program>:
 7a6:	ff cf       	rjmp	.-2      	; 0x7a6 <__stop_program>
