
FinalProcedure.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000030  00800200  00000778  0000080c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000778  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800230  00800230  0000083c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000083c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000898  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000038  00000000  00000000  000008d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000eed  00000000  00000000  00000910  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d0d  00000000  00000000  000017fd  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000435  00000000  00000000  0000250a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000006c  00000000  00000000  00002940  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005dc  00000000  00000000  000029ac  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000014f  00000000  00000000  00002f88  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000028  00000000  00000000  000030d7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e8 e7       	ldi	r30, 0x78	; 120
  fc:	f7 e0       	ldi	r31, 0x07	; 7
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a0 33       	cpi	r26, 0x30	; 48
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	a0 e3       	ldi	r26, 0x30	; 48
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	a6 33       	cpi	r26, 0x36	; 54
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	29 d0       	rcall	.+82     	; 0x172 <main>
 120:	29 c3       	rjmp	.+1618   	; 0x774 <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <uart_putchar>:

// the following function sends a single character out of the serial port
static int uart_putchar(char ch, FILE *stream)
{

    while ( (UCSR0A & (1 << UDRE0)) == 0 )		// wait until there is room in the transmit buffer
 124:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7c00c0>
 128:	95 ff       	sbrs	r25, 5
 12a:	fc cf       	rjmp	.-8      	; 0x124 <uart_putchar>
	{
	}

    UDR0 = ch;									// load the character into the UART data register
 12c:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7c00c6>

    return 0;
}
 130:	80 e0       	ldi	r24, 0x00	; 0
 132:	90 e0       	ldi	r25, 0x00	; 0
 134:	08 95       	ret

00000136 <uart_getch>:
// the following function waits for a serial character to be received
static int uart_getch(FILE *stream)
{
   unsigned char ch;   							// create a variable to hold the received value
   
   while ( (UCSR0A & (1<<RXC0)) == 0 )			// wait until the received character flag is set
 136:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7c00c0>
 13a:	88 23       	and	r24, r24
 13c:	e4 f7       	brge	.-8      	; 0x136 <uart_getch>
   {
   }
   
   ch=UDR0;  									// load the received character into the local variable
 13e:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7c00c6>


   return ch;									// return the value
}
 142:	90 e0       	ldi	r25, 0x00	; 0
 144:	08 95       	ret

00000146 <init_UART>:


void init_UART(void)
{

	UCSR0A = 0x00;			
 146:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7c00c0>
	UCSR0B = 0x18;			// enable UART TX and RX
 14a:	88 e1       	ldi	r24, 0x18	; 24
 14c:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7c00c1>
	UCSR0C = 0x06;			// set the UART for N, 8, 1
 150:	86 e0       	ldi	r24, 0x06	; 6
 152:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7c00c2>
	UBRR0L = 103;			// set BAUD Rate for 9600 with 16MHz clock
 156:	87 e6       	ldi	r24, 0x67	; 103
 158:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7c00c4>
	UBRR0H = 0;
 15c:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7c00c5>

	stdout = &mystdout;		// define the output stream
 160:	e0 e3       	ldi	r30, 0x30	; 48
 162:	f2 e0       	ldi	r31, 0x02	; 2
 164:	80 e0       	ldi	r24, 0x00	; 0
 166:	92 e0       	ldi	r25, 0x02	; 2
 168:	93 83       	std	Z+3, r25	; 0x03
 16a:	82 83       	std	Z+2, r24	; 0x02
	stdin = &mystdout;		// define the input stream	
 16c:	91 83       	std	Z+1, r25	; 0x01
 16e:	80 83       	st	Z, r24
 170:	08 95       	ret

00000172 <main>:
#define F_CPU 16000000L
#include <util/delay.h>

int main(void)
{
	init_UART();		// turn on and setup the serial port connection
 172:	e9 df       	rcall	.-46     	; 0x146 <init_UART>
	DDRA = 0x00;	// configure Port A for input
 174:	11 b8       	out	0x01, r1	; 1
	PORTA = 0xFF;	// turn on the Port A pull-up resistors
 176:	8f ef       	ldi	r24, 0xFF	; 255
 178:	82 b9       	out	0x02, r24	; 2
	DDRC = 0xFF;	// configure Port C as an output
 17a:	87 b9       	out	0x07, r24	; 7
	PORTC = 0x00;	// start with all of the Port C values off (zero)
 17c:	18 b8       	out	0x08, r1	; 8

	uint16_t value;
	uint16_t count;

	printf("Top of the while(1) loop \n\r");
 17e:	8e e0       	ldi	r24, 0x0E	; 14
 180:	92 e0       	ldi	r25, 0x02	; 2
 182:	9f 93       	push	r25
 184:	8f 93       	push	r24
 186:	36 d0       	rcall	.+108    	; 0x1f4 <printf>
 188:	0f 90       	pop	r0
 18a:	0f 90       	pop	r0

	while(1)		// run this part of the program over and over
	{
		value = 0x80;
 18c:	20 e8       	ldi	r18, 0x80	; 128
 18e:	30 e0       	ldi	r19, 0x00	; 0
		
		while(PINA == 0)		// wait for pushbutton to be pressed
 190:	0f c0       	rjmp	.+30     	; 0x1b0 <main+0x3e>
		{
			if (value > 0)
 192:	21 15       	cp	r18, r1
 194:	31 05       	cpc	r19, r1
 196:	61 f0       	breq	.+24     	; 0x1b0 <main+0x3e>
			{
				PORTC = value;
 198:	28 b9       	out	0x08, r18	; 8
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 19a:	4f ef       	ldi	r20, 0xFF	; 255
 19c:	89 e6       	ldi	r24, 0x69	; 105
 19e:	98 e1       	ldi	r25, 0x18	; 24
 1a0:	41 50       	subi	r20, 0x01	; 1
 1a2:	80 40       	sbci	r24, 0x00	; 0
 1a4:	90 40       	sbci	r25, 0x00	; 0
 1a6:	e1 f7       	brne	.-8      	; 0x1a0 <main+0x2e>
 1a8:	00 c0       	rjmp	.+0      	; 0x1aa <main+0x38>
 1aa:	00 00       	nop
				_delay_ms(500);
				value = value >> 1;
 1ac:	36 95       	lsr	r19
 1ae:	27 95       	ror	r18

	while(1)		// run this part of the program over and over
	{
		value = 0x80;
		
		while(PINA == 0)		// wait for pushbutton to be pressed
 1b0:	80 b1       	in	r24, 0x00	; 0
 1b2:	88 23       	and	r24, r24
 1b4:	71 f3       	breq	.-36     	; 0x192 <main+0x20>
 1b6:	02 c0       	rjmp	.+4      	; 0x1bc <main+0x4a>
			}
		}
		
		while(PINA == 0x02)
		{
			count = 0;
 1b8:	c0 e0       	ldi	r28, 0x00	; 0
 1ba:	d0 e0       	ldi	r29, 0x00	; 0
				_delay_ms(500);
				value = value >> 1;
			}
		}
		
		while(PINA == 0x02)
 1bc:	80 b1       	in	r24, 0x00	; 0
 1be:	82 30       	cpi	r24, 0x02	; 2
 1c0:	d9 f3       	breq	.-10     	; 0x1b8 <main+0x46>
 1c2:	8f e9       	ldi	r24, 0x9F	; 159
 1c4:	9f e0       	ldi	r25, 0x0F	; 15
 1c6:	01 97       	sbiw	r24, 0x01	; 1
 1c8:	f1 f7       	brne	.-4      	; 0x1c6 <main+0x54>
 1ca:	00 c0       	rjmp	.+0      	; 0x1cc <main+0x5a>
 1cc:	00 00       	nop
		}
		
		do
		{
			_delay_ms(1);		// delay 1mS
			count++;			// increment counter
 1ce:	21 96       	adiw	r28, 0x01	; 1
		} while (PINA == 0);		// wait for button to be deactivated
 1d0:	80 b1       	in	r24, 0x00	; 0
 1d2:	88 23       	and	r24, r24
 1d4:	b1 f3       	breq	.-20     	; 0x1c2 <main+0x50>
		
		printf("%u\n\r", count);			// display the result
 1d6:	df 93       	push	r29
 1d8:	cf 93       	push	r28
 1da:	8a e2       	ldi	r24, 0x2A	; 42
 1dc:	92 e0       	ldi	r25, 0x02	; 2
 1de:	9f 93       	push	r25
 1e0:	8f 93       	push	r24
 1e2:	08 d0       	rcall	.+16     	; 0x1f4 <printf>
		
		while(PINA == 0x02)
 1e4:	0f 90       	pop	r0
 1e6:	0f 90       	pop	r0
 1e8:	0f 90       	pop	r0
 1ea:	0f 90       	pop	r0
 1ec:	80 b1       	in	r24, 0x00	; 0
 1ee:	82 30       	cpi	r24, 0x02	; 2
 1f0:	e9 f3       	breq	.-6      	; 0x1ec <main+0x7a>
 1f2:	cc cf       	rjmp	.-104    	; 0x18c <main+0x1a>

000001f4 <printf>:
 1f4:	cf 93       	push	r28
 1f6:	df 93       	push	r29
 1f8:	cd b7       	in	r28, 0x3d	; 61
 1fa:	de b7       	in	r29, 0x3e	; 62
 1fc:	ae 01       	movw	r20, r28
 1fe:	4a 5f       	subi	r20, 0xFA	; 250
 200:	5f 4f       	sbci	r21, 0xFF	; 255
 202:	fa 01       	movw	r30, r20
 204:	61 91       	ld	r22, Z+
 206:	71 91       	ld	r23, Z+
 208:	af 01       	movw	r20, r30
 20a:	80 91 32 02 	lds	r24, 0x0232	; 0x800232 <__data_end+0x2>
 20e:	90 91 33 02 	lds	r25, 0x0233	; 0x800233 <__data_end+0x3>
 212:	03 d0       	rcall	.+6      	; 0x21a <vfprintf>
 214:	df 91       	pop	r29
 216:	cf 91       	pop	r28
 218:	08 95       	ret

0000021a <vfprintf>:
 21a:	2f 92       	push	r2
 21c:	3f 92       	push	r3
 21e:	4f 92       	push	r4
 220:	5f 92       	push	r5
 222:	6f 92       	push	r6
 224:	7f 92       	push	r7
 226:	8f 92       	push	r8
 228:	9f 92       	push	r9
 22a:	af 92       	push	r10
 22c:	bf 92       	push	r11
 22e:	cf 92       	push	r12
 230:	df 92       	push	r13
 232:	ef 92       	push	r14
 234:	ff 92       	push	r15
 236:	0f 93       	push	r16
 238:	1f 93       	push	r17
 23a:	cf 93       	push	r28
 23c:	df 93       	push	r29
 23e:	cd b7       	in	r28, 0x3d	; 61
 240:	de b7       	in	r29, 0x3e	; 62
 242:	2b 97       	sbiw	r28, 0x0b	; 11
 244:	0f b6       	in	r0, 0x3f	; 63
 246:	f8 94       	cli
 248:	de bf       	out	0x3e, r29	; 62
 24a:	0f be       	out	0x3f, r0	; 63
 24c:	cd bf       	out	0x3d, r28	; 61
 24e:	6c 01       	movw	r12, r24
 250:	7b 01       	movw	r14, r22
 252:	8a 01       	movw	r16, r20
 254:	fc 01       	movw	r30, r24
 256:	17 82       	std	Z+7, r1	; 0x07
 258:	16 82       	std	Z+6, r1	; 0x06
 25a:	83 81       	ldd	r24, Z+3	; 0x03
 25c:	81 ff       	sbrs	r24, 1
 25e:	bf c1       	rjmp	.+894    	; 0x5de <__LOCK_REGION_LENGTH__+0x1de>
 260:	ce 01       	movw	r24, r28
 262:	01 96       	adiw	r24, 0x01	; 1
 264:	3c 01       	movw	r6, r24
 266:	f6 01       	movw	r30, r12
 268:	93 81       	ldd	r25, Z+3	; 0x03
 26a:	f7 01       	movw	r30, r14
 26c:	93 fd       	sbrc	r25, 3
 26e:	85 91       	lpm	r24, Z+
 270:	93 ff       	sbrs	r25, 3
 272:	81 91       	ld	r24, Z+
 274:	7f 01       	movw	r14, r30
 276:	88 23       	and	r24, r24
 278:	09 f4       	brne	.+2      	; 0x27c <vfprintf+0x62>
 27a:	ad c1       	rjmp	.+858    	; 0x5d6 <__LOCK_REGION_LENGTH__+0x1d6>
 27c:	85 32       	cpi	r24, 0x25	; 37
 27e:	39 f4       	brne	.+14     	; 0x28e <vfprintf+0x74>
 280:	93 fd       	sbrc	r25, 3
 282:	85 91       	lpm	r24, Z+
 284:	93 ff       	sbrs	r25, 3
 286:	81 91       	ld	r24, Z+
 288:	7f 01       	movw	r14, r30
 28a:	85 32       	cpi	r24, 0x25	; 37
 28c:	21 f4       	brne	.+8      	; 0x296 <vfprintf+0x7c>
 28e:	b6 01       	movw	r22, r12
 290:	90 e0       	ldi	r25, 0x00	; 0
 292:	d6 d1       	rcall	.+940    	; 0x640 <fputc>
 294:	e8 cf       	rjmp	.-48     	; 0x266 <vfprintf+0x4c>
 296:	91 2c       	mov	r9, r1
 298:	21 2c       	mov	r2, r1
 29a:	31 2c       	mov	r3, r1
 29c:	ff e1       	ldi	r31, 0x1F	; 31
 29e:	f3 15       	cp	r31, r3
 2a0:	d8 f0       	brcs	.+54     	; 0x2d8 <vfprintf+0xbe>
 2a2:	8b 32       	cpi	r24, 0x2B	; 43
 2a4:	79 f0       	breq	.+30     	; 0x2c4 <vfprintf+0xaa>
 2a6:	38 f4       	brcc	.+14     	; 0x2b6 <vfprintf+0x9c>
 2a8:	80 32       	cpi	r24, 0x20	; 32
 2aa:	79 f0       	breq	.+30     	; 0x2ca <vfprintf+0xb0>
 2ac:	83 32       	cpi	r24, 0x23	; 35
 2ae:	a1 f4       	brne	.+40     	; 0x2d8 <vfprintf+0xbe>
 2b0:	23 2d       	mov	r18, r3
 2b2:	20 61       	ori	r18, 0x10	; 16
 2b4:	1d c0       	rjmp	.+58     	; 0x2f0 <vfprintf+0xd6>
 2b6:	8d 32       	cpi	r24, 0x2D	; 45
 2b8:	61 f0       	breq	.+24     	; 0x2d2 <vfprintf+0xb8>
 2ba:	80 33       	cpi	r24, 0x30	; 48
 2bc:	69 f4       	brne	.+26     	; 0x2d8 <vfprintf+0xbe>
 2be:	23 2d       	mov	r18, r3
 2c0:	21 60       	ori	r18, 0x01	; 1
 2c2:	16 c0       	rjmp	.+44     	; 0x2f0 <vfprintf+0xd6>
 2c4:	83 2d       	mov	r24, r3
 2c6:	82 60       	ori	r24, 0x02	; 2
 2c8:	38 2e       	mov	r3, r24
 2ca:	e3 2d       	mov	r30, r3
 2cc:	e4 60       	ori	r30, 0x04	; 4
 2ce:	3e 2e       	mov	r3, r30
 2d0:	2a c0       	rjmp	.+84     	; 0x326 <vfprintf+0x10c>
 2d2:	f3 2d       	mov	r31, r3
 2d4:	f8 60       	ori	r31, 0x08	; 8
 2d6:	1d c0       	rjmp	.+58     	; 0x312 <vfprintf+0xf8>
 2d8:	37 fc       	sbrc	r3, 7
 2da:	2d c0       	rjmp	.+90     	; 0x336 <vfprintf+0x11c>
 2dc:	20 ed       	ldi	r18, 0xD0	; 208
 2de:	28 0f       	add	r18, r24
 2e0:	2a 30       	cpi	r18, 0x0A	; 10
 2e2:	40 f0       	brcs	.+16     	; 0x2f4 <vfprintf+0xda>
 2e4:	8e 32       	cpi	r24, 0x2E	; 46
 2e6:	b9 f4       	brne	.+46     	; 0x316 <vfprintf+0xfc>
 2e8:	36 fc       	sbrc	r3, 6
 2ea:	75 c1       	rjmp	.+746    	; 0x5d6 <__LOCK_REGION_LENGTH__+0x1d6>
 2ec:	23 2d       	mov	r18, r3
 2ee:	20 64       	ori	r18, 0x40	; 64
 2f0:	32 2e       	mov	r3, r18
 2f2:	19 c0       	rjmp	.+50     	; 0x326 <vfprintf+0x10c>
 2f4:	36 fe       	sbrs	r3, 6
 2f6:	06 c0       	rjmp	.+12     	; 0x304 <vfprintf+0xea>
 2f8:	8a e0       	ldi	r24, 0x0A	; 10
 2fa:	98 9e       	mul	r9, r24
 2fc:	20 0d       	add	r18, r0
 2fe:	11 24       	eor	r1, r1
 300:	92 2e       	mov	r9, r18
 302:	11 c0       	rjmp	.+34     	; 0x326 <vfprintf+0x10c>
 304:	ea e0       	ldi	r30, 0x0A	; 10
 306:	2e 9e       	mul	r2, r30
 308:	20 0d       	add	r18, r0
 30a:	11 24       	eor	r1, r1
 30c:	22 2e       	mov	r2, r18
 30e:	f3 2d       	mov	r31, r3
 310:	f0 62       	ori	r31, 0x20	; 32
 312:	3f 2e       	mov	r3, r31
 314:	08 c0       	rjmp	.+16     	; 0x326 <vfprintf+0x10c>
 316:	8c 36       	cpi	r24, 0x6C	; 108
 318:	21 f4       	brne	.+8      	; 0x322 <vfprintf+0x108>
 31a:	83 2d       	mov	r24, r3
 31c:	80 68       	ori	r24, 0x80	; 128
 31e:	38 2e       	mov	r3, r24
 320:	02 c0       	rjmp	.+4      	; 0x326 <vfprintf+0x10c>
 322:	88 36       	cpi	r24, 0x68	; 104
 324:	41 f4       	brne	.+16     	; 0x336 <vfprintf+0x11c>
 326:	f7 01       	movw	r30, r14
 328:	93 fd       	sbrc	r25, 3
 32a:	85 91       	lpm	r24, Z+
 32c:	93 ff       	sbrs	r25, 3
 32e:	81 91       	ld	r24, Z+
 330:	7f 01       	movw	r14, r30
 332:	81 11       	cpse	r24, r1
 334:	b3 cf       	rjmp	.-154    	; 0x29c <vfprintf+0x82>
 336:	98 2f       	mov	r25, r24
 338:	9f 7d       	andi	r25, 0xDF	; 223
 33a:	95 54       	subi	r25, 0x45	; 69
 33c:	93 30       	cpi	r25, 0x03	; 3
 33e:	28 f4       	brcc	.+10     	; 0x34a <vfprintf+0x130>
 340:	0c 5f       	subi	r16, 0xFC	; 252
 342:	1f 4f       	sbci	r17, 0xFF	; 255
 344:	9f e3       	ldi	r25, 0x3F	; 63
 346:	99 83       	std	Y+1, r25	; 0x01
 348:	0d c0       	rjmp	.+26     	; 0x364 <vfprintf+0x14a>
 34a:	83 36       	cpi	r24, 0x63	; 99
 34c:	31 f0       	breq	.+12     	; 0x35a <vfprintf+0x140>
 34e:	83 37       	cpi	r24, 0x73	; 115
 350:	71 f0       	breq	.+28     	; 0x36e <vfprintf+0x154>
 352:	83 35       	cpi	r24, 0x53	; 83
 354:	09 f0       	breq	.+2      	; 0x358 <vfprintf+0x13e>
 356:	55 c0       	rjmp	.+170    	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 358:	20 c0       	rjmp	.+64     	; 0x39a <vfprintf+0x180>
 35a:	f8 01       	movw	r30, r16
 35c:	80 81       	ld	r24, Z
 35e:	89 83       	std	Y+1, r24	; 0x01
 360:	0e 5f       	subi	r16, 0xFE	; 254
 362:	1f 4f       	sbci	r17, 0xFF	; 255
 364:	88 24       	eor	r8, r8
 366:	83 94       	inc	r8
 368:	91 2c       	mov	r9, r1
 36a:	53 01       	movw	r10, r6
 36c:	12 c0       	rjmp	.+36     	; 0x392 <vfprintf+0x178>
 36e:	28 01       	movw	r4, r16
 370:	f2 e0       	ldi	r31, 0x02	; 2
 372:	4f 0e       	add	r4, r31
 374:	51 1c       	adc	r5, r1
 376:	f8 01       	movw	r30, r16
 378:	a0 80       	ld	r10, Z
 37a:	b1 80       	ldd	r11, Z+1	; 0x01
 37c:	36 fe       	sbrs	r3, 6
 37e:	03 c0       	rjmp	.+6      	; 0x386 <vfprintf+0x16c>
 380:	69 2d       	mov	r22, r9
 382:	70 e0       	ldi	r23, 0x00	; 0
 384:	02 c0       	rjmp	.+4      	; 0x38a <vfprintf+0x170>
 386:	6f ef       	ldi	r22, 0xFF	; 255
 388:	7f ef       	ldi	r23, 0xFF	; 255
 38a:	c5 01       	movw	r24, r10
 38c:	4e d1       	rcall	.+668    	; 0x62a <strnlen>
 38e:	4c 01       	movw	r8, r24
 390:	82 01       	movw	r16, r4
 392:	f3 2d       	mov	r31, r3
 394:	ff 77       	andi	r31, 0x7F	; 127
 396:	3f 2e       	mov	r3, r31
 398:	15 c0       	rjmp	.+42     	; 0x3c4 <vfprintf+0x1aa>
 39a:	28 01       	movw	r4, r16
 39c:	22 e0       	ldi	r18, 0x02	; 2
 39e:	42 0e       	add	r4, r18
 3a0:	51 1c       	adc	r5, r1
 3a2:	f8 01       	movw	r30, r16
 3a4:	a0 80       	ld	r10, Z
 3a6:	b1 80       	ldd	r11, Z+1	; 0x01
 3a8:	36 fe       	sbrs	r3, 6
 3aa:	03 c0       	rjmp	.+6      	; 0x3b2 <vfprintf+0x198>
 3ac:	69 2d       	mov	r22, r9
 3ae:	70 e0       	ldi	r23, 0x00	; 0
 3b0:	02 c0       	rjmp	.+4      	; 0x3b6 <vfprintf+0x19c>
 3b2:	6f ef       	ldi	r22, 0xFF	; 255
 3b4:	7f ef       	ldi	r23, 0xFF	; 255
 3b6:	c5 01       	movw	r24, r10
 3b8:	2d d1       	rcall	.+602    	; 0x614 <strnlen_P>
 3ba:	4c 01       	movw	r8, r24
 3bc:	f3 2d       	mov	r31, r3
 3be:	f0 68       	ori	r31, 0x80	; 128
 3c0:	3f 2e       	mov	r3, r31
 3c2:	82 01       	movw	r16, r4
 3c4:	33 fc       	sbrc	r3, 3
 3c6:	19 c0       	rjmp	.+50     	; 0x3fa <vfprintf+0x1e0>
 3c8:	82 2d       	mov	r24, r2
 3ca:	90 e0       	ldi	r25, 0x00	; 0
 3cc:	88 16       	cp	r8, r24
 3ce:	99 06       	cpc	r9, r25
 3d0:	a0 f4       	brcc	.+40     	; 0x3fa <vfprintf+0x1e0>
 3d2:	b6 01       	movw	r22, r12
 3d4:	80 e2       	ldi	r24, 0x20	; 32
 3d6:	90 e0       	ldi	r25, 0x00	; 0
 3d8:	33 d1       	rcall	.+614    	; 0x640 <fputc>
 3da:	2a 94       	dec	r2
 3dc:	f5 cf       	rjmp	.-22     	; 0x3c8 <vfprintf+0x1ae>
 3de:	f5 01       	movw	r30, r10
 3e0:	37 fc       	sbrc	r3, 7
 3e2:	85 91       	lpm	r24, Z+
 3e4:	37 fe       	sbrs	r3, 7
 3e6:	81 91       	ld	r24, Z+
 3e8:	5f 01       	movw	r10, r30
 3ea:	b6 01       	movw	r22, r12
 3ec:	90 e0       	ldi	r25, 0x00	; 0
 3ee:	28 d1       	rcall	.+592    	; 0x640 <fputc>
 3f0:	21 10       	cpse	r2, r1
 3f2:	2a 94       	dec	r2
 3f4:	21 e0       	ldi	r18, 0x01	; 1
 3f6:	82 1a       	sub	r8, r18
 3f8:	91 08       	sbc	r9, r1
 3fa:	81 14       	cp	r8, r1
 3fc:	91 04       	cpc	r9, r1
 3fe:	79 f7       	brne	.-34     	; 0x3de <vfprintf+0x1c4>
 400:	e1 c0       	rjmp	.+450    	; 0x5c4 <__LOCK_REGION_LENGTH__+0x1c4>
 402:	84 36       	cpi	r24, 0x64	; 100
 404:	11 f0       	breq	.+4      	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 406:	89 36       	cpi	r24, 0x69	; 105
 408:	39 f5       	brne	.+78     	; 0x458 <__LOCK_REGION_LENGTH__+0x58>
 40a:	f8 01       	movw	r30, r16
 40c:	37 fe       	sbrs	r3, 7
 40e:	07 c0       	rjmp	.+14     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 410:	60 81       	ld	r22, Z
 412:	71 81       	ldd	r23, Z+1	; 0x01
 414:	82 81       	ldd	r24, Z+2	; 0x02
 416:	93 81       	ldd	r25, Z+3	; 0x03
 418:	0c 5f       	subi	r16, 0xFC	; 252
 41a:	1f 4f       	sbci	r17, 0xFF	; 255
 41c:	08 c0       	rjmp	.+16     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 41e:	60 81       	ld	r22, Z
 420:	71 81       	ldd	r23, Z+1	; 0x01
 422:	07 2e       	mov	r0, r23
 424:	00 0c       	add	r0, r0
 426:	88 0b       	sbc	r24, r24
 428:	99 0b       	sbc	r25, r25
 42a:	0e 5f       	subi	r16, 0xFE	; 254
 42c:	1f 4f       	sbci	r17, 0xFF	; 255
 42e:	f3 2d       	mov	r31, r3
 430:	ff 76       	andi	r31, 0x6F	; 111
 432:	3f 2e       	mov	r3, r31
 434:	97 ff       	sbrs	r25, 7
 436:	09 c0       	rjmp	.+18     	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 438:	90 95       	com	r25
 43a:	80 95       	com	r24
 43c:	70 95       	com	r23
 43e:	61 95       	neg	r22
 440:	7f 4f       	sbci	r23, 0xFF	; 255
 442:	8f 4f       	sbci	r24, 0xFF	; 255
 444:	9f 4f       	sbci	r25, 0xFF	; 255
 446:	f0 68       	ori	r31, 0x80	; 128
 448:	3f 2e       	mov	r3, r31
 44a:	2a e0       	ldi	r18, 0x0A	; 10
 44c:	30 e0       	ldi	r19, 0x00	; 0
 44e:	a3 01       	movw	r20, r6
 450:	33 d1       	rcall	.+614    	; 0x6b8 <__ultoa_invert>
 452:	88 2e       	mov	r8, r24
 454:	86 18       	sub	r8, r6
 456:	44 c0       	rjmp	.+136    	; 0x4e0 <__LOCK_REGION_LENGTH__+0xe0>
 458:	85 37       	cpi	r24, 0x75	; 117
 45a:	31 f4       	brne	.+12     	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
 45c:	23 2d       	mov	r18, r3
 45e:	2f 7e       	andi	r18, 0xEF	; 239
 460:	b2 2e       	mov	r11, r18
 462:	2a e0       	ldi	r18, 0x0A	; 10
 464:	30 e0       	ldi	r19, 0x00	; 0
 466:	25 c0       	rjmp	.+74     	; 0x4b2 <__LOCK_REGION_LENGTH__+0xb2>
 468:	93 2d       	mov	r25, r3
 46a:	99 7f       	andi	r25, 0xF9	; 249
 46c:	b9 2e       	mov	r11, r25
 46e:	8f 36       	cpi	r24, 0x6F	; 111
 470:	c1 f0       	breq	.+48     	; 0x4a2 <__LOCK_REGION_LENGTH__+0xa2>
 472:	18 f4       	brcc	.+6      	; 0x47a <__LOCK_REGION_LENGTH__+0x7a>
 474:	88 35       	cpi	r24, 0x58	; 88
 476:	79 f0       	breq	.+30     	; 0x496 <__LOCK_REGION_LENGTH__+0x96>
 478:	ae c0       	rjmp	.+348    	; 0x5d6 <__LOCK_REGION_LENGTH__+0x1d6>
 47a:	80 37       	cpi	r24, 0x70	; 112
 47c:	19 f0       	breq	.+6      	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
 47e:	88 37       	cpi	r24, 0x78	; 120
 480:	21 f0       	breq	.+8      	; 0x48a <__LOCK_REGION_LENGTH__+0x8a>
 482:	a9 c0       	rjmp	.+338    	; 0x5d6 <__LOCK_REGION_LENGTH__+0x1d6>
 484:	e9 2f       	mov	r30, r25
 486:	e0 61       	ori	r30, 0x10	; 16
 488:	be 2e       	mov	r11, r30
 48a:	b4 fe       	sbrs	r11, 4
 48c:	0d c0       	rjmp	.+26     	; 0x4a8 <__LOCK_REGION_LENGTH__+0xa8>
 48e:	fb 2d       	mov	r31, r11
 490:	f4 60       	ori	r31, 0x04	; 4
 492:	bf 2e       	mov	r11, r31
 494:	09 c0       	rjmp	.+18     	; 0x4a8 <__LOCK_REGION_LENGTH__+0xa8>
 496:	34 fe       	sbrs	r3, 4
 498:	0a c0       	rjmp	.+20     	; 0x4ae <__LOCK_REGION_LENGTH__+0xae>
 49a:	29 2f       	mov	r18, r25
 49c:	26 60       	ori	r18, 0x06	; 6
 49e:	b2 2e       	mov	r11, r18
 4a0:	06 c0       	rjmp	.+12     	; 0x4ae <__LOCK_REGION_LENGTH__+0xae>
 4a2:	28 e0       	ldi	r18, 0x08	; 8
 4a4:	30 e0       	ldi	r19, 0x00	; 0
 4a6:	05 c0       	rjmp	.+10     	; 0x4b2 <__LOCK_REGION_LENGTH__+0xb2>
 4a8:	20 e1       	ldi	r18, 0x10	; 16
 4aa:	30 e0       	ldi	r19, 0x00	; 0
 4ac:	02 c0       	rjmp	.+4      	; 0x4b2 <__LOCK_REGION_LENGTH__+0xb2>
 4ae:	20 e1       	ldi	r18, 0x10	; 16
 4b0:	32 e0       	ldi	r19, 0x02	; 2
 4b2:	f8 01       	movw	r30, r16
 4b4:	b7 fe       	sbrs	r11, 7
 4b6:	07 c0       	rjmp	.+14     	; 0x4c6 <__LOCK_REGION_LENGTH__+0xc6>
 4b8:	60 81       	ld	r22, Z
 4ba:	71 81       	ldd	r23, Z+1	; 0x01
 4bc:	82 81       	ldd	r24, Z+2	; 0x02
 4be:	93 81       	ldd	r25, Z+3	; 0x03
 4c0:	0c 5f       	subi	r16, 0xFC	; 252
 4c2:	1f 4f       	sbci	r17, 0xFF	; 255
 4c4:	06 c0       	rjmp	.+12     	; 0x4d2 <__LOCK_REGION_LENGTH__+0xd2>
 4c6:	60 81       	ld	r22, Z
 4c8:	71 81       	ldd	r23, Z+1	; 0x01
 4ca:	80 e0       	ldi	r24, 0x00	; 0
 4cc:	90 e0       	ldi	r25, 0x00	; 0
 4ce:	0e 5f       	subi	r16, 0xFE	; 254
 4d0:	1f 4f       	sbci	r17, 0xFF	; 255
 4d2:	a3 01       	movw	r20, r6
 4d4:	f1 d0       	rcall	.+482    	; 0x6b8 <__ultoa_invert>
 4d6:	88 2e       	mov	r8, r24
 4d8:	86 18       	sub	r8, r6
 4da:	fb 2d       	mov	r31, r11
 4dc:	ff 77       	andi	r31, 0x7F	; 127
 4de:	3f 2e       	mov	r3, r31
 4e0:	36 fe       	sbrs	r3, 6
 4e2:	0d c0       	rjmp	.+26     	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
 4e4:	23 2d       	mov	r18, r3
 4e6:	2e 7f       	andi	r18, 0xFE	; 254
 4e8:	a2 2e       	mov	r10, r18
 4ea:	89 14       	cp	r8, r9
 4ec:	58 f4       	brcc	.+22     	; 0x504 <__LOCK_REGION_LENGTH__+0x104>
 4ee:	34 fe       	sbrs	r3, 4
 4f0:	0b c0       	rjmp	.+22     	; 0x508 <__LOCK_REGION_LENGTH__+0x108>
 4f2:	32 fc       	sbrc	r3, 2
 4f4:	09 c0       	rjmp	.+18     	; 0x508 <__LOCK_REGION_LENGTH__+0x108>
 4f6:	83 2d       	mov	r24, r3
 4f8:	8e 7e       	andi	r24, 0xEE	; 238
 4fa:	a8 2e       	mov	r10, r24
 4fc:	05 c0       	rjmp	.+10     	; 0x508 <__LOCK_REGION_LENGTH__+0x108>
 4fe:	b8 2c       	mov	r11, r8
 500:	a3 2c       	mov	r10, r3
 502:	03 c0       	rjmp	.+6      	; 0x50a <__LOCK_REGION_LENGTH__+0x10a>
 504:	b8 2c       	mov	r11, r8
 506:	01 c0       	rjmp	.+2      	; 0x50a <__LOCK_REGION_LENGTH__+0x10a>
 508:	b9 2c       	mov	r11, r9
 50a:	a4 fe       	sbrs	r10, 4
 50c:	0f c0       	rjmp	.+30     	; 0x52c <__LOCK_REGION_LENGTH__+0x12c>
 50e:	fe 01       	movw	r30, r28
 510:	e8 0d       	add	r30, r8
 512:	f1 1d       	adc	r31, r1
 514:	80 81       	ld	r24, Z
 516:	80 33       	cpi	r24, 0x30	; 48
 518:	21 f4       	brne	.+8      	; 0x522 <__LOCK_REGION_LENGTH__+0x122>
 51a:	9a 2d       	mov	r25, r10
 51c:	99 7e       	andi	r25, 0xE9	; 233
 51e:	a9 2e       	mov	r10, r25
 520:	09 c0       	rjmp	.+18     	; 0x534 <__LOCK_REGION_LENGTH__+0x134>
 522:	a2 fe       	sbrs	r10, 2
 524:	06 c0       	rjmp	.+12     	; 0x532 <__LOCK_REGION_LENGTH__+0x132>
 526:	b3 94       	inc	r11
 528:	b3 94       	inc	r11
 52a:	04 c0       	rjmp	.+8      	; 0x534 <__LOCK_REGION_LENGTH__+0x134>
 52c:	8a 2d       	mov	r24, r10
 52e:	86 78       	andi	r24, 0x86	; 134
 530:	09 f0       	breq	.+2      	; 0x534 <__LOCK_REGION_LENGTH__+0x134>
 532:	b3 94       	inc	r11
 534:	a3 fc       	sbrc	r10, 3
 536:	10 c0       	rjmp	.+32     	; 0x558 <__LOCK_REGION_LENGTH__+0x158>
 538:	a0 fe       	sbrs	r10, 0
 53a:	06 c0       	rjmp	.+12     	; 0x548 <__LOCK_REGION_LENGTH__+0x148>
 53c:	b2 14       	cp	r11, r2
 53e:	80 f4       	brcc	.+32     	; 0x560 <__LOCK_REGION_LENGTH__+0x160>
 540:	28 0c       	add	r2, r8
 542:	92 2c       	mov	r9, r2
 544:	9b 18       	sub	r9, r11
 546:	0d c0       	rjmp	.+26     	; 0x562 <__LOCK_REGION_LENGTH__+0x162>
 548:	b2 14       	cp	r11, r2
 54a:	58 f4       	brcc	.+22     	; 0x562 <__LOCK_REGION_LENGTH__+0x162>
 54c:	b6 01       	movw	r22, r12
 54e:	80 e2       	ldi	r24, 0x20	; 32
 550:	90 e0       	ldi	r25, 0x00	; 0
 552:	76 d0       	rcall	.+236    	; 0x640 <fputc>
 554:	b3 94       	inc	r11
 556:	f8 cf       	rjmp	.-16     	; 0x548 <__LOCK_REGION_LENGTH__+0x148>
 558:	b2 14       	cp	r11, r2
 55a:	18 f4       	brcc	.+6      	; 0x562 <__LOCK_REGION_LENGTH__+0x162>
 55c:	2b 18       	sub	r2, r11
 55e:	02 c0       	rjmp	.+4      	; 0x564 <__LOCK_REGION_LENGTH__+0x164>
 560:	98 2c       	mov	r9, r8
 562:	21 2c       	mov	r2, r1
 564:	a4 fe       	sbrs	r10, 4
 566:	0f c0       	rjmp	.+30     	; 0x586 <__LOCK_REGION_LENGTH__+0x186>
 568:	b6 01       	movw	r22, r12
 56a:	80 e3       	ldi	r24, 0x30	; 48
 56c:	90 e0       	ldi	r25, 0x00	; 0
 56e:	68 d0       	rcall	.+208    	; 0x640 <fputc>
 570:	a2 fe       	sbrs	r10, 2
 572:	16 c0       	rjmp	.+44     	; 0x5a0 <__LOCK_REGION_LENGTH__+0x1a0>
 574:	a1 fc       	sbrc	r10, 1
 576:	03 c0       	rjmp	.+6      	; 0x57e <__LOCK_REGION_LENGTH__+0x17e>
 578:	88 e7       	ldi	r24, 0x78	; 120
 57a:	90 e0       	ldi	r25, 0x00	; 0
 57c:	02 c0       	rjmp	.+4      	; 0x582 <__LOCK_REGION_LENGTH__+0x182>
 57e:	88 e5       	ldi	r24, 0x58	; 88
 580:	90 e0       	ldi	r25, 0x00	; 0
 582:	b6 01       	movw	r22, r12
 584:	0c c0       	rjmp	.+24     	; 0x59e <__LOCK_REGION_LENGTH__+0x19e>
 586:	8a 2d       	mov	r24, r10
 588:	86 78       	andi	r24, 0x86	; 134
 58a:	51 f0       	breq	.+20     	; 0x5a0 <__LOCK_REGION_LENGTH__+0x1a0>
 58c:	a1 fe       	sbrs	r10, 1
 58e:	02 c0       	rjmp	.+4      	; 0x594 <__LOCK_REGION_LENGTH__+0x194>
 590:	8b e2       	ldi	r24, 0x2B	; 43
 592:	01 c0       	rjmp	.+2      	; 0x596 <__LOCK_REGION_LENGTH__+0x196>
 594:	80 e2       	ldi	r24, 0x20	; 32
 596:	a7 fc       	sbrc	r10, 7
 598:	8d e2       	ldi	r24, 0x2D	; 45
 59a:	b6 01       	movw	r22, r12
 59c:	90 e0       	ldi	r25, 0x00	; 0
 59e:	50 d0       	rcall	.+160    	; 0x640 <fputc>
 5a0:	89 14       	cp	r8, r9
 5a2:	30 f4       	brcc	.+12     	; 0x5b0 <__LOCK_REGION_LENGTH__+0x1b0>
 5a4:	b6 01       	movw	r22, r12
 5a6:	80 e3       	ldi	r24, 0x30	; 48
 5a8:	90 e0       	ldi	r25, 0x00	; 0
 5aa:	4a d0       	rcall	.+148    	; 0x640 <fputc>
 5ac:	9a 94       	dec	r9
 5ae:	f8 cf       	rjmp	.-16     	; 0x5a0 <__LOCK_REGION_LENGTH__+0x1a0>
 5b0:	8a 94       	dec	r8
 5b2:	f3 01       	movw	r30, r6
 5b4:	e8 0d       	add	r30, r8
 5b6:	f1 1d       	adc	r31, r1
 5b8:	80 81       	ld	r24, Z
 5ba:	b6 01       	movw	r22, r12
 5bc:	90 e0       	ldi	r25, 0x00	; 0
 5be:	40 d0       	rcall	.+128    	; 0x640 <fputc>
 5c0:	81 10       	cpse	r8, r1
 5c2:	f6 cf       	rjmp	.-20     	; 0x5b0 <__LOCK_REGION_LENGTH__+0x1b0>
 5c4:	22 20       	and	r2, r2
 5c6:	09 f4       	brne	.+2      	; 0x5ca <__LOCK_REGION_LENGTH__+0x1ca>
 5c8:	4e ce       	rjmp	.-868    	; 0x266 <vfprintf+0x4c>
 5ca:	b6 01       	movw	r22, r12
 5cc:	80 e2       	ldi	r24, 0x20	; 32
 5ce:	90 e0       	ldi	r25, 0x00	; 0
 5d0:	37 d0       	rcall	.+110    	; 0x640 <fputc>
 5d2:	2a 94       	dec	r2
 5d4:	f7 cf       	rjmp	.-18     	; 0x5c4 <__LOCK_REGION_LENGTH__+0x1c4>
 5d6:	f6 01       	movw	r30, r12
 5d8:	86 81       	ldd	r24, Z+6	; 0x06
 5da:	97 81       	ldd	r25, Z+7	; 0x07
 5dc:	02 c0       	rjmp	.+4      	; 0x5e2 <__LOCK_REGION_LENGTH__+0x1e2>
 5de:	8f ef       	ldi	r24, 0xFF	; 255
 5e0:	9f ef       	ldi	r25, 0xFF	; 255
 5e2:	2b 96       	adiw	r28, 0x0b	; 11
 5e4:	0f b6       	in	r0, 0x3f	; 63
 5e6:	f8 94       	cli
 5e8:	de bf       	out	0x3e, r29	; 62
 5ea:	0f be       	out	0x3f, r0	; 63
 5ec:	cd bf       	out	0x3d, r28	; 61
 5ee:	df 91       	pop	r29
 5f0:	cf 91       	pop	r28
 5f2:	1f 91       	pop	r17
 5f4:	0f 91       	pop	r16
 5f6:	ff 90       	pop	r15
 5f8:	ef 90       	pop	r14
 5fa:	df 90       	pop	r13
 5fc:	cf 90       	pop	r12
 5fe:	bf 90       	pop	r11
 600:	af 90       	pop	r10
 602:	9f 90       	pop	r9
 604:	8f 90       	pop	r8
 606:	7f 90       	pop	r7
 608:	6f 90       	pop	r6
 60a:	5f 90       	pop	r5
 60c:	4f 90       	pop	r4
 60e:	3f 90       	pop	r3
 610:	2f 90       	pop	r2
 612:	08 95       	ret

00000614 <strnlen_P>:
 614:	fc 01       	movw	r30, r24
 616:	05 90       	lpm	r0, Z+
 618:	61 50       	subi	r22, 0x01	; 1
 61a:	70 40       	sbci	r23, 0x00	; 0
 61c:	01 10       	cpse	r0, r1
 61e:	d8 f7       	brcc	.-10     	; 0x616 <strnlen_P+0x2>
 620:	80 95       	com	r24
 622:	90 95       	com	r25
 624:	8e 0f       	add	r24, r30
 626:	9f 1f       	adc	r25, r31
 628:	08 95       	ret

0000062a <strnlen>:
 62a:	fc 01       	movw	r30, r24
 62c:	61 50       	subi	r22, 0x01	; 1
 62e:	70 40       	sbci	r23, 0x00	; 0
 630:	01 90       	ld	r0, Z+
 632:	01 10       	cpse	r0, r1
 634:	d8 f7       	brcc	.-10     	; 0x62c <strnlen+0x2>
 636:	80 95       	com	r24
 638:	90 95       	com	r25
 63a:	8e 0f       	add	r24, r30
 63c:	9f 1f       	adc	r25, r31
 63e:	08 95       	ret

00000640 <fputc>:
 640:	0f 93       	push	r16
 642:	1f 93       	push	r17
 644:	cf 93       	push	r28
 646:	df 93       	push	r29
 648:	fb 01       	movw	r30, r22
 64a:	23 81       	ldd	r18, Z+3	; 0x03
 64c:	21 fd       	sbrc	r18, 1
 64e:	03 c0       	rjmp	.+6      	; 0x656 <fputc+0x16>
 650:	8f ef       	ldi	r24, 0xFF	; 255
 652:	9f ef       	ldi	r25, 0xFF	; 255
 654:	2c c0       	rjmp	.+88     	; 0x6ae <fputc+0x6e>
 656:	22 ff       	sbrs	r18, 2
 658:	16 c0       	rjmp	.+44     	; 0x686 <fputc+0x46>
 65a:	46 81       	ldd	r20, Z+6	; 0x06
 65c:	57 81       	ldd	r21, Z+7	; 0x07
 65e:	24 81       	ldd	r18, Z+4	; 0x04
 660:	35 81       	ldd	r19, Z+5	; 0x05
 662:	42 17       	cp	r20, r18
 664:	53 07       	cpc	r21, r19
 666:	44 f4       	brge	.+16     	; 0x678 <fputc+0x38>
 668:	a0 81       	ld	r26, Z
 66a:	b1 81       	ldd	r27, Z+1	; 0x01
 66c:	9d 01       	movw	r18, r26
 66e:	2f 5f       	subi	r18, 0xFF	; 255
 670:	3f 4f       	sbci	r19, 0xFF	; 255
 672:	31 83       	std	Z+1, r19	; 0x01
 674:	20 83       	st	Z, r18
 676:	8c 93       	st	X, r24
 678:	26 81       	ldd	r18, Z+6	; 0x06
 67a:	37 81       	ldd	r19, Z+7	; 0x07
 67c:	2f 5f       	subi	r18, 0xFF	; 255
 67e:	3f 4f       	sbci	r19, 0xFF	; 255
 680:	37 83       	std	Z+7, r19	; 0x07
 682:	26 83       	std	Z+6, r18	; 0x06
 684:	14 c0       	rjmp	.+40     	; 0x6ae <fputc+0x6e>
 686:	8b 01       	movw	r16, r22
 688:	ec 01       	movw	r28, r24
 68a:	fb 01       	movw	r30, r22
 68c:	00 84       	ldd	r0, Z+8	; 0x08
 68e:	f1 85       	ldd	r31, Z+9	; 0x09
 690:	e0 2d       	mov	r30, r0
 692:	19 95       	eicall
 694:	89 2b       	or	r24, r25
 696:	e1 f6       	brne	.-72     	; 0x650 <fputc+0x10>
 698:	d8 01       	movw	r26, r16
 69a:	16 96       	adiw	r26, 0x06	; 6
 69c:	8d 91       	ld	r24, X+
 69e:	9c 91       	ld	r25, X
 6a0:	17 97       	sbiw	r26, 0x07	; 7
 6a2:	01 96       	adiw	r24, 0x01	; 1
 6a4:	17 96       	adiw	r26, 0x07	; 7
 6a6:	9c 93       	st	X, r25
 6a8:	8e 93       	st	-X, r24
 6aa:	16 97       	sbiw	r26, 0x06	; 6
 6ac:	ce 01       	movw	r24, r28
 6ae:	df 91       	pop	r29
 6b0:	cf 91       	pop	r28
 6b2:	1f 91       	pop	r17
 6b4:	0f 91       	pop	r16
 6b6:	08 95       	ret

000006b8 <__ultoa_invert>:
 6b8:	fa 01       	movw	r30, r20
 6ba:	aa 27       	eor	r26, r26
 6bc:	28 30       	cpi	r18, 0x08	; 8
 6be:	51 f1       	breq	.+84     	; 0x714 <__ultoa_invert+0x5c>
 6c0:	20 31       	cpi	r18, 0x10	; 16
 6c2:	81 f1       	breq	.+96     	; 0x724 <__ultoa_invert+0x6c>
 6c4:	e8 94       	clt
 6c6:	6f 93       	push	r22
 6c8:	6e 7f       	andi	r22, 0xFE	; 254
 6ca:	6e 5f       	subi	r22, 0xFE	; 254
 6cc:	7f 4f       	sbci	r23, 0xFF	; 255
 6ce:	8f 4f       	sbci	r24, 0xFF	; 255
 6d0:	9f 4f       	sbci	r25, 0xFF	; 255
 6d2:	af 4f       	sbci	r26, 0xFF	; 255
 6d4:	b1 e0       	ldi	r27, 0x01	; 1
 6d6:	3e d0       	rcall	.+124    	; 0x754 <__ultoa_invert+0x9c>
 6d8:	b4 e0       	ldi	r27, 0x04	; 4
 6da:	3c d0       	rcall	.+120    	; 0x754 <__ultoa_invert+0x9c>
 6dc:	67 0f       	add	r22, r23
 6de:	78 1f       	adc	r23, r24
 6e0:	89 1f       	adc	r24, r25
 6e2:	9a 1f       	adc	r25, r26
 6e4:	a1 1d       	adc	r26, r1
 6e6:	68 0f       	add	r22, r24
 6e8:	79 1f       	adc	r23, r25
 6ea:	8a 1f       	adc	r24, r26
 6ec:	91 1d       	adc	r25, r1
 6ee:	a1 1d       	adc	r26, r1
 6f0:	6a 0f       	add	r22, r26
 6f2:	71 1d       	adc	r23, r1
 6f4:	81 1d       	adc	r24, r1
 6f6:	91 1d       	adc	r25, r1
 6f8:	a1 1d       	adc	r26, r1
 6fa:	20 d0       	rcall	.+64     	; 0x73c <__ultoa_invert+0x84>
 6fc:	09 f4       	brne	.+2      	; 0x700 <__ultoa_invert+0x48>
 6fe:	68 94       	set
 700:	3f 91       	pop	r19
 702:	2a e0       	ldi	r18, 0x0A	; 10
 704:	26 9f       	mul	r18, r22
 706:	11 24       	eor	r1, r1
 708:	30 19       	sub	r19, r0
 70a:	30 5d       	subi	r19, 0xD0	; 208
 70c:	31 93       	st	Z+, r19
 70e:	de f6       	brtc	.-74     	; 0x6c6 <__ultoa_invert+0xe>
 710:	cf 01       	movw	r24, r30
 712:	08 95       	ret
 714:	46 2f       	mov	r20, r22
 716:	47 70       	andi	r20, 0x07	; 7
 718:	40 5d       	subi	r20, 0xD0	; 208
 71a:	41 93       	st	Z+, r20
 71c:	b3 e0       	ldi	r27, 0x03	; 3
 71e:	0f d0       	rcall	.+30     	; 0x73e <__ultoa_invert+0x86>
 720:	c9 f7       	brne	.-14     	; 0x714 <__ultoa_invert+0x5c>
 722:	f6 cf       	rjmp	.-20     	; 0x710 <__ultoa_invert+0x58>
 724:	46 2f       	mov	r20, r22
 726:	4f 70       	andi	r20, 0x0F	; 15
 728:	40 5d       	subi	r20, 0xD0	; 208
 72a:	4a 33       	cpi	r20, 0x3A	; 58
 72c:	18 f0       	brcs	.+6      	; 0x734 <__ultoa_invert+0x7c>
 72e:	49 5d       	subi	r20, 0xD9	; 217
 730:	31 fd       	sbrc	r19, 1
 732:	40 52       	subi	r20, 0x20	; 32
 734:	41 93       	st	Z+, r20
 736:	02 d0       	rcall	.+4      	; 0x73c <__ultoa_invert+0x84>
 738:	a9 f7       	brne	.-22     	; 0x724 <__ultoa_invert+0x6c>
 73a:	ea cf       	rjmp	.-44     	; 0x710 <__ultoa_invert+0x58>
 73c:	b4 e0       	ldi	r27, 0x04	; 4
 73e:	a6 95       	lsr	r26
 740:	97 95       	ror	r25
 742:	87 95       	ror	r24
 744:	77 95       	ror	r23
 746:	67 95       	ror	r22
 748:	ba 95       	dec	r27
 74a:	c9 f7       	brne	.-14     	; 0x73e <__ultoa_invert+0x86>
 74c:	00 97       	sbiw	r24, 0x00	; 0
 74e:	61 05       	cpc	r22, r1
 750:	71 05       	cpc	r23, r1
 752:	08 95       	ret
 754:	9b 01       	movw	r18, r22
 756:	ac 01       	movw	r20, r24
 758:	0a 2e       	mov	r0, r26
 75a:	06 94       	lsr	r0
 75c:	57 95       	ror	r21
 75e:	47 95       	ror	r20
 760:	37 95       	ror	r19
 762:	27 95       	ror	r18
 764:	ba 95       	dec	r27
 766:	c9 f7       	brne	.-14     	; 0x75a <__ultoa_invert+0xa2>
 768:	62 0f       	add	r22, r18
 76a:	73 1f       	adc	r23, r19
 76c:	84 1f       	adc	r24, r20
 76e:	95 1f       	adc	r25, r21
 770:	a0 1d       	adc	r26, r0
 772:	08 95       	ret

00000774 <_exit>:
 774:	f8 94       	cli

00000776 <__stop_program>:
 776:	ff cf       	rjmp	.-2      	; 0x776 <__stop_program>
