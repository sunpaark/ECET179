
Procedure5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000098  00800200  0000084c  000008e0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000084c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800298  00800298  00000978  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000978  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000009d4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000078  00000000  00000000  00000a14  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001181  00000000  00000000  00000a8c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d6e  00000000  00000000  00001c0d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000005b0  00000000  00000000  0000297b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000010c  00000000  00000000  00002f2c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000063f  00000000  00000000  00003038  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000023c  00000000  00000000  00003677  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000068  00000000  00000000  000038b3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	ec e4       	ldi	r30, 0x4C	; 76
  fc:	f8 e0       	ldi	r31, 0x08	; 8
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a8 39       	cpi	r26, 0x98	; 152
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	a8 e9       	ldi	r26, 0x98	; 152
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	ae 39       	cpi	r26, 0x9E	; 158
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	79 d0       	rcall	.+242    	; 0x212 <main>
 120:	93 c3       	rjmp	.+1830   	; 0x848 <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <uart_putchar>:
	putchar_LCD(0xFE);
	putchar_LCD(0x45);
	putchar_LCD(cmd);
	
	_delay_ms(5);
}
 124:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7c00c0>
 128:	95 ff       	sbrs	r25, 5
 12a:	fc cf       	rjmp	.-8      	; 0x124 <uart_putchar>
 12c:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7c00c6>
 130:	80 e0       	ldi	r24, 0x00	; 0
 132:	90 e0       	ldi	r25, 0x00	; 0
 134:	08 95       	ret

00000136 <uart_getch>:
 136:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7c00c0>
 13a:	88 23       	and	r24, r24
 13c:	e4 f7       	brge	.-8      	; 0x136 <uart_getch>
 13e:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7c00c6>
 142:	90 e0       	ldi	r25, 0x00	; 0
 144:	08 95       	ret

00000146 <init_UART>:
 146:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7c00c0>
 14a:	88 e1       	ldi	r24, 0x18	; 24
 14c:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7c00c1>
 150:	86 e0       	ldi	r24, 0x06	; 6
 152:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7c00c2>
 156:	87 e6       	ldi	r24, 0x67	; 103
 158:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7c00c4>
 15c:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7c00c5>
 160:	e8 e9       	ldi	r30, 0x98	; 152
 162:	f2 e0       	ldi	r31, 0x02	; 2
 164:	80 e0       	ldi	r24, 0x00	; 0
 166:	92 e0       	ldi	r25, 0x02	; 2
 168:	93 83       	std	Z+3, r25	; 0x03
 16a:	82 83       	std	Z+2, r24	; 0x02
 16c:	91 83       	std	Z+1, r25	; 0x01
 16e:	80 83       	st	Z, r24
 170:	08 95       	ret

00000172 <init_LCD_UART>:
 172:	10 92 30 01 	sts	0x0130, r1	; 0x800130 <__TEXT_REGION_LENGTH__+0x7c0130>
 176:	88 e1       	ldi	r24, 0x18	; 24
 178:	80 93 31 01 	sts	0x0131, r24	; 0x800131 <__TEXT_REGION_LENGTH__+0x7c0131>
 17c:	86 e0       	ldi	r24, 0x06	; 6
 17e:	80 93 32 01 	sts	0x0132, r24	; 0x800132 <__TEXT_REGION_LENGTH__+0x7c0132>
 182:	87 e6       	ldi	r24, 0x67	; 103
 184:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <__TEXT_REGION_LENGTH__+0x7c0134>
 188:	10 92 35 01 	sts	0x0135, r1	; 0x800135 <__TEXT_REGION_LENGTH__+0x7c0135>
 18c:	08 95       	ret

0000018e <putchar_LCD>:
 18e:	90 91 30 01 	lds	r25, 0x0130	; 0x800130 <__TEXT_REGION_LENGTH__+0x7c0130>
 192:	95 ff       	sbrs	r25, 5
 194:	fc cf       	rjmp	.-8      	; 0x18e <putchar_LCD>
 196:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <__TEXT_REGION_LENGTH__+0x7c0136>
 19a:	08 95       	ret

0000019c <put_command_LCD>:
 19c:	cf 93       	push	r28
 19e:	c8 2f       	mov	r28, r24
 1a0:	8e ef       	ldi	r24, 0xFE	; 254
 1a2:	f5 df       	rcall	.-22     	; 0x18e <putchar_LCD>
 1a4:	8c 2f       	mov	r24, r28
 1a6:	f3 df       	rcall	.-26     	; 0x18e <putchar_LCD>
 1a8:	81 ee       	ldi	r24, 0xE1	; 225
 1aa:	94 e0       	ldi	r25, 0x04	; 4
 1ac:	01 97       	sbiw	r24, 0x01	; 1
 1ae:	f1 f7       	brne	.-4      	; 0x1ac <put_command_LCD+0x10>
 1b0:	00 c0       	rjmp	.+0      	; 0x1b2 <put_command_LCD+0x16>
 1b2:	00 00       	nop
 1b4:	cf 91       	pop	r28
 1b6:	08 95       	ret

000001b8 <putstring_LCD>:

void putstring_LCD(unsigned char *str)
{
 1b8:	cf 93       	push	r28
 1ba:	df 93       	push	r29
 1bc:	ec 01       	movw	r28, r24
	while( *str != 0)
 1be:	02 c0       	rjmp	.+4      	; 0x1c4 <putstring_LCD+0xc>
	{
		putchar_LCD(*str++);
 1c0:	21 96       	adiw	r28, 0x01	; 1
 1c2:	e5 df       	rcall	.-54     	; 0x18e <putchar_LCD>
	_delay_ms(5);
}

void putstring_LCD(unsigned char *str)
{
	while( *str != 0)
 1c4:	88 81       	ld	r24, Y
 1c6:	81 11       	cpse	r24, r1
 1c8:	fb cf       	rjmp	.-10     	; 0x1c0 <putstring_LCD+0x8>
	{
		putchar_LCD(*str++);
	}
}
 1ca:	df 91       	pop	r29
 1cc:	cf 91       	pop	r28
 1ce:	08 95       	ret

000001d0 <init_MP3_UART>:


void init_MP3_UART(void)
{

	UCSR1A = 0x00;			
 1d0:	10 92 c8 00 	sts	0x00C8, r1	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7c00c8>
	UCSR1B = 0x18;			// enable UART TX and RX
 1d4:	88 e1       	ldi	r24, 0x18	; 24
 1d6:	80 93 c9 00 	sts	0x00C9, r24	; 0x8000c9 <__TEXT_REGION_LENGTH__+0x7c00c9>
	UCSR1C = 0x06;			// set the UART for N, 8, 1
 1da:	86 e0       	ldi	r24, 0x06	; 6
 1dc:	80 93 ca 00 	sts	0x00CA, r24	; 0x8000ca <__TEXT_REGION_LENGTH__+0x7c00ca>
	UBRR1L = 103;			// set BAUD Rate for 9600 with 16MHz clock
 1e0:	87 e6       	ldi	r24, 0x67	; 103
 1e2:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7c00cc>
	UBRR1H = 0;
 1e6:	10 92 cd 00 	sts	0x00CD, r1	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7c00cd>
 1ea:	08 95       	ret

000001ec <putchar_MP3>:

// the following function sends a single character out of the serial port
void putchar_MP3(char ch)
{

    while ( (UCSR1A & (1 << UDRE1)) == 0 )		// wait until there is room in the transmit buffer
 1ec:	90 91 c8 00 	lds	r25, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7c00c8>
 1f0:	95 ff       	sbrs	r25, 5
 1f2:	fc cf       	rjmp	.-8      	; 0x1ec <putchar_MP3>
	{
	}

    UDR1 = ch;									// load the character into the UART data register
 1f4:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7c00ce>
 1f8:	08 95       	ret

000001fa <putstring_MP3>:
}

void putstring_MP3(char *str)
{
 1fa:	cf 93       	push	r28
 1fc:	df 93       	push	r29
 1fe:	ec 01       	movw	r28, r24
	while(*str != 0)
 200:	02 c0       	rjmp	.+4      	; 0x206 <putstring_MP3+0xc>
	{
		putchar_MP3(*str++);
 202:	21 96       	adiw	r28, 0x01	; 1
 204:	f3 df       	rcall	.-26     	; 0x1ec <putchar_MP3>
    UDR1 = ch;									// load the character into the UART data register
}

void putstring_MP3(char *str)
{
	while(*str != 0)
 206:	88 81       	ld	r24, Y
 208:	81 11       	cpse	r24, r1
 20a:	fb cf       	rjmp	.-10     	; 0x202 <putstring_MP3+0x8>
	{
		putchar_MP3(*str++);
	}
 20c:	df 91       	pop	r29
 20e:	cf 91       	pop	r28
 210:	08 95       	ret

00000212 <main>:
#include "serial.c"
#include "serial_LCD.c"
#include "serial_MP3.c"

int main(void)
{
 212:	cf 93       	push	r28
 214:	df 93       	push	r29
 216:	cd b7       	in	r28, 0x3d	; 61
 218:	de b7       	in	r29, 0x3e	; 62
 21a:	69 97       	sbiw	r28, 0x19	; 25
 21c:	0f b6       	in	r0, 0x3f	; 63
 21e:	f8 94       	cli
 220:	de bf       	out	0x3e, r29	; 62
 222:	0f be       	out	0x3f, r0	; 63
 224:	cd bf       	out	0x3d, r28	; 61
	DDRA = 0x00;
 226:	11 b8       	out	0x01, r1	; 1
	PORTA = 0xFF;
 228:	8f ef       	ldi	r24, 0xFF	; 255
 22a:	82 b9       	out	0x02, r24	; 2
	
	init_UART();			// initialize the UART for 9600, N, 8, 1
 22c:	8c df       	rcall	.-232    	; 0x146 <init_UART>

	printf("MP3 Player Test Program\n\r");	// need an initial message
 22e:	8e e0       	ldi	r24, 0x0E	; 14
 230:	92 e0       	ldi	r25, 0x02	; 2
 232:	9f 93       	push	r25
 234:	8f 93       	push	r24
	
	init_LCD_UART();		// turn on and initial the UART for the LCD
 236:	48 d0       	rcall	.+144    	; 0x2c8 <printf>

	put_command_LCD(0x0E);		// turn on the LCD
 238:	9c df       	rcall	.-200    	; 0x172 <init_LCD_UART>
 23a:	8e e0       	ldi	r24, 0x0E	; 14

	put_command_LCD(0x01);		// clear and home the LCD
 23c:	af df       	rcall	.-162    	; 0x19c <put_command_LCD>

	putstring_LCD("LCD Test Message!?");		// display a message
 23e:	81 e0       	ldi	r24, 0x01	; 1
 240:	ad df       	rcall	.-166    	; 0x19c <put_command_LCD>
 242:	88 e2       	ldi	r24, 0x28	; 40

	init_MP3_UART();		// turn on and initial the UART for the MP3 Player
 244:	92 e0       	ldi	r25, 0x02	; 2
 246:	b8 df       	rcall	.-144    	; 0x1b8 <putstring_LCD>

	putstring_MP3("MP3 Player Test Message?");	// display a test message
 248:	c3 df       	rcall	.-122    	; 0x1d0 <init_MP3_UART>
 24a:	8b e3       	ldi	r24, 0x3B	; 59
 24c:	92 e0       	ldi	r25, 0x02	; 2
 24e:	d5 df       	rcall	.-86     	; 0x1fa <putstring_MP3>
 250:	0f 90       	pop	r0
 252:	0f 90       	pop	r0
	
	unsigned char buffer[25];

	while(1)
	{
		while(PINA == 0)
 254:	80 b1       	in	r24, 0x00	; 0
 256:	88 23       	and	r24, r24
 258:	e9 f3       	breq	.-6      	; 0x254 <main+0x42>
		{
		}
		
		switch(PINA)
 25a:	80 b1       	in	r24, 0x00	; 0
 25c:	82 30       	cpi	r24, 0x02	; 2
 25e:	81 f0       	breq	.+32     	; 0x280 <main+0x6e>
 260:	18 f4       	brcc	.+6      	; 0x268 <main+0x56>
 262:	81 30       	cpi	r24, 0x01	; 1
 264:	31 f0       	breq	.+12     	; 0x272 <main+0x60>
 266:	2c c0       	rjmp	.+88     	; 0x2c0 <main+0xae>
 268:	84 30       	cpi	r24, 0x04	; 4
 26a:	89 f0       	breq	.+34     	; 0x28e <main+0x7c>
 26c:	88 30       	cpi	r24, 0x08	; 8
		{
			case 1:
			{
				putstring_MP3("PC P\r\n");
 26e:	e1 f0       	breq	.+56     	; 0x2a8 <main+0x96>
 270:	27 c0       	rjmp	.+78     	; 0x2c0 <main+0xae>
 272:	84 e5       	ldi	r24, 0x54	; 84
				putstring_LCD("Play\r\n");		// display a message
 274:	92 e0       	ldi	r25, 0x02	; 2
 276:	c1 df       	rcall	.-126    	; 0x1fa <putstring_MP3>
 278:	8b e5       	ldi	r24, 0x5B	; 91
				break;
 27a:	92 e0       	ldi	r25, 0x02	; 2
			}
			
			case 2:
			{
				putstring_MP3("PC S\r\n");
 27c:	9d df       	rcall	.-198    	; 0x1b8 <putstring_LCD>
 27e:	20 c0       	rjmp	.+64     	; 0x2c0 <main+0xae>
 280:	82 e6       	ldi	r24, 0x62	; 98
 282:	92 e0       	ldi	r25, 0x02	; 2
				putstring_LCD("Stop\r\n");		// display a message
 284:	ba df       	rcall	.-140    	; 0x1fa <putstring_MP3>
 286:	89 e6       	ldi	r24, 0x69	; 105
 288:	92 e0       	ldi	r25, 0x02	; 2
 28a:	96 df       	rcall	.-212    	; 0x1b8 <putstring_LCD>
				break;
			}
			
			case 4:
			{
				sprintf(buffer, "PC F/Track0001.mp3\r");
 28c:	19 c0       	rjmp	.+50     	; 0x2c0 <main+0xae>
 28e:	84 e1       	ldi	r24, 0x14	; 20
 290:	e0 e7       	ldi	r30, 0x70	; 112
 292:	f2 e0       	ldi	r31, 0x02	; 2
 294:	de 01       	movw	r26, r28
 296:	11 96       	adiw	r26, 0x01	; 1
 298:	01 90       	ld	r0, Z+
 29a:	0d 92       	st	X+, r0
 29c:	8a 95       	dec	r24
				putstring_MP3(buffer);
 29e:	e1 f7       	brne	.-8      	; 0x298 <main+0x86>
 2a0:	ce 01       	movw	r24, r28
 2a2:	01 96       	adiw	r24, 0x01	; 1
				break;
 2a4:	aa df       	rcall	.-172    	; 0x1fa <putstring_MP3>
			}
			
			case 8:
			{
				sprintf(buffer, "PC F/Track0002.mp3\r");
 2a6:	0c c0       	rjmp	.+24     	; 0x2c0 <main+0xae>
 2a8:	84 e1       	ldi	r24, 0x14	; 20
 2aa:	e4 e8       	ldi	r30, 0x84	; 132
 2ac:	f2 e0       	ldi	r31, 0x02	; 2
 2ae:	de 01       	movw	r26, r28
 2b0:	11 96       	adiw	r26, 0x01	; 1
 2b2:	01 90       	ld	r0, Z+
 2b4:	0d 92       	st	X+, r0
 2b6:	8a 95       	dec	r24
				putstring_MP3(buffer);
 2b8:	e1 f7       	brne	.-8      	; 0x2b2 <main+0xa0>
 2ba:	ce 01       	movw	r24, r28
 2bc:	01 96       	adiw	r24, 0x01	; 1
 2be:	9d df       	rcall	.-198    	; 0x1fa <putstring_MP3>
				break;
			}
		}
		
		while (PINA == 1)
 2c0:	80 b1       	in	r24, 0x00	; 0
 2c2:	81 30       	cpi	r24, 0x01	; 1
 2c4:	e9 f3       	breq	.-6      	; 0x2c0 <main+0xae>
 2c6:	c6 cf       	rjmp	.-116    	; 0x254 <main+0x42>

000002c8 <printf>:
 2c8:	cf 93       	push	r28
 2ca:	df 93       	push	r29
 2cc:	cd b7       	in	r28, 0x3d	; 61
 2ce:	de b7       	in	r29, 0x3e	; 62
 2d0:	ae 01       	movw	r20, r28
 2d2:	4a 5f       	subi	r20, 0xFA	; 250
 2d4:	5f 4f       	sbci	r21, 0xFF	; 255
 2d6:	fa 01       	movw	r30, r20
 2d8:	61 91       	ld	r22, Z+
 2da:	71 91       	ld	r23, Z+
 2dc:	af 01       	movw	r20, r30
 2de:	80 91 9a 02 	lds	r24, 0x029A	; 0x80029a <__data_end+0x2>
 2e2:	90 91 9b 02 	lds	r25, 0x029B	; 0x80029b <__data_end+0x3>
 2e6:	03 d0       	rcall	.+6      	; 0x2ee <vfprintf>
 2e8:	df 91       	pop	r29
 2ea:	cf 91       	pop	r28
 2ec:	08 95       	ret

000002ee <vfprintf>:
 2ee:	2f 92       	push	r2
 2f0:	3f 92       	push	r3
 2f2:	4f 92       	push	r4
 2f4:	5f 92       	push	r5
 2f6:	6f 92       	push	r6
 2f8:	7f 92       	push	r7
 2fa:	8f 92       	push	r8
 2fc:	9f 92       	push	r9
 2fe:	af 92       	push	r10
 300:	bf 92       	push	r11
 302:	cf 92       	push	r12
 304:	df 92       	push	r13
 306:	ef 92       	push	r14
 308:	ff 92       	push	r15
 30a:	0f 93       	push	r16
 30c:	1f 93       	push	r17
 30e:	cf 93       	push	r28
 310:	df 93       	push	r29
 312:	cd b7       	in	r28, 0x3d	; 61
 314:	de b7       	in	r29, 0x3e	; 62
 316:	2b 97       	sbiw	r28, 0x0b	; 11
 318:	0f b6       	in	r0, 0x3f	; 63
 31a:	f8 94       	cli
 31c:	de bf       	out	0x3e, r29	; 62
 31e:	0f be       	out	0x3f, r0	; 63
 320:	cd bf       	out	0x3d, r28	; 61
 322:	6c 01       	movw	r12, r24
 324:	7b 01       	movw	r14, r22
 326:	8a 01       	movw	r16, r20
 328:	fc 01       	movw	r30, r24
 32a:	17 82       	std	Z+7, r1	; 0x07
 32c:	16 82       	std	Z+6, r1	; 0x06
 32e:	83 81       	ldd	r24, Z+3	; 0x03
 330:	81 ff       	sbrs	r24, 1
 332:	bf c1       	rjmp	.+894    	; 0x6b2 <__LOCK_REGION_LENGTH__+0x2b2>
 334:	ce 01       	movw	r24, r28
 336:	01 96       	adiw	r24, 0x01	; 1
 338:	3c 01       	movw	r6, r24
 33a:	f6 01       	movw	r30, r12
 33c:	93 81       	ldd	r25, Z+3	; 0x03
 33e:	f7 01       	movw	r30, r14
 340:	93 fd       	sbrc	r25, 3
 342:	85 91       	lpm	r24, Z+
 344:	93 ff       	sbrs	r25, 3
 346:	81 91       	ld	r24, Z+
 348:	7f 01       	movw	r14, r30
 34a:	88 23       	and	r24, r24
 34c:	09 f4       	brne	.+2      	; 0x350 <vfprintf+0x62>
 34e:	ad c1       	rjmp	.+858    	; 0x6aa <__LOCK_REGION_LENGTH__+0x2aa>
 350:	85 32       	cpi	r24, 0x25	; 37
 352:	39 f4       	brne	.+14     	; 0x362 <vfprintf+0x74>
 354:	93 fd       	sbrc	r25, 3
 356:	85 91       	lpm	r24, Z+
 358:	93 ff       	sbrs	r25, 3
 35a:	81 91       	ld	r24, Z+
 35c:	7f 01       	movw	r14, r30
 35e:	85 32       	cpi	r24, 0x25	; 37
 360:	21 f4       	brne	.+8      	; 0x36a <vfprintf+0x7c>
 362:	b6 01       	movw	r22, r12
 364:	90 e0       	ldi	r25, 0x00	; 0
 366:	d6 d1       	rcall	.+940    	; 0x714 <fputc>
 368:	e8 cf       	rjmp	.-48     	; 0x33a <vfprintf+0x4c>
 36a:	91 2c       	mov	r9, r1
 36c:	21 2c       	mov	r2, r1
 36e:	31 2c       	mov	r3, r1
 370:	ff e1       	ldi	r31, 0x1F	; 31
 372:	f3 15       	cp	r31, r3
 374:	d8 f0       	brcs	.+54     	; 0x3ac <vfprintf+0xbe>
 376:	8b 32       	cpi	r24, 0x2B	; 43
 378:	79 f0       	breq	.+30     	; 0x398 <vfprintf+0xaa>
 37a:	38 f4       	brcc	.+14     	; 0x38a <vfprintf+0x9c>
 37c:	80 32       	cpi	r24, 0x20	; 32
 37e:	79 f0       	breq	.+30     	; 0x39e <vfprintf+0xb0>
 380:	83 32       	cpi	r24, 0x23	; 35
 382:	a1 f4       	brne	.+40     	; 0x3ac <vfprintf+0xbe>
 384:	23 2d       	mov	r18, r3
 386:	20 61       	ori	r18, 0x10	; 16
 388:	1d c0       	rjmp	.+58     	; 0x3c4 <vfprintf+0xd6>
 38a:	8d 32       	cpi	r24, 0x2D	; 45
 38c:	61 f0       	breq	.+24     	; 0x3a6 <vfprintf+0xb8>
 38e:	80 33       	cpi	r24, 0x30	; 48
 390:	69 f4       	brne	.+26     	; 0x3ac <vfprintf+0xbe>
 392:	23 2d       	mov	r18, r3
 394:	21 60       	ori	r18, 0x01	; 1
 396:	16 c0       	rjmp	.+44     	; 0x3c4 <vfprintf+0xd6>
 398:	83 2d       	mov	r24, r3
 39a:	82 60       	ori	r24, 0x02	; 2
 39c:	38 2e       	mov	r3, r24
 39e:	e3 2d       	mov	r30, r3
 3a0:	e4 60       	ori	r30, 0x04	; 4
 3a2:	3e 2e       	mov	r3, r30
 3a4:	2a c0       	rjmp	.+84     	; 0x3fa <vfprintf+0x10c>
 3a6:	f3 2d       	mov	r31, r3
 3a8:	f8 60       	ori	r31, 0x08	; 8
 3aa:	1d c0       	rjmp	.+58     	; 0x3e6 <vfprintf+0xf8>
 3ac:	37 fc       	sbrc	r3, 7
 3ae:	2d c0       	rjmp	.+90     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 3b0:	20 ed       	ldi	r18, 0xD0	; 208
 3b2:	28 0f       	add	r18, r24
 3b4:	2a 30       	cpi	r18, 0x0A	; 10
 3b6:	40 f0       	brcs	.+16     	; 0x3c8 <vfprintf+0xda>
 3b8:	8e 32       	cpi	r24, 0x2E	; 46
 3ba:	b9 f4       	brne	.+46     	; 0x3ea <vfprintf+0xfc>
 3bc:	36 fc       	sbrc	r3, 6
 3be:	75 c1       	rjmp	.+746    	; 0x6aa <__LOCK_REGION_LENGTH__+0x2aa>
 3c0:	23 2d       	mov	r18, r3
 3c2:	20 64       	ori	r18, 0x40	; 64
 3c4:	32 2e       	mov	r3, r18
 3c6:	19 c0       	rjmp	.+50     	; 0x3fa <vfprintf+0x10c>
 3c8:	36 fe       	sbrs	r3, 6
 3ca:	06 c0       	rjmp	.+12     	; 0x3d8 <vfprintf+0xea>
 3cc:	8a e0       	ldi	r24, 0x0A	; 10
 3ce:	98 9e       	mul	r9, r24
 3d0:	20 0d       	add	r18, r0
 3d2:	11 24       	eor	r1, r1
 3d4:	92 2e       	mov	r9, r18
 3d6:	11 c0       	rjmp	.+34     	; 0x3fa <vfprintf+0x10c>
 3d8:	ea e0       	ldi	r30, 0x0A	; 10
 3da:	2e 9e       	mul	r2, r30
 3dc:	20 0d       	add	r18, r0
 3de:	11 24       	eor	r1, r1
 3e0:	22 2e       	mov	r2, r18
 3e2:	f3 2d       	mov	r31, r3
 3e4:	f0 62       	ori	r31, 0x20	; 32
 3e6:	3f 2e       	mov	r3, r31
 3e8:	08 c0       	rjmp	.+16     	; 0x3fa <vfprintf+0x10c>
 3ea:	8c 36       	cpi	r24, 0x6C	; 108
 3ec:	21 f4       	brne	.+8      	; 0x3f6 <vfprintf+0x108>
 3ee:	83 2d       	mov	r24, r3
 3f0:	80 68       	ori	r24, 0x80	; 128
 3f2:	38 2e       	mov	r3, r24
 3f4:	02 c0       	rjmp	.+4      	; 0x3fa <vfprintf+0x10c>
 3f6:	88 36       	cpi	r24, 0x68	; 104
 3f8:	41 f4       	brne	.+16     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 3fa:	f7 01       	movw	r30, r14
 3fc:	93 fd       	sbrc	r25, 3
 3fe:	85 91       	lpm	r24, Z+
 400:	93 ff       	sbrs	r25, 3
 402:	81 91       	ld	r24, Z+
 404:	7f 01       	movw	r14, r30
 406:	81 11       	cpse	r24, r1
 408:	b3 cf       	rjmp	.-154    	; 0x370 <vfprintf+0x82>
 40a:	98 2f       	mov	r25, r24
 40c:	9f 7d       	andi	r25, 0xDF	; 223
 40e:	95 54       	subi	r25, 0x45	; 69
 410:	93 30       	cpi	r25, 0x03	; 3
 412:	28 f4       	brcc	.+10     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 414:	0c 5f       	subi	r16, 0xFC	; 252
 416:	1f 4f       	sbci	r17, 0xFF	; 255
 418:	9f e3       	ldi	r25, 0x3F	; 63
 41a:	99 83       	std	Y+1, r25	; 0x01
 41c:	0d c0       	rjmp	.+26     	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
 41e:	83 36       	cpi	r24, 0x63	; 99
 420:	31 f0       	breq	.+12     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 422:	83 37       	cpi	r24, 0x73	; 115
 424:	71 f0       	breq	.+28     	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 426:	83 35       	cpi	r24, 0x53	; 83
 428:	09 f0       	breq	.+2      	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 42a:	55 c0       	rjmp	.+170    	; 0x4d6 <__LOCK_REGION_LENGTH__+0xd6>
 42c:	20 c0       	rjmp	.+64     	; 0x46e <__LOCK_REGION_LENGTH__+0x6e>
 42e:	f8 01       	movw	r30, r16
 430:	80 81       	ld	r24, Z
 432:	89 83       	std	Y+1, r24	; 0x01
 434:	0e 5f       	subi	r16, 0xFE	; 254
 436:	1f 4f       	sbci	r17, 0xFF	; 255
 438:	88 24       	eor	r8, r8
 43a:	83 94       	inc	r8
 43c:	91 2c       	mov	r9, r1
 43e:	53 01       	movw	r10, r6
 440:	12 c0       	rjmp	.+36     	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
 442:	28 01       	movw	r4, r16
 444:	f2 e0       	ldi	r31, 0x02	; 2
 446:	4f 0e       	add	r4, r31
 448:	51 1c       	adc	r5, r1
 44a:	f8 01       	movw	r30, r16
 44c:	a0 80       	ld	r10, Z
 44e:	b1 80       	ldd	r11, Z+1	; 0x01
 450:	36 fe       	sbrs	r3, 6
 452:	03 c0       	rjmp	.+6      	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
 454:	69 2d       	mov	r22, r9
 456:	70 e0       	ldi	r23, 0x00	; 0
 458:	02 c0       	rjmp	.+4      	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 45a:	6f ef       	ldi	r22, 0xFF	; 255
 45c:	7f ef       	ldi	r23, 0xFF	; 255
 45e:	c5 01       	movw	r24, r10
 460:	4e d1       	rcall	.+668    	; 0x6fe <strnlen>
 462:	4c 01       	movw	r8, r24
 464:	82 01       	movw	r16, r4
 466:	f3 2d       	mov	r31, r3
 468:	ff 77       	andi	r31, 0x7F	; 127
 46a:	3f 2e       	mov	r3, r31
 46c:	15 c0       	rjmp	.+42     	; 0x498 <__LOCK_REGION_LENGTH__+0x98>
 46e:	28 01       	movw	r4, r16
 470:	22 e0       	ldi	r18, 0x02	; 2
 472:	42 0e       	add	r4, r18
 474:	51 1c       	adc	r5, r1
 476:	f8 01       	movw	r30, r16
 478:	a0 80       	ld	r10, Z
 47a:	b1 80       	ldd	r11, Z+1	; 0x01
 47c:	36 fe       	sbrs	r3, 6
 47e:	03 c0       	rjmp	.+6      	; 0x486 <__LOCK_REGION_LENGTH__+0x86>
 480:	69 2d       	mov	r22, r9
 482:	70 e0       	ldi	r23, 0x00	; 0
 484:	02 c0       	rjmp	.+4      	; 0x48a <__LOCK_REGION_LENGTH__+0x8a>
 486:	6f ef       	ldi	r22, 0xFF	; 255
 488:	7f ef       	ldi	r23, 0xFF	; 255
 48a:	c5 01       	movw	r24, r10
 48c:	2d d1       	rcall	.+602    	; 0x6e8 <strnlen_P>
 48e:	4c 01       	movw	r8, r24
 490:	f3 2d       	mov	r31, r3
 492:	f0 68       	ori	r31, 0x80	; 128
 494:	3f 2e       	mov	r3, r31
 496:	82 01       	movw	r16, r4
 498:	33 fc       	sbrc	r3, 3
 49a:	19 c0       	rjmp	.+50     	; 0x4ce <__LOCK_REGION_LENGTH__+0xce>
 49c:	82 2d       	mov	r24, r2
 49e:	90 e0       	ldi	r25, 0x00	; 0
 4a0:	88 16       	cp	r8, r24
 4a2:	99 06       	cpc	r9, r25
 4a4:	a0 f4       	brcc	.+40     	; 0x4ce <__LOCK_REGION_LENGTH__+0xce>
 4a6:	b6 01       	movw	r22, r12
 4a8:	80 e2       	ldi	r24, 0x20	; 32
 4aa:	90 e0       	ldi	r25, 0x00	; 0
 4ac:	33 d1       	rcall	.+614    	; 0x714 <fputc>
 4ae:	2a 94       	dec	r2
 4b0:	f5 cf       	rjmp	.-22     	; 0x49c <__LOCK_REGION_LENGTH__+0x9c>
 4b2:	f5 01       	movw	r30, r10
 4b4:	37 fc       	sbrc	r3, 7
 4b6:	85 91       	lpm	r24, Z+
 4b8:	37 fe       	sbrs	r3, 7
 4ba:	81 91       	ld	r24, Z+
 4bc:	5f 01       	movw	r10, r30
 4be:	b6 01       	movw	r22, r12
 4c0:	90 e0       	ldi	r25, 0x00	; 0
 4c2:	28 d1       	rcall	.+592    	; 0x714 <fputc>
 4c4:	21 10       	cpse	r2, r1
 4c6:	2a 94       	dec	r2
 4c8:	21 e0       	ldi	r18, 0x01	; 1
 4ca:	82 1a       	sub	r8, r18
 4cc:	91 08       	sbc	r9, r1
 4ce:	81 14       	cp	r8, r1
 4d0:	91 04       	cpc	r9, r1
 4d2:	79 f7       	brne	.-34     	; 0x4b2 <__LOCK_REGION_LENGTH__+0xb2>
 4d4:	e1 c0       	rjmp	.+450    	; 0x698 <__LOCK_REGION_LENGTH__+0x298>
 4d6:	84 36       	cpi	r24, 0x64	; 100
 4d8:	11 f0       	breq	.+4      	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
 4da:	89 36       	cpi	r24, 0x69	; 105
 4dc:	39 f5       	brne	.+78     	; 0x52c <__LOCK_REGION_LENGTH__+0x12c>
 4de:	f8 01       	movw	r30, r16
 4e0:	37 fe       	sbrs	r3, 7
 4e2:	07 c0       	rjmp	.+14     	; 0x4f2 <__LOCK_REGION_LENGTH__+0xf2>
 4e4:	60 81       	ld	r22, Z
 4e6:	71 81       	ldd	r23, Z+1	; 0x01
 4e8:	82 81       	ldd	r24, Z+2	; 0x02
 4ea:	93 81       	ldd	r25, Z+3	; 0x03
 4ec:	0c 5f       	subi	r16, 0xFC	; 252
 4ee:	1f 4f       	sbci	r17, 0xFF	; 255
 4f0:	08 c0       	rjmp	.+16     	; 0x502 <__LOCK_REGION_LENGTH__+0x102>
 4f2:	60 81       	ld	r22, Z
 4f4:	71 81       	ldd	r23, Z+1	; 0x01
 4f6:	07 2e       	mov	r0, r23
 4f8:	00 0c       	add	r0, r0
 4fa:	88 0b       	sbc	r24, r24
 4fc:	99 0b       	sbc	r25, r25
 4fe:	0e 5f       	subi	r16, 0xFE	; 254
 500:	1f 4f       	sbci	r17, 0xFF	; 255
 502:	f3 2d       	mov	r31, r3
 504:	ff 76       	andi	r31, 0x6F	; 111
 506:	3f 2e       	mov	r3, r31
 508:	97 ff       	sbrs	r25, 7
 50a:	09 c0       	rjmp	.+18     	; 0x51e <__LOCK_REGION_LENGTH__+0x11e>
 50c:	90 95       	com	r25
 50e:	80 95       	com	r24
 510:	70 95       	com	r23
 512:	61 95       	neg	r22
 514:	7f 4f       	sbci	r23, 0xFF	; 255
 516:	8f 4f       	sbci	r24, 0xFF	; 255
 518:	9f 4f       	sbci	r25, 0xFF	; 255
 51a:	f0 68       	ori	r31, 0x80	; 128
 51c:	3f 2e       	mov	r3, r31
 51e:	2a e0       	ldi	r18, 0x0A	; 10
 520:	30 e0       	ldi	r19, 0x00	; 0
 522:	a3 01       	movw	r20, r6
 524:	33 d1       	rcall	.+614    	; 0x78c <__ultoa_invert>
 526:	88 2e       	mov	r8, r24
 528:	86 18       	sub	r8, r6
 52a:	44 c0       	rjmp	.+136    	; 0x5b4 <__LOCK_REGION_LENGTH__+0x1b4>
 52c:	85 37       	cpi	r24, 0x75	; 117
 52e:	31 f4       	brne	.+12     	; 0x53c <__LOCK_REGION_LENGTH__+0x13c>
 530:	23 2d       	mov	r18, r3
 532:	2f 7e       	andi	r18, 0xEF	; 239
 534:	b2 2e       	mov	r11, r18
 536:	2a e0       	ldi	r18, 0x0A	; 10
 538:	30 e0       	ldi	r19, 0x00	; 0
 53a:	25 c0       	rjmp	.+74     	; 0x586 <__LOCK_REGION_LENGTH__+0x186>
 53c:	93 2d       	mov	r25, r3
 53e:	99 7f       	andi	r25, 0xF9	; 249
 540:	b9 2e       	mov	r11, r25
 542:	8f 36       	cpi	r24, 0x6F	; 111
 544:	c1 f0       	breq	.+48     	; 0x576 <__LOCK_REGION_LENGTH__+0x176>
 546:	18 f4       	brcc	.+6      	; 0x54e <__LOCK_REGION_LENGTH__+0x14e>
 548:	88 35       	cpi	r24, 0x58	; 88
 54a:	79 f0       	breq	.+30     	; 0x56a <__LOCK_REGION_LENGTH__+0x16a>
 54c:	ae c0       	rjmp	.+348    	; 0x6aa <__LOCK_REGION_LENGTH__+0x2aa>
 54e:	80 37       	cpi	r24, 0x70	; 112
 550:	19 f0       	breq	.+6      	; 0x558 <__LOCK_REGION_LENGTH__+0x158>
 552:	88 37       	cpi	r24, 0x78	; 120
 554:	21 f0       	breq	.+8      	; 0x55e <__LOCK_REGION_LENGTH__+0x15e>
 556:	a9 c0       	rjmp	.+338    	; 0x6aa <__LOCK_REGION_LENGTH__+0x2aa>
 558:	e9 2f       	mov	r30, r25
 55a:	e0 61       	ori	r30, 0x10	; 16
 55c:	be 2e       	mov	r11, r30
 55e:	b4 fe       	sbrs	r11, 4
 560:	0d c0       	rjmp	.+26     	; 0x57c <__LOCK_REGION_LENGTH__+0x17c>
 562:	fb 2d       	mov	r31, r11
 564:	f4 60       	ori	r31, 0x04	; 4
 566:	bf 2e       	mov	r11, r31
 568:	09 c0       	rjmp	.+18     	; 0x57c <__LOCK_REGION_LENGTH__+0x17c>
 56a:	34 fe       	sbrs	r3, 4
 56c:	0a c0       	rjmp	.+20     	; 0x582 <__LOCK_REGION_LENGTH__+0x182>
 56e:	29 2f       	mov	r18, r25
 570:	26 60       	ori	r18, 0x06	; 6
 572:	b2 2e       	mov	r11, r18
 574:	06 c0       	rjmp	.+12     	; 0x582 <__LOCK_REGION_LENGTH__+0x182>
 576:	28 e0       	ldi	r18, 0x08	; 8
 578:	30 e0       	ldi	r19, 0x00	; 0
 57a:	05 c0       	rjmp	.+10     	; 0x586 <__LOCK_REGION_LENGTH__+0x186>
 57c:	20 e1       	ldi	r18, 0x10	; 16
 57e:	30 e0       	ldi	r19, 0x00	; 0
 580:	02 c0       	rjmp	.+4      	; 0x586 <__LOCK_REGION_LENGTH__+0x186>
 582:	20 e1       	ldi	r18, 0x10	; 16
 584:	32 e0       	ldi	r19, 0x02	; 2
 586:	f8 01       	movw	r30, r16
 588:	b7 fe       	sbrs	r11, 7
 58a:	07 c0       	rjmp	.+14     	; 0x59a <__LOCK_REGION_LENGTH__+0x19a>
 58c:	60 81       	ld	r22, Z
 58e:	71 81       	ldd	r23, Z+1	; 0x01
 590:	82 81       	ldd	r24, Z+2	; 0x02
 592:	93 81       	ldd	r25, Z+3	; 0x03
 594:	0c 5f       	subi	r16, 0xFC	; 252
 596:	1f 4f       	sbci	r17, 0xFF	; 255
 598:	06 c0       	rjmp	.+12     	; 0x5a6 <__LOCK_REGION_LENGTH__+0x1a6>
 59a:	60 81       	ld	r22, Z
 59c:	71 81       	ldd	r23, Z+1	; 0x01
 59e:	80 e0       	ldi	r24, 0x00	; 0
 5a0:	90 e0       	ldi	r25, 0x00	; 0
 5a2:	0e 5f       	subi	r16, 0xFE	; 254
 5a4:	1f 4f       	sbci	r17, 0xFF	; 255
 5a6:	a3 01       	movw	r20, r6
 5a8:	f1 d0       	rcall	.+482    	; 0x78c <__ultoa_invert>
 5aa:	88 2e       	mov	r8, r24
 5ac:	86 18       	sub	r8, r6
 5ae:	fb 2d       	mov	r31, r11
 5b0:	ff 77       	andi	r31, 0x7F	; 127
 5b2:	3f 2e       	mov	r3, r31
 5b4:	36 fe       	sbrs	r3, 6
 5b6:	0d c0       	rjmp	.+26     	; 0x5d2 <__LOCK_REGION_LENGTH__+0x1d2>
 5b8:	23 2d       	mov	r18, r3
 5ba:	2e 7f       	andi	r18, 0xFE	; 254
 5bc:	a2 2e       	mov	r10, r18
 5be:	89 14       	cp	r8, r9
 5c0:	58 f4       	brcc	.+22     	; 0x5d8 <__LOCK_REGION_LENGTH__+0x1d8>
 5c2:	34 fe       	sbrs	r3, 4
 5c4:	0b c0       	rjmp	.+22     	; 0x5dc <__LOCK_REGION_LENGTH__+0x1dc>
 5c6:	32 fc       	sbrc	r3, 2
 5c8:	09 c0       	rjmp	.+18     	; 0x5dc <__LOCK_REGION_LENGTH__+0x1dc>
 5ca:	83 2d       	mov	r24, r3
 5cc:	8e 7e       	andi	r24, 0xEE	; 238
 5ce:	a8 2e       	mov	r10, r24
 5d0:	05 c0       	rjmp	.+10     	; 0x5dc <__LOCK_REGION_LENGTH__+0x1dc>
 5d2:	b8 2c       	mov	r11, r8
 5d4:	a3 2c       	mov	r10, r3
 5d6:	03 c0       	rjmp	.+6      	; 0x5de <__LOCK_REGION_LENGTH__+0x1de>
 5d8:	b8 2c       	mov	r11, r8
 5da:	01 c0       	rjmp	.+2      	; 0x5de <__LOCK_REGION_LENGTH__+0x1de>
 5dc:	b9 2c       	mov	r11, r9
 5de:	a4 fe       	sbrs	r10, 4
 5e0:	0f c0       	rjmp	.+30     	; 0x600 <__LOCK_REGION_LENGTH__+0x200>
 5e2:	fe 01       	movw	r30, r28
 5e4:	e8 0d       	add	r30, r8
 5e6:	f1 1d       	adc	r31, r1
 5e8:	80 81       	ld	r24, Z
 5ea:	80 33       	cpi	r24, 0x30	; 48
 5ec:	21 f4       	brne	.+8      	; 0x5f6 <__LOCK_REGION_LENGTH__+0x1f6>
 5ee:	9a 2d       	mov	r25, r10
 5f0:	99 7e       	andi	r25, 0xE9	; 233
 5f2:	a9 2e       	mov	r10, r25
 5f4:	09 c0       	rjmp	.+18     	; 0x608 <__LOCK_REGION_LENGTH__+0x208>
 5f6:	a2 fe       	sbrs	r10, 2
 5f8:	06 c0       	rjmp	.+12     	; 0x606 <__LOCK_REGION_LENGTH__+0x206>
 5fa:	b3 94       	inc	r11
 5fc:	b3 94       	inc	r11
 5fe:	04 c0       	rjmp	.+8      	; 0x608 <__LOCK_REGION_LENGTH__+0x208>
 600:	8a 2d       	mov	r24, r10
 602:	86 78       	andi	r24, 0x86	; 134
 604:	09 f0       	breq	.+2      	; 0x608 <__LOCK_REGION_LENGTH__+0x208>
 606:	b3 94       	inc	r11
 608:	a3 fc       	sbrc	r10, 3
 60a:	10 c0       	rjmp	.+32     	; 0x62c <__LOCK_REGION_LENGTH__+0x22c>
 60c:	a0 fe       	sbrs	r10, 0
 60e:	06 c0       	rjmp	.+12     	; 0x61c <__LOCK_REGION_LENGTH__+0x21c>
 610:	b2 14       	cp	r11, r2
 612:	80 f4       	brcc	.+32     	; 0x634 <__LOCK_REGION_LENGTH__+0x234>
 614:	28 0c       	add	r2, r8
 616:	92 2c       	mov	r9, r2
 618:	9b 18       	sub	r9, r11
 61a:	0d c0       	rjmp	.+26     	; 0x636 <__LOCK_REGION_LENGTH__+0x236>
 61c:	b2 14       	cp	r11, r2
 61e:	58 f4       	brcc	.+22     	; 0x636 <__LOCK_REGION_LENGTH__+0x236>
 620:	b6 01       	movw	r22, r12
 622:	80 e2       	ldi	r24, 0x20	; 32
 624:	90 e0       	ldi	r25, 0x00	; 0
 626:	76 d0       	rcall	.+236    	; 0x714 <fputc>
 628:	b3 94       	inc	r11
 62a:	f8 cf       	rjmp	.-16     	; 0x61c <__LOCK_REGION_LENGTH__+0x21c>
 62c:	b2 14       	cp	r11, r2
 62e:	18 f4       	brcc	.+6      	; 0x636 <__LOCK_REGION_LENGTH__+0x236>
 630:	2b 18       	sub	r2, r11
 632:	02 c0       	rjmp	.+4      	; 0x638 <__LOCK_REGION_LENGTH__+0x238>
 634:	98 2c       	mov	r9, r8
 636:	21 2c       	mov	r2, r1
 638:	a4 fe       	sbrs	r10, 4
 63a:	0f c0       	rjmp	.+30     	; 0x65a <__LOCK_REGION_LENGTH__+0x25a>
 63c:	b6 01       	movw	r22, r12
 63e:	80 e3       	ldi	r24, 0x30	; 48
 640:	90 e0       	ldi	r25, 0x00	; 0
 642:	68 d0       	rcall	.+208    	; 0x714 <fputc>
 644:	a2 fe       	sbrs	r10, 2
 646:	16 c0       	rjmp	.+44     	; 0x674 <__LOCK_REGION_LENGTH__+0x274>
 648:	a1 fc       	sbrc	r10, 1
 64a:	03 c0       	rjmp	.+6      	; 0x652 <__LOCK_REGION_LENGTH__+0x252>
 64c:	88 e7       	ldi	r24, 0x78	; 120
 64e:	90 e0       	ldi	r25, 0x00	; 0
 650:	02 c0       	rjmp	.+4      	; 0x656 <__LOCK_REGION_LENGTH__+0x256>
 652:	88 e5       	ldi	r24, 0x58	; 88
 654:	90 e0       	ldi	r25, 0x00	; 0
 656:	b6 01       	movw	r22, r12
 658:	0c c0       	rjmp	.+24     	; 0x672 <__LOCK_REGION_LENGTH__+0x272>
 65a:	8a 2d       	mov	r24, r10
 65c:	86 78       	andi	r24, 0x86	; 134
 65e:	51 f0       	breq	.+20     	; 0x674 <__LOCK_REGION_LENGTH__+0x274>
 660:	a1 fe       	sbrs	r10, 1
 662:	02 c0       	rjmp	.+4      	; 0x668 <__LOCK_REGION_LENGTH__+0x268>
 664:	8b e2       	ldi	r24, 0x2B	; 43
 666:	01 c0       	rjmp	.+2      	; 0x66a <__LOCK_REGION_LENGTH__+0x26a>
 668:	80 e2       	ldi	r24, 0x20	; 32
 66a:	a7 fc       	sbrc	r10, 7
 66c:	8d e2       	ldi	r24, 0x2D	; 45
 66e:	b6 01       	movw	r22, r12
 670:	90 e0       	ldi	r25, 0x00	; 0
 672:	50 d0       	rcall	.+160    	; 0x714 <fputc>
 674:	89 14       	cp	r8, r9
 676:	30 f4       	brcc	.+12     	; 0x684 <__LOCK_REGION_LENGTH__+0x284>
 678:	b6 01       	movw	r22, r12
 67a:	80 e3       	ldi	r24, 0x30	; 48
 67c:	90 e0       	ldi	r25, 0x00	; 0
 67e:	4a d0       	rcall	.+148    	; 0x714 <fputc>
 680:	9a 94       	dec	r9
 682:	f8 cf       	rjmp	.-16     	; 0x674 <__LOCK_REGION_LENGTH__+0x274>
 684:	8a 94       	dec	r8
 686:	f3 01       	movw	r30, r6
 688:	e8 0d       	add	r30, r8
 68a:	f1 1d       	adc	r31, r1
 68c:	80 81       	ld	r24, Z
 68e:	b6 01       	movw	r22, r12
 690:	90 e0       	ldi	r25, 0x00	; 0
 692:	40 d0       	rcall	.+128    	; 0x714 <fputc>
 694:	81 10       	cpse	r8, r1
 696:	f6 cf       	rjmp	.-20     	; 0x684 <__LOCK_REGION_LENGTH__+0x284>
 698:	22 20       	and	r2, r2
 69a:	09 f4       	brne	.+2      	; 0x69e <__LOCK_REGION_LENGTH__+0x29e>
 69c:	4e ce       	rjmp	.-868    	; 0x33a <vfprintf+0x4c>
 69e:	b6 01       	movw	r22, r12
 6a0:	80 e2       	ldi	r24, 0x20	; 32
 6a2:	90 e0       	ldi	r25, 0x00	; 0
 6a4:	37 d0       	rcall	.+110    	; 0x714 <fputc>
 6a6:	2a 94       	dec	r2
 6a8:	f7 cf       	rjmp	.-18     	; 0x698 <__LOCK_REGION_LENGTH__+0x298>
 6aa:	f6 01       	movw	r30, r12
 6ac:	86 81       	ldd	r24, Z+6	; 0x06
 6ae:	97 81       	ldd	r25, Z+7	; 0x07
 6b0:	02 c0       	rjmp	.+4      	; 0x6b6 <__LOCK_REGION_LENGTH__+0x2b6>
 6b2:	8f ef       	ldi	r24, 0xFF	; 255
 6b4:	9f ef       	ldi	r25, 0xFF	; 255
 6b6:	2b 96       	adiw	r28, 0x0b	; 11
 6b8:	0f b6       	in	r0, 0x3f	; 63
 6ba:	f8 94       	cli
 6bc:	de bf       	out	0x3e, r29	; 62
 6be:	0f be       	out	0x3f, r0	; 63
 6c0:	cd bf       	out	0x3d, r28	; 61
 6c2:	df 91       	pop	r29
 6c4:	cf 91       	pop	r28
 6c6:	1f 91       	pop	r17
 6c8:	0f 91       	pop	r16
 6ca:	ff 90       	pop	r15
 6cc:	ef 90       	pop	r14
 6ce:	df 90       	pop	r13
 6d0:	cf 90       	pop	r12
 6d2:	bf 90       	pop	r11
 6d4:	af 90       	pop	r10
 6d6:	9f 90       	pop	r9
 6d8:	8f 90       	pop	r8
 6da:	7f 90       	pop	r7
 6dc:	6f 90       	pop	r6
 6de:	5f 90       	pop	r5
 6e0:	4f 90       	pop	r4
 6e2:	3f 90       	pop	r3
 6e4:	2f 90       	pop	r2
 6e6:	08 95       	ret

000006e8 <strnlen_P>:
 6e8:	fc 01       	movw	r30, r24
 6ea:	05 90       	lpm	r0, Z+
 6ec:	61 50       	subi	r22, 0x01	; 1
 6ee:	70 40       	sbci	r23, 0x00	; 0
 6f0:	01 10       	cpse	r0, r1
 6f2:	d8 f7       	brcc	.-10     	; 0x6ea <strnlen_P+0x2>
 6f4:	80 95       	com	r24
 6f6:	90 95       	com	r25
 6f8:	8e 0f       	add	r24, r30
 6fa:	9f 1f       	adc	r25, r31
 6fc:	08 95       	ret

000006fe <strnlen>:
 6fe:	fc 01       	movw	r30, r24
 700:	61 50       	subi	r22, 0x01	; 1
 702:	70 40       	sbci	r23, 0x00	; 0
 704:	01 90       	ld	r0, Z+
 706:	01 10       	cpse	r0, r1
 708:	d8 f7       	brcc	.-10     	; 0x700 <strnlen+0x2>
 70a:	80 95       	com	r24
 70c:	90 95       	com	r25
 70e:	8e 0f       	add	r24, r30
 710:	9f 1f       	adc	r25, r31
 712:	08 95       	ret

00000714 <fputc>:
 714:	0f 93       	push	r16
 716:	1f 93       	push	r17
 718:	cf 93       	push	r28
 71a:	df 93       	push	r29
 71c:	fb 01       	movw	r30, r22
 71e:	23 81       	ldd	r18, Z+3	; 0x03
 720:	21 fd       	sbrc	r18, 1
 722:	03 c0       	rjmp	.+6      	; 0x72a <fputc+0x16>
 724:	8f ef       	ldi	r24, 0xFF	; 255
 726:	9f ef       	ldi	r25, 0xFF	; 255
 728:	2c c0       	rjmp	.+88     	; 0x782 <fputc+0x6e>
 72a:	22 ff       	sbrs	r18, 2
 72c:	16 c0       	rjmp	.+44     	; 0x75a <fputc+0x46>
 72e:	46 81       	ldd	r20, Z+6	; 0x06
 730:	57 81       	ldd	r21, Z+7	; 0x07
 732:	24 81       	ldd	r18, Z+4	; 0x04
 734:	35 81       	ldd	r19, Z+5	; 0x05
 736:	42 17       	cp	r20, r18
 738:	53 07       	cpc	r21, r19
 73a:	44 f4       	brge	.+16     	; 0x74c <fputc+0x38>
 73c:	a0 81       	ld	r26, Z
 73e:	b1 81       	ldd	r27, Z+1	; 0x01
 740:	9d 01       	movw	r18, r26
 742:	2f 5f       	subi	r18, 0xFF	; 255
 744:	3f 4f       	sbci	r19, 0xFF	; 255
 746:	31 83       	std	Z+1, r19	; 0x01
 748:	20 83       	st	Z, r18
 74a:	8c 93       	st	X, r24
 74c:	26 81       	ldd	r18, Z+6	; 0x06
 74e:	37 81       	ldd	r19, Z+7	; 0x07
 750:	2f 5f       	subi	r18, 0xFF	; 255
 752:	3f 4f       	sbci	r19, 0xFF	; 255
 754:	37 83       	std	Z+7, r19	; 0x07
 756:	26 83       	std	Z+6, r18	; 0x06
 758:	14 c0       	rjmp	.+40     	; 0x782 <fputc+0x6e>
 75a:	8b 01       	movw	r16, r22
 75c:	ec 01       	movw	r28, r24
 75e:	fb 01       	movw	r30, r22
 760:	00 84       	ldd	r0, Z+8	; 0x08
 762:	f1 85       	ldd	r31, Z+9	; 0x09
 764:	e0 2d       	mov	r30, r0
 766:	19 95       	eicall
 768:	89 2b       	or	r24, r25
 76a:	e1 f6       	brne	.-72     	; 0x724 <fputc+0x10>
 76c:	d8 01       	movw	r26, r16
 76e:	16 96       	adiw	r26, 0x06	; 6
 770:	8d 91       	ld	r24, X+
 772:	9c 91       	ld	r25, X
 774:	17 97       	sbiw	r26, 0x07	; 7
 776:	01 96       	adiw	r24, 0x01	; 1
 778:	17 96       	adiw	r26, 0x07	; 7
 77a:	9c 93       	st	X, r25
 77c:	8e 93       	st	-X, r24
 77e:	16 97       	sbiw	r26, 0x06	; 6
 780:	ce 01       	movw	r24, r28
 782:	df 91       	pop	r29
 784:	cf 91       	pop	r28
 786:	1f 91       	pop	r17
 788:	0f 91       	pop	r16
 78a:	08 95       	ret

0000078c <__ultoa_invert>:
 78c:	fa 01       	movw	r30, r20
 78e:	aa 27       	eor	r26, r26
 790:	28 30       	cpi	r18, 0x08	; 8
 792:	51 f1       	breq	.+84     	; 0x7e8 <__ultoa_invert+0x5c>
 794:	20 31       	cpi	r18, 0x10	; 16
 796:	81 f1       	breq	.+96     	; 0x7f8 <__ultoa_invert+0x6c>
 798:	e8 94       	clt
 79a:	6f 93       	push	r22
 79c:	6e 7f       	andi	r22, 0xFE	; 254
 79e:	6e 5f       	subi	r22, 0xFE	; 254
 7a0:	7f 4f       	sbci	r23, 0xFF	; 255
 7a2:	8f 4f       	sbci	r24, 0xFF	; 255
 7a4:	9f 4f       	sbci	r25, 0xFF	; 255
 7a6:	af 4f       	sbci	r26, 0xFF	; 255
 7a8:	b1 e0       	ldi	r27, 0x01	; 1
 7aa:	3e d0       	rcall	.+124    	; 0x828 <__ultoa_invert+0x9c>
 7ac:	b4 e0       	ldi	r27, 0x04	; 4
 7ae:	3c d0       	rcall	.+120    	; 0x828 <__ultoa_invert+0x9c>
 7b0:	67 0f       	add	r22, r23
 7b2:	78 1f       	adc	r23, r24
 7b4:	89 1f       	adc	r24, r25
 7b6:	9a 1f       	adc	r25, r26
 7b8:	a1 1d       	adc	r26, r1
 7ba:	68 0f       	add	r22, r24
 7bc:	79 1f       	adc	r23, r25
 7be:	8a 1f       	adc	r24, r26
 7c0:	91 1d       	adc	r25, r1
 7c2:	a1 1d       	adc	r26, r1
 7c4:	6a 0f       	add	r22, r26
 7c6:	71 1d       	adc	r23, r1
 7c8:	81 1d       	adc	r24, r1
 7ca:	91 1d       	adc	r25, r1
 7cc:	a1 1d       	adc	r26, r1
 7ce:	20 d0       	rcall	.+64     	; 0x810 <__ultoa_invert+0x84>
 7d0:	09 f4       	brne	.+2      	; 0x7d4 <__ultoa_invert+0x48>
 7d2:	68 94       	set
 7d4:	3f 91       	pop	r19
 7d6:	2a e0       	ldi	r18, 0x0A	; 10
 7d8:	26 9f       	mul	r18, r22
 7da:	11 24       	eor	r1, r1
 7dc:	30 19       	sub	r19, r0
 7de:	30 5d       	subi	r19, 0xD0	; 208
 7e0:	31 93       	st	Z+, r19
 7e2:	de f6       	brtc	.-74     	; 0x79a <__ultoa_invert+0xe>
 7e4:	cf 01       	movw	r24, r30
 7e6:	08 95       	ret
 7e8:	46 2f       	mov	r20, r22
 7ea:	47 70       	andi	r20, 0x07	; 7
 7ec:	40 5d       	subi	r20, 0xD0	; 208
 7ee:	41 93       	st	Z+, r20
 7f0:	b3 e0       	ldi	r27, 0x03	; 3
 7f2:	0f d0       	rcall	.+30     	; 0x812 <__ultoa_invert+0x86>
 7f4:	c9 f7       	brne	.-14     	; 0x7e8 <__ultoa_invert+0x5c>
 7f6:	f6 cf       	rjmp	.-20     	; 0x7e4 <__ultoa_invert+0x58>
 7f8:	46 2f       	mov	r20, r22
 7fa:	4f 70       	andi	r20, 0x0F	; 15
 7fc:	40 5d       	subi	r20, 0xD0	; 208
 7fe:	4a 33       	cpi	r20, 0x3A	; 58
 800:	18 f0       	brcs	.+6      	; 0x808 <__ultoa_invert+0x7c>
 802:	49 5d       	subi	r20, 0xD9	; 217
 804:	31 fd       	sbrc	r19, 1
 806:	40 52       	subi	r20, 0x20	; 32
 808:	41 93       	st	Z+, r20
 80a:	02 d0       	rcall	.+4      	; 0x810 <__ultoa_invert+0x84>
 80c:	a9 f7       	brne	.-22     	; 0x7f8 <__ultoa_invert+0x6c>
 80e:	ea cf       	rjmp	.-44     	; 0x7e4 <__ultoa_invert+0x58>
 810:	b4 e0       	ldi	r27, 0x04	; 4
 812:	a6 95       	lsr	r26
 814:	97 95       	ror	r25
 816:	87 95       	ror	r24
 818:	77 95       	ror	r23
 81a:	67 95       	ror	r22
 81c:	ba 95       	dec	r27
 81e:	c9 f7       	brne	.-14     	; 0x812 <__ultoa_invert+0x86>
 820:	00 97       	sbiw	r24, 0x00	; 0
 822:	61 05       	cpc	r22, r1
 824:	71 05       	cpc	r23, r1
 826:	08 95       	ret
 828:	9b 01       	movw	r18, r22
 82a:	ac 01       	movw	r20, r24
 82c:	0a 2e       	mov	r0, r26
 82e:	06 94       	lsr	r0
 830:	57 95       	ror	r21
 832:	47 95       	ror	r20
 834:	37 95       	ror	r19
 836:	27 95       	ror	r18
 838:	ba 95       	dec	r27
 83a:	c9 f7       	brne	.-14     	; 0x82e <__ultoa_invert+0xa2>
 83c:	62 0f       	add	r22, r18
 83e:	73 1f       	adc	r23, r19
 840:	84 1f       	adc	r24, r20
 842:	95 1f       	adc	r25, r21
 844:	a0 1d       	adc	r26, r0
 846:	08 95       	ret

00000848 <_exit>:
 848:	f8 94       	cli

0000084a <__stop_program>:
 84a:	ff cf       	rjmp	.-2      	; 0x84a <__stop_program>
